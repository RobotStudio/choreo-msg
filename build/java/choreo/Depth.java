// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor/depth.proto

package choreo;

public final class Depth {
  private Depth() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LaserEchoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.LaserEcho)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float32> 
        getEchoesList();
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    choreo.FloatOuterClass.Float32 getEchoes(int index);
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    int getEchoesCount();
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getEchoesOrBuilderList();
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getEchoesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.LaserEcho}
   */
  public  static final class LaserEcho extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.LaserEcho)
      LaserEchoOrBuilder {
    // Use LaserEcho.newBuilder() to construct.
    private LaserEcho(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LaserEcho() {
      echoes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LaserEcho(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                echoes_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>();
                mutable_bitField0_ |= 0x00000001;
              }
              echoes_.add(
                  input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          echoes_ = java.util.Collections.unmodifiableList(echoes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_LaserEcho_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_LaserEcho_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.LaserEcho.class, choreo.Depth.LaserEcho.Builder.class);
    }

    public static final int ECHOES_FIELD_NUMBER = 1;
    private java.util.List<choreo.FloatOuterClass.Float32> echoes_;
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float32> getEchoesList() {
      return echoes_;
    }
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getEchoesOrBuilderList() {
      return echoes_;
    }
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    public int getEchoesCount() {
      return echoes_.size();
    }
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    public choreo.FloatOuterClass.Float32 getEchoes(int index) {
      return echoes_.get(index);
    }
    /**
     * <code>repeated .choreo.Float32 echoes = 1;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getEchoesOrBuilder(
        int index) {
      return echoes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < echoes_.size(); i++) {
        output.writeMessage(1, echoes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < echoes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, echoes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.LaserEcho)) {
        return super.equals(obj);
      }
      choreo.Depth.LaserEcho other = (choreo.Depth.LaserEcho) obj;

      boolean result = true;
      result = result && getEchoesList()
          .equals(other.getEchoesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEchoesCount() > 0) {
        hash = (37 * hash) + ECHOES_FIELD_NUMBER;
        hash = (53 * hash) + getEchoesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.LaserEcho parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserEcho parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserEcho parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.LaserEcho parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserEcho parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserEcho parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.LaserEcho prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.LaserEcho}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.LaserEcho)
        choreo.Depth.LaserEchoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_LaserEcho_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_LaserEcho_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.LaserEcho.class, choreo.Depth.LaserEcho.Builder.class);
      }

      // Construct using choreo.Depth.LaserEcho.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEchoesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (echoesBuilder_ == null) {
          echoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          echoesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_LaserEcho_descriptor;
      }

      public choreo.Depth.LaserEcho getDefaultInstanceForType() {
        return choreo.Depth.LaserEcho.getDefaultInstance();
      }

      public choreo.Depth.LaserEcho build() {
        choreo.Depth.LaserEcho result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.LaserEcho buildPartial() {
        choreo.Depth.LaserEcho result = new choreo.Depth.LaserEcho(this);
        int from_bitField0_ = bitField0_;
        if (echoesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            echoes_ = java.util.Collections.unmodifiableList(echoes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.echoes_ = echoes_;
        } else {
          result.echoes_ = echoesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.LaserEcho) {
          return mergeFrom((choreo.Depth.LaserEcho)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.LaserEcho other) {
        if (other == choreo.Depth.LaserEcho.getDefaultInstance()) return this;
        if (echoesBuilder_ == null) {
          if (!other.echoes_.isEmpty()) {
            if (echoes_.isEmpty()) {
              echoes_ = other.echoes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEchoesIsMutable();
              echoes_.addAll(other.echoes_);
            }
            onChanged();
          }
        } else {
          if (!other.echoes_.isEmpty()) {
            if (echoesBuilder_.isEmpty()) {
              echoesBuilder_.dispose();
              echoesBuilder_ = null;
              echoes_ = other.echoes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              echoesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEchoesFieldBuilder() : null;
            } else {
              echoesBuilder_.addAllMessages(other.echoes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.LaserEcho parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.LaserEcho) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<choreo.FloatOuterClass.Float32> echoes_ =
        java.util.Collections.emptyList();
      private void ensureEchoesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          echoes_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>(echoes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> echoesBuilder_;

      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32> getEchoesList() {
        if (echoesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(echoes_);
        } else {
          return echoesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public int getEchoesCount() {
        if (echoesBuilder_ == null) {
          return echoes_.size();
        } else {
          return echoesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public choreo.FloatOuterClass.Float32 getEchoes(int index) {
        if (echoesBuilder_ == null) {
          return echoes_.get(index);
        } else {
          return echoesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder setEchoes(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (echoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEchoesIsMutable();
          echoes_.set(index, value);
          onChanged();
        } else {
          echoesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder setEchoes(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (echoesBuilder_ == null) {
          ensureEchoesIsMutable();
          echoes_.set(index, builderForValue.build());
          onChanged();
        } else {
          echoesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder addEchoes(choreo.FloatOuterClass.Float32 value) {
        if (echoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEchoesIsMutable();
          echoes_.add(value);
          onChanged();
        } else {
          echoesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder addEchoes(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (echoesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEchoesIsMutable();
          echoes_.add(index, value);
          onChanged();
        } else {
          echoesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder addEchoes(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (echoesBuilder_ == null) {
          ensureEchoesIsMutable();
          echoes_.add(builderForValue.build());
          onChanged();
        } else {
          echoesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder addEchoes(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (echoesBuilder_ == null) {
          ensureEchoesIsMutable();
          echoes_.add(index, builderForValue.build());
          onChanged();
        } else {
          echoesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder addAllEchoes(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float32> values) {
        if (echoesBuilder_ == null) {
          ensureEchoesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, echoes_);
          onChanged();
        } else {
          echoesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder clearEchoes() {
        if (echoesBuilder_ == null) {
          echoes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          echoesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public Builder removeEchoes(int index) {
        if (echoesBuilder_ == null) {
          ensureEchoesIsMutable();
          echoes_.remove(index);
          onChanged();
        } else {
          echoesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getEchoesBuilder(
          int index) {
        return getEchoesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getEchoesOrBuilder(
          int index) {
        if (echoesBuilder_ == null) {
          return echoes_.get(index);  } else {
          return echoesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
           getEchoesOrBuilderList() {
        if (echoesBuilder_ != null) {
          return echoesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(echoes_);
        }
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addEchoesBuilder() {
        return getEchoesFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addEchoesBuilder(
          int index) {
        return getEchoesFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 echoes = 1;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32.Builder> 
           getEchoesBuilderList() {
        return getEchoesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getEchoesFieldBuilder() {
        if (echoesBuilder_ == null) {
          echoesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  echoes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          echoes_ = null;
        }
        return echoesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.LaserEcho)
    }

    // @@protoc_insertion_point(class_scope:choreo.LaserEcho)
    private static final choreo.Depth.LaserEcho DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.LaserEcho();
    }

    public static choreo.Depth.LaserEcho getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LaserEcho>
        PARSER = new com.google.protobuf.AbstractParser<LaserEcho>() {
      public LaserEcho parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LaserEcho(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LaserEcho> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LaserEcho> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.LaserEcho getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LaserScanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.LaserScan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    boolean hasAngleMin();
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleMin();
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder();

    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    boolean hasAngleMax();
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleMax();
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder();

    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    boolean hasAngleIncrement();
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleIncrement();
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder();

    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    boolean hasTimeIncrement();
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    choreo.FloatOuterClass.Float32 getTimeIncrement();
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder();

    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    boolean hasScanTime();
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    choreo.FloatOuterClass.Float32 getScanTime();
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder();

    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    boolean hasRangeMin();
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    choreo.FloatOuterClass.Float32 getRangeMin();
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder();

    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    boolean hasRangeMax();
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    choreo.FloatOuterClass.Float32 getRangeMax();
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder();

    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float32> 
        getRangesList();
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    choreo.FloatOuterClass.Float32 getRanges(int index);
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float32> 
        getIntensitiesList();
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    choreo.FloatOuterClass.Float32 getIntensities(int index);
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    int getIntensitiesCount();
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getIntensitiesOrBuilderList();
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getIntensitiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.LaserScan}
   */
  public  static final class LaserScan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.LaserScan)
      LaserScanOrBuilder {
    // Use LaserScan.newBuilder() to construct.
    private LaserScan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LaserScan() {
      ranges_ = java.util.Collections.emptyList();
      intensities_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LaserScan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleMin_ != null) {
                subBuilder = angleMin_.toBuilder();
              }
              angleMin_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleMin_);
                angleMin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleMax_ != null) {
                subBuilder = angleMax_.toBuilder();
              }
              angleMax_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleMax_);
                angleMax_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleIncrement_ != null) {
                subBuilder = angleIncrement_.toBuilder();
              }
              angleIncrement_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleIncrement_);
                angleIncrement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (timeIncrement_ != null) {
                subBuilder = timeIncrement_.toBuilder();
              }
              timeIncrement_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeIncrement_);
                timeIncrement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (scanTime_ != null) {
                subBuilder = scanTime_.toBuilder();
              }
              scanTime_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scanTime_);
                scanTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (rangeMin_ != null) {
                subBuilder = rangeMin_.toBuilder();
              }
              rangeMin_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rangeMin_);
                rangeMin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (rangeMax_ != null) {
                subBuilder = rangeMax_.toBuilder();
              }
              rangeMax_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rangeMax_);
                rangeMax_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                ranges_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>();
                mutable_bitField0_ |= 0x00000100;
              }
              ranges_.add(
                  input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                intensities_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>();
                mutable_bitField0_ |= 0x00000200;
              }
              intensities_.add(
                  input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          intensities_ = java.util.Collections.unmodifiableList(intensities_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_LaserScan_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_LaserScan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.LaserScan.class, choreo.Depth.LaserScan.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ANGLE_MIN_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float32 angleMin_;
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public boolean hasAngleMin() {
      return angleMin_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleMin() {
      return angleMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
    }
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder() {
      return getAngleMin();
    }

    public static final int ANGLE_MAX_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float32 angleMax_;
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public boolean hasAngleMax() {
      return angleMax_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleMax() {
      return angleMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
    }
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder() {
      return getAngleMax();
    }

    public static final int ANGLE_INCREMENT_FIELD_NUMBER = 4;
    private choreo.FloatOuterClass.Float32 angleIncrement_;
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public boolean hasAngleIncrement() {
      return angleIncrement_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleIncrement() {
      return angleIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
    }
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder() {
      return getAngleIncrement();
    }

    public static final int TIME_INCREMENT_FIELD_NUMBER = 5;
    private choreo.FloatOuterClass.Float32 timeIncrement_;
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public boolean hasTimeIncrement() {
      return timeIncrement_ != null;
    }
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public choreo.FloatOuterClass.Float32 getTimeIncrement() {
      return timeIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
    }
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder() {
      return getTimeIncrement();
    }

    public static final int SCAN_TIME_FIELD_NUMBER = 6;
    private choreo.FloatOuterClass.Float32 scanTime_;
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public boolean hasScanTime() {
      return scanTime_ != null;
    }
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public choreo.FloatOuterClass.Float32 getScanTime() {
      return scanTime_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
    }
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder() {
      return getScanTime();
    }

    public static final int RANGE_MIN_FIELD_NUMBER = 7;
    private choreo.FloatOuterClass.Float32 rangeMin_;
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public boolean hasRangeMin() {
      return rangeMin_ != null;
    }
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public choreo.FloatOuterClass.Float32 getRangeMin() {
      return rangeMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
    }
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder() {
      return getRangeMin();
    }

    public static final int RANGE_MAX_FIELD_NUMBER = 8;
    private choreo.FloatOuterClass.Float32 rangeMax_;
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public boolean hasRangeMax() {
      return rangeMax_ != null;
    }
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public choreo.FloatOuterClass.Float32 getRangeMax() {
      return rangeMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
    }
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder() {
      return getRangeMax();
    }

    public static final int RANGES_FIELD_NUMBER = 9;
    private java.util.List<choreo.FloatOuterClass.Float32> ranges_;
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float32> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    public choreo.FloatOuterClass.Float32 getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .choreo.Float32 ranges = 9;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int INTENSITIES_FIELD_NUMBER = 10;
    private java.util.List<choreo.FloatOuterClass.Float32> intensities_;
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float32> getIntensitiesList() {
      return intensities_;
    }
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getIntensitiesOrBuilderList() {
      return intensities_;
    }
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    public int getIntensitiesCount() {
      return intensities_.size();
    }
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    public choreo.FloatOuterClass.Float32 getIntensities(int index) {
      return intensities_.get(index);
    }
    /**
     * <code>repeated .choreo.Float32 intensities = 10;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getIntensitiesOrBuilder(
        int index) {
      return intensities_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (angleMin_ != null) {
        output.writeMessage(2, getAngleMin());
      }
      if (angleMax_ != null) {
        output.writeMessage(3, getAngleMax());
      }
      if (angleIncrement_ != null) {
        output.writeMessage(4, getAngleIncrement());
      }
      if (timeIncrement_ != null) {
        output.writeMessage(5, getTimeIncrement());
      }
      if (scanTime_ != null) {
        output.writeMessage(6, getScanTime());
      }
      if (rangeMin_ != null) {
        output.writeMessage(7, getRangeMin());
      }
      if (rangeMax_ != null) {
        output.writeMessage(8, getRangeMax());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(9, ranges_.get(i));
      }
      for (int i = 0; i < intensities_.size(); i++) {
        output.writeMessage(10, intensities_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (angleMin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAngleMin());
      }
      if (angleMax_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAngleMax());
      }
      if (angleIncrement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAngleIncrement());
      }
      if (timeIncrement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimeIncrement());
      }
      if (scanTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getScanTime());
      }
      if (rangeMin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRangeMin());
      }
      if (rangeMax_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRangeMax());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, ranges_.get(i));
      }
      for (int i = 0; i < intensities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, intensities_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.LaserScan)) {
        return super.equals(obj);
      }
      choreo.Depth.LaserScan other = (choreo.Depth.LaserScan) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasAngleMin() == other.hasAngleMin());
      if (hasAngleMin()) {
        result = result && getAngleMin()
            .equals(other.getAngleMin());
      }
      result = result && (hasAngleMax() == other.hasAngleMax());
      if (hasAngleMax()) {
        result = result && getAngleMax()
            .equals(other.getAngleMax());
      }
      result = result && (hasAngleIncrement() == other.hasAngleIncrement());
      if (hasAngleIncrement()) {
        result = result && getAngleIncrement()
            .equals(other.getAngleIncrement());
      }
      result = result && (hasTimeIncrement() == other.hasTimeIncrement());
      if (hasTimeIncrement()) {
        result = result && getTimeIncrement()
            .equals(other.getTimeIncrement());
      }
      result = result && (hasScanTime() == other.hasScanTime());
      if (hasScanTime()) {
        result = result && getScanTime()
            .equals(other.getScanTime());
      }
      result = result && (hasRangeMin() == other.hasRangeMin());
      if (hasRangeMin()) {
        result = result && getRangeMin()
            .equals(other.getRangeMin());
      }
      result = result && (hasRangeMax() == other.hasRangeMax());
      if (hasRangeMax()) {
        result = result && getRangeMax()
            .equals(other.getRangeMax());
      }
      result = result && getRangesList()
          .equals(other.getRangesList());
      result = result && getIntensitiesList()
          .equals(other.getIntensitiesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasAngleMin()) {
        hash = (37 * hash) + ANGLE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + getAngleMin().hashCode();
      }
      if (hasAngleMax()) {
        hash = (37 * hash) + ANGLE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + getAngleMax().hashCode();
      }
      if (hasAngleIncrement()) {
        hash = (37 * hash) + ANGLE_INCREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getAngleIncrement().hashCode();
      }
      if (hasTimeIncrement()) {
        hash = (37 * hash) + TIME_INCREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeIncrement().hashCode();
      }
      if (hasScanTime()) {
        hash = (37 * hash) + SCAN_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getScanTime().hashCode();
      }
      if (hasRangeMin()) {
        hash = (37 * hash) + RANGE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + getRangeMin().hashCode();
      }
      if (hasRangeMax()) {
        hash = (37 * hash) + RANGE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + getRangeMax().hashCode();
      }
      if (getRangesCount() > 0) {
        hash = (37 * hash) + RANGES_FIELD_NUMBER;
        hash = (53 * hash) + getRangesList().hashCode();
      }
      if (getIntensitiesCount() > 0) {
        hash = (37 * hash) + INTENSITIES_FIELD_NUMBER;
        hash = (53 * hash) + getIntensitiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.LaserScan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserScan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserScan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserScan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserScan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.LaserScan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.LaserScan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserScan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.LaserScan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserScan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.LaserScan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.LaserScan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.LaserScan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.LaserScan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.LaserScan)
        choreo.Depth.LaserScanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_LaserScan_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_LaserScan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.LaserScan.class, choreo.Depth.LaserScan.Builder.class);
      }

      // Construct using choreo.Depth.LaserScan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRangesFieldBuilder();
          getIntensitiesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (angleMinBuilder_ == null) {
          angleMin_ = null;
        } else {
          angleMin_ = null;
          angleMinBuilder_ = null;
        }
        if (angleMaxBuilder_ == null) {
          angleMax_ = null;
        } else {
          angleMax_ = null;
          angleMaxBuilder_ = null;
        }
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = null;
        } else {
          angleIncrement_ = null;
          angleIncrementBuilder_ = null;
        }
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = null;
        } else {
          timeIncrement_ = null;
          timeIncrementBuilder_ = null;
        }
        if (scanTimeBuilder_ == null) {
          scanTime_ = null;
        } else {
          scanTime_ = null;
          scanTimeBuilder_ = null;
        }
        if (rangeMinBuilder_ == null) {
          rangeMin_ = null;
        } else {
          rangeMin_ = null;
          rangeMinBuilder_ = null;
        }
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = null;
        } else {
          rangeMax_ = null;
          rangeMaxBuilder_ = null;
        }
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          rangesBuilder_.clear();
        }
        if (intensitiesBuilder_ == null) {
          intensities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          intensitiesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_LaserScan_descriptor;
      }

      public choreo.Depth.LaserScan getDefaultInstanceForType() {
        return choreo.Depth.LaserScan.getDefaultInstance();
      }

      public choreo.Depth.LaserScan build() {
        choreo.Depth.LaserScan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.LaserScan buildPartial() {
        choreo.Depth.LaserScan result = new choreo.Depth.LaserScan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (angleMinBuilder_ == null) {
          result.angleMin_ = angleMin_;
        } else {
          result.angleMin_ = angleMinBuilder_.build();
        }
        if (angleMaxBuilder_ == null) {
          result.angleMax_ = angleMax_;
        } else {
          result.angleMax_ = angleMaxBuilder_.build();
        }
        if (angleIncrementBuilder_ == null) {
          result.angleIncrement_ = angleIncrement_;
        } else {
          result.angleIncrement_ = angleIncrementBuilder_.build();
        }
        if (timeIncrementBuilder_ == null) {
          result.timeIncrement_ = timeIncrement_;
        } else {
          result.timeIncrement_ = timeIncrementBuilder_.build();
        }
        if (scanTimeBuilder_ == null) {
          result.scanTime_ = scanTime_;
        } else {
          result.scanTime_ = scanTimeBuilder_.build();
        }
        if (rangeMinBuilder_ == null) {
          result.rangeMin_ = rangeMin_;
        } else {
          result.rangeMin_ = rangeMinBuilder_.build();
        }
        if (rangeMaxBuilder_ == null) {
          result.rangeMax_ = rangeMax_;
        } else {
          result.rangeMax_ = rangeMaxBuilder_.build();
        }
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (intensitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            intensities_ = java.util.Collections.unmodifiableList(intensities_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.intensities_ = intensities_;
        } else {
          result.intensities_ = intensitiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.LaserScan) {
          return mergeFrom((choreo.Depth.LaserScan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.LaserScan other) {
        if (other == choreo.Depth.LaserScan.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasAngleMin()) {
          mergeAngleMin(other.getAngleMin());
        }
        if (other.hasAngleMax()) {
          mergeAngleMax(other.getAngleMax());
        }
        if (other.hasAngleIncrement()) {
          mergeAngleIncrement(other.getAngleIncrement());
        }
        if (other.hasTimeIncrement()) {
          mergeTimeIncrement(other.getTimeIncrement());
        }
        if (other.hasScanTime()) {
          mergeScanTime(other.getScanTime());
        }
        if (other.hasRangeMin()) {
          mergeRangeMin(other.getRangeMin());
        }
        if (other.hasRangeMax()) {
          mergeRangeMax(other.getRangeMax());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000100);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (intensitiesBuilder_ == null) {
          if (!other.intensities_.isEmpty()) {
            if (intensities_.isEmpty()) {
              intensities_ = other.intensities_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureIntensitiesIsMutable();
              intensities_.addAll(other.intensities_);
            }
            onChanged();
          }
        } else {
          if (!other.intensities_.isEmpty()) {
            if (intensitiesBuilder_.isEmpty()) {
              intensitiesBuilder_.dispose();
              intensitiesBuilder_ = null;
              intensities_ = other.intensities_;
              bitField0_ = (bitField0_ & ~0x00000200);
              intensitiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIntensitiesFieldBuilder() : null;
            } else {
              intensitiesBuilder_.addAllMessages(other.intensities_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.LaserScan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.LaserScan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleMin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleMinBuilder_;
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public boolean hasAngleMin() {
        return angleMinBuilder_ != null || angleMin_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleMin() {
        if (angleMinBuilder_ == null) {
          return angleMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
        } else {
          return angleMinBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder setAngleMin(choreo.FloatOuterClass.Float32 value) {
        if (angleMinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleMin_ = value;
          onChanged();
        } else {
          angleMinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder setAngleMin(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleMinBuilder_ == null) {
          angleMin_ = builderForValue.build();
          onChanged();
        } else {
          angleMinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder mergeAngleMin(choreo.FloatOuterClass.Float32 value) {
        if (angleMinBuilder_ == null) {
          if (angleMin_ != null) {
            angleMin_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleMin_).mergeFrom(value).buildPartial();
          } else {
            angleMin_ = value;
          }
          onChanged();
        } else {
          angleMinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder clearAngleMin() {
        if (angleMinBuilder_ == null) {
          angleMin_ = null;
          onChanged();
        } else {
          angleMin_ = null;
          angleMinBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleMinBuilder() {
        
        onChanged();
        return getAngleMinFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder() {
        if (angleMinBuilder_ != null) {
          return angleMinBuilder_.getMessageOrBuilder();
        } else {
          return angleMin_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleMinFieldBuilder() {
        if (angleMinBuilder_ == null) {
          angleMinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleMin(),
                  getParentForChildren(),
                  isClean());
          angleMin_ = null;
        }
        return angleMinBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleMax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleMaxBuilder_;
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public boolean hasAngleMax() {
        return angleMaxBuilder_ != null || angleMax_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleMax() {
        if (angleMaxBuilder_ == null) {
          return angleMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
        } else {
          return angleMaxBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder setAngleMax(choreo.FloatOuterClass.Float32 value) {
        if (angleMaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleMax_ = value;
          onChanged();
        } else {
          angleMaxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder setAngleMax(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleMaxBuilder_ == null) {
          angleMax_ = builderForValue.build();
          onChanged();
        } else {
          angleMaxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder mergeAngleMax(choreo.FloatOuterClass.Float32 value) {
        if (angleMaxBuilder_ == null) {
          if (angleMax_ != null) {
            angleMax_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleMax_).mergeFrom(value).buildPartial();
          } else {
            angleMax_ = value;
          }
          onChanged();
        } else {
          angleMaxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder clearAngleMax() {
        if (angleMaxBuilder_ == null) {
          angleMax_ = null;
          onChanged();
        } else {
          angleMax_ = null;
          angleMaxBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleMaxBuilder() {
        
        onChanged();
        return getAngleMaxFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder() {
        if (angleMaxBuilder_ != null) {
          return angleMaxBuilder_.getMessageOrBuilder();
        } else {
          return angleMax_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleMaxFieldBuilder() {
        if (angleMaxBuilder_ == null) {
          angleMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleMax(),
                  getParentForChildren(),
                  isClean());
          angleMax_ = null;
        }
        return angleMaxBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleIncrement_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleIncrementBuilder_;
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public boolean hasAngleIncrement() {
        return angleIncrementBuilder_ != null || angleIncrement_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleIncrement() {
        if (angleIncrementBuilder_ == null) {
          return angleIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
        } else {
          return angleIncrementBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder setAngleIncrement(choreo.FloatOuterClass.Float32 value) {
        if (angleIncrementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleIncrement_ = value;
          onChanged();
        } else {
          angleIncrementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder setAngleIncrement(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = builderForValue.build();
          onChanged();
        } else {
          angleIncrementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder mergeAngleIncrement(choreo.FloatOuterClass.Float32 value) {
        if (angleIncrementBuilder_ == null) {
          if (angleIncrement_ != null) {
            angleIncrement_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleIncrement_).mergeFrom(value).buildPartial();
          } else {
            angleIncrement_ = value;
          }
          onChanged();
        } else {
          angleIncrementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder clearAngleIncrement() {
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = null;
          onChanged();
        } else {
          angleIncrement_ = null;
          angleIncrementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleIncrementBuilder() {
        
        onChanged();
        return getAngleIncrementFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder() {
        if (angleIncrementBuilder_ != null) {
          return angleIncrementBuilder_.getMessageOrBuilder();
        } else {
          return angleIncrement_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleIncrementFieldBuilder() {
        if (angleIncrementBuilder_ == null) {
          angleIncrementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleIncrement(),
                  getParentForChildren(),
                  isClean());
          angleIncrement_ = null;
        }
        return angleIncrementBuilder_;
      }

      private choreo.FloatOuterClass.Float32 timeIncrement_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> timeIncrementBuilder_;
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public boolean hasTimeIncrement() {
        return timeIncrementBuilder_ != null || timeIncrement_ != null;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32 getTimeIncrement() {
        if (timeIncrementBuilder_ == null) {
          return timeIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
        } else {
          return timeIncrementBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder setTimeIncrement(choreo.FloatOuterClass.Float32 value) {
        if (timeIncrementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeIncrement_ = value;
          onChanged();
        } else {
          timeIncrementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder setTimeIncrement(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = builderForValue.build();
          onChanged();
        } else {
          timeIncrementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder mergeTimeIncrement(choreo.FloatOuterClass.Float32 value) {
        if (timeIncrementBuilder_ == null) {
          if (timeIncrement_ != null) {
            timeIncrement_ =
              choreo.FloatOuterClass.Float32.newBuilder(timeIncrement_).mergeFrom(value).buildPartial();
          } else {
            timeIncrement_ = value;
          }
          onChanged();
        } else {
          timeIncrementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder clearTimeIncrement() {
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = null;
          onChanged();
        } else {
          timeIncrement_ = null;
          timeIncrementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getTimeIncrementBuilder() {
        
        onChanged();
        return getTimeIncrementFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder() {
        if (timeIncrementBuilder_ != null) {
          return timeIncrementBuilder_.getMessageOrBuilder();
        } else {
          return timeIncrement_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
        }
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getTimeIncrementFieldBuilder() {
        if (timeIncrementBuilder_ == null) {
          timeIncrementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getTimeIncrement(),
                  getParentForChildren(),
                  isClean());
          timeIncrement_ = null;
        }
        return timeIncrementBuilder_;
      }

      private choreo.FloatOuterClass.Float32 scanTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> scanTimeBuilder_;
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public boolean hasScanTime() {
        return scanTimeBuilder_ != null || scanTime_ != null;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32 getScanTime() {
        if (scanTimeBuilder_ == null) {
          return scanTime_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
        } else {
          return scanTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder setScanTime(choreo.FloatOuterClass.Float32 value) {
        if (scanTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scanTime_ = value;
          onChanged();
        } else {
          scanTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder setScanTime(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (scanTimeBuilder_ == null) {
          scanTime_ = builderForValue.build();
          onChanged();
        } else {
          scanTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder mergeScanTime(choreo.FloatOuterClass.Float32 value) {
        if (scanTimeBuilder_ == null) {
          if (scanTime_ != null) {
            scanTime_ =
              choreo.FloatOuterClass.Float32.newBuilder(scanTime_).mergeFrom(value).buildPartial();
          } else {
            scanTime_ = value;
          }
          onChanged();
        } else {
          scanTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder clearScanTime() {
        if (scanTimeBuilder_ == null) {
          scanTime_ = null;
          onChanged();
        } else {
          scanTime_ = null;
          scanTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getScanTimeBuilder() {
        
        onChanged();
        return getScanTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder() {
        if (scanTimeBuilder_ != null) {
          return scanTimeBuilder_.getMessageOrBuilder();
        } else {
          return scanTime_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
        }
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getScanTimeFieldBuilder() {
        if (scanTimeBuilder_ == null) {
          scanTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getScanTime(),
                  getParentForChildren(),
                  isClean());
          scanTime_ = null;
        }
        return scanTimeBuilder_;
      }

      private choreo.FloatOuterClass.Float32 rangeMin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangeMinBuilder_;
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public boolean hasRangeMin() {
        return rangeMinBuilder_ != null || rangeMin_ != null;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32 getRangeMin() {
        if (rangeMinBuilder_ == null) {
          return rangeMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
        } else {
          return rangeMinBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder setRangeMin(choreo.FloatOuterClass.Float32 value) {
        if (rangeMinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rangeMin_ = value;
          onChanged();
        } else {
          rangeMinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder setRangeMin(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangeMinBuilder_ == null) {
          rangeMin_ = builderForValue.build();
          onChanged();
        } else {
          rangeMinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder mergeRangeMin(choreo.FloatOuterClass.Float32 value) {
        if (rangeMinBuilder_ == null) {
          if (rangeMin_ != null) {
            rangeMin_ =
              choreo.FloatOuterClass.Float32.newBuilder(rangeMin_).mergeFrom(value).buildPartial();
          } else {
            rangeMin_ = value;
          }
          onChanged();
        } else {
          rangeMinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder clearRangeMin() {
        if (rangeMinBuilder_ == null) {
          rangeMin_ = null;
          onChanged();
        } else {
          rangeMin_ = null;
          rangeMinBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangeMinBuilder() {
        
        onChanged();
        return getRangeMinFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder() {
        if (rangeMinBuilder_ != null) {
          return rangeMinBuilder_.getMessageOrBuilder();
        } else {
          return rangeMin_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
        }
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangeMinFieldBuilder() {
        if (rangeMinBuilder_ == null) {
          rangeMinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getRangeMin(),
                  getParentForChildren(),
                  isClean());
          rangeMin_ = null;
        }
        return rangeMinBuilder_;
      }

      private choreo.FloatOuterClass.Float32 rangeMax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangeMaxBuilder_;
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public boolean hasRangeMax() {
        return rangeMaxBuilder_ != null || rangeMax_ != null;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32 getRangeMax() {
        if (rangeMaxBuilder_ == null) {
          return rangeMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
        } else {
          return rangeMaxBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder setRangeMax(choreo.FloatOuterClass.Float32 value) {
        if (rangeMaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rangeMax_ = value;
          onChanged();
        } else {
          rangeMaxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder setRangeMax(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = builderForValue.build();
          onChanged();
        } else {
          rangeMaxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder mergeRangeMax(choreo.FloatOuterClass.Float32 value) {
        if (rangeMaxBuilder_ == null) {
          if (rangeMax_ != null) {
            rangeMax_ =
              choreo.FloatOuterClass.Float32.newBuilder(rangeMax_).mergeFrom(value).buildPartial();
          } else {
            rangeMax_ = value;
          }
          onChanged();
        } else {
          rangeMaxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder clearRangeMax() {
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = null;
          onChanged();
        } else {
          rangeMax_ = null;
          rangeMaxBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangeMaxBuilder() {
        
        onChanged();
        return getRangeMaxFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder() {
        if (rangeMaxBuilder_ != null) {
          return rangeMaxBuilder_.getMessageOrBuilder();
        } else {
          return rangeMax_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
        }
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangeMaxFieldBuilder() {
        if (rangeMaxBuilder_ == null) {
          rangeMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getRangeMax(),
                  getParentForChildren(),
                  isClean());
          rangeMax_ = null;
        }
        return rangeMaxBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float32> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          ranges_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>(ranges_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangesBuilder_;

      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public choreo.FloatOuterClass.Float32 getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder setRanges(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder setRanges(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder addRanges(choreo.FloatOuterClass.Float32 value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder addRanges(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder addRanges(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder addRanges(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float32> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 ranges = 9;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float32> intensities_ =
        java.util.Collections.emptyList();
      private void ensureIntensitiesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          intensities_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>(intensities_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> intensitiesBuilder_;

      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32> getIntensitiesList() {
        if (intensitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(intensities_);
        } else {
          return intensitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public int getIntensitiesCount() {
        if (intensitiesBuilder_ == null) {
          return intensities_.size();
        } else {
          return intensitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public choreo.FloatOuterClass.Float32 getIntensities(int index) {
        if (intensitiesBuilder_ == null) {
          return intensities_.get(index);
        } else {
          return intensitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder setIntensities(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.set(index, value);
          onChanged();
        } else {
          intensitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder setIntensities(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.set(index, builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder addIntensities(choreo.FloatOuterClass.Float32 value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.add(value);
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder addIntensities(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.add(index, value);
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder addIntensities(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.add(builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder addIntensities(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.add(index, builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder addAllIntensities(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float32> values) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, intensities_);
          onChanged();
        } else {
          intensitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder clearIntensities() {
        if (intensitiesBuilder_ == null) {
          intensities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          intensitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public Builder removeIntensities(int index) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.remove(index);
          onChanged();
        } else {
          intensitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getIntensitiesBuilder(
          int index) {
        return getIntensitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getIntensitiesOrBuilder(
          int index) {
        if (intensitiesBuilder_ == null) {
          return intensities_.get(index);  } else {
          return intensitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
           getIntensitiesOrBuilderList() {
        if (intensitiesBuilder_ != null) {
          return intensitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(intensities_);
        }
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addIntensitiesBuilder() {
        return getIntensitiesFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addIntensitiesBuilder(
          int index) {
        return getIntensitiesFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 intensities = 10;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32.Builder> 
           getIntensitiesBuilderList() {
        return getIntensitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getIntensitiesFieldBuilder() {
        if (intensitiesBuilder_ == null) {
          intensitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  intensities_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          intensities_ = null;
        }
        return intensitiesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.LaserScan)
    }

    // @@protoc_insertion_point(class_scope:choreo.LaserScan)
    private static final choreo.Depth.LaserScan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.LaserScan();
    }

    public static choreo.Depth.LaserScan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LaserScan>
        PARSER = new com.google.protobuf.AbstractParser<LaserScan>() {
      public LaserScan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LaserScan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LaserScan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LaserScan> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.LaserScan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiEchoLaserScanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.MultiEchoLaserScan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    boolean hasAngleMin();
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleMin();
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder();

    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    boolean hasAngleMax();
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleMax();
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder();

    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    boolean hasAngleIncrement();
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    choreo.FloatOuterClass.Float32 getAngleIncrement();
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder();

    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    boolean hasTimeIncrement();
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    choreo.FloatOuterClass.Float32 getTimeIncrement();
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder();

    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    boolean hasScanTime();
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    choreo.FloatOuterClass.Float32 getScanTime();
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder();

    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    boolean hasRangeMin();
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    choreo.FloatOuterClass.Float32 getRangeMin();
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder();

    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    boolean hasRangeMax();
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    choreo.FloatOuterClass.Float32 getRangeMax();
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder();

    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    java.util.List<choreo.Depth.LaserEcho> 
        getRangesList();
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    choreo.Depth.LaserEcho getRanges(int index);
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    choreo.Depth.LaserEchoOrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    java.util.List<choreo.Depth.LaserEcho> 
        getIntensitiesList();
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    choreo.Depth.LaserEcho getIntensities(int index);
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    int getIntensitiesCount();
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
        getIntensitiesOrBuilderList();
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    choreo.Depth.LaserEchoOrBuilder getIntensitiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.MultiEchoLaserScan}
   */
  public  static final class MultiEchoLaserScan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.MultiEchoLaserScan)
      MultiEchoLaserScanOrBuilder {
    // Use MultiEchoLaserScan.newBuilder() to construct.
    private MultiEchoLaserScan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiEchoLaserScan() {
      ranges_ = java.util.Collections.emptyList();
      intensities_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MultiEchoLaserScan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleMin_ != null) {
                subBuilder = angleMin_.toBuilder();
              }
              angleMin_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleMin_);
                angleMin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleMax_ != null) {
                subBuilder = angleMax_.toBuilder();
              }
              angleMax_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleMax_);
                angleMax_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (angleIncrement_ != null) {
                subBuilder = angleIncrement_.toBuilder();
              }
              angleIncrement_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleIncrement_);
                angleIncrement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (timeIncrement_ != null) {
                subBuilder = timeIncrement_.toBuilder();
              }
              timeIncrement_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeIncrement_);
                timeIncrement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (scanTime_ != null) {
                subBuilder = scanTime_.toBuilder();
              }
              scanTime_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scanTime_);
                scanTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (rangeMin_ != null) {
                subBuilder = rangeMin_.toBuilder();
              }
              rangeMin_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rangeMin_);
                rangeMin_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (rangeMax_ != null) {
                subBuilder = rangeMax_.toBuilder();
              }
              rangeMax_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rangeMax_);
                rangeMax_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                ranges_ = new java.util.ArrayList<choreo.Depth.LaserEcho>();
                mutable_bitField0_ |= 0x00000100;
              }
              ranges_.add(
                  input.readMessage(choreo.Depth.LaserEcho.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                intensities_ = new java.util.ArrayList<choreo.Depth.LaserEcho>();
                mutable_bitField0_ |= 0x00000200;
              }
              intensities_.add(
                  input.readMessage(choreo.Depth.LaserEcho.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          intensities_ = java.util.Collections.unmodifiableList(intensities_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_MultiEchoLaserScan_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_MultiEchoLaserScan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.MultiEchoLaserScan.class, choreo.Depth.MultiEchoLaserScan.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ANGLE_MIN_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float32 angleMin_;
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public boolean hasAngleMin() {
      return angleMin_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleMin() {
      return angleMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
    }
    /**
     * <code>.choreo.Float32 angle_min = 2;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder() {
      return getAngleMin();
    }

    public static final int ANGLE_MAX_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float32 angleMax_;
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public boolean hasAngleMax() {
      return angleMax_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleMax() {
      return angleMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
    }
    /**
     * <code>.choreo.Float32 angle_max = 3;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder() {
      return getAngleMax();
    }

    public static final int ANGLE_INCREMENT_FIELD_NUMBER = 4;
    private choreo.FloatOuterClass.Float32 angleIncrement_;
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public boolean hasAngleIncrement() {
      return angleIncrement_ != null;
    }
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public choreo.FloatOuterClass.Float32 getAngleIncrement() {
      return angleIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
    }
    /**
     * <code>.choreo.Float32 angle_increment = 4;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder() {
      return getAngleIncrement();
    }

    public static final int TIME_INCREMENT_FIELD_NUMBER = 5;
    private choreo.FloatOuterClass.Float32 timeIncrement_;
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public boolean hasTimeIncrement() {
      return timeIncrement_ != null;
    }
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public choreo.FloatOuterClass.Float32 getTimeIncrement() {
      return timeIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
    }
    /**
     * <code>.choreo.Float32 time_increment = 5;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder() {
      return getTimeIncrement();
    }

    public static final int SCAN_TIME_FIELD_NUMBER = 6;
    private choreo.FloatOuterClass.Float32 scanTime_;
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public boolean hasScanTime() {
      return scanTime_ != null;
    }
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public choreo.FloatOuterClass.Float32 getScanTime() {
      return scanTime_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
    }
    /**
     * <code>.choreo.Float32 scan_time = 6;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder() {
      return getScanTime();
    }

    public static final int RANGE_MIN_FIELD_NUMBER = 7;
    private choreo.FloatOuterClass.Float32 rangeMin_;
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public boolean hasRangeMin() {
      return rangeMin_ != null;
    }
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public choreo.FloatOuterClass.Float32 getRangeMin() {
      return rangeMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
    }
    /**
     * <code>.choreo.Float32 range_min = 7;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder() {
      return getRangeMin();
    }

    public static final int RANGE_MAX_FIELD_NUMBER = 8;
    private choreo.FloatOuterClass.Float32 rangeMax_;
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public boolean hasRangeMax() {
      return rangeMax_ != null;
    }
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public choreo.FloatOuterClass.Float32 getRangeMax() {
      return rangeMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
    }
    /**
     * <code>.choreo.Float32 range_max = 8;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder() {
      return getRangeMax();
    }

    public static final int RANGES_FIELD_NUMBER = 9;
    private java.util.List<choreo.Depth.LaserEcho> ranges_;
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    public java.util.List<choreo.Depth.LaserEcho> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    public java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    public choreo.Depth.LaserEcho getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .choreo.LaserEcho ranges = 9;</code>
     */
    public choreo.Depth.LaserEchoOrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int INTENSITIES_FIELD_NUMBER = 10;
    private java.util.List<choreo.Depth.LaserEcho> intensities_;
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    public java.util.List<choreo.Depth.LaserEcho> getIntensitiesList() {
      return intensities_;
    }
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    public java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
        getIntensitiesOrBuilderList() {
      return intensities_;
    }
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    public int getIntensitiesCount() {
      return intensities_.size();
    }
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    public choreo.Depth.LaserEcho getIntensities(int index) {
      return intensities_.get(index);
    }
    /**
     * <code>repeated .choreo.LaserEcho intensities = 10;</code>
     */
    public choreo.Depth.LaserEchoOrBuilder getIntensitiesOrBuilder(
        int index) {
      return intensities_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (angleMin_ != null) {
        output.writeMessage(2, getAngleMin());
      }
      if (angleMax_ != null) {
        output.writeMessage(3, getAngleMax());
      }
      if (angleIncrement_ != null) {
        output.writeMessage(4, getAngleIncrement());
      }
      if (timeIncrement_ != null) {
        output.writeMessage(5, getTimeIncrement());
      }
      if (scanTime_ != null) {
        output.writeMessage(6, getScanTime());
      }
      if (rangeMin_ != null) {
        output.writeMessage(7, getRangeMin());
      }
      if (rangeMax_ != null) {
        output.writeMessage(8, getRangeMax());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(9, ranges_.get(i));
      }
      for (int i = 0; i < intensities_.size(); i++) {
        output.writeMessage(10, intensities_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (angleMin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAngleMin());
      }
      if (angleMax_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAngleMax());
      }
      if (angleIncrement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAngleIncrement());
      }
      if (timeIncrement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimeIncrement());
      }
      if (scanTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getScanTime());
      }
      if (rangeMin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRangeMin());
      }
      if (rangeMax_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getRangeMax());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, ranges_.get(i));
      }
      for (int i = 0; i < intensities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, intensities_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.MultiEchoLaserScan)) {
        return super.equals(obj);
      }
      choreo.Depth.MultiEchoLaserScan other = (choreo.Depth.MultiEchoLaserScan) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasAngleMin() == other.hasAngleMin());
      if (hasAngleMin()) {
        result = result && getAngleMin()
            .equals(other.getAngleMin());
      }
      result = result && (hasAngleMax() == other.hasAngleMax());
      if (hasAngleMax()) {
        result = result && getAngleMax()
            .equals(other.getAngleMax());
      }
      result = result && (hasAngleIncrement() == other.hasAngleIncrement());
      if (hasAngleIncrement()) {
        result = result && getAngleIncrement()
            .equals(other.getAngleIncrement());
      }
      result = result && (hasTimeIncrement() == other.hasTimeIncrement());
      if (hasTimeIncrement()) {
        result = result && getTimeIncrement()
            .equals(other.getTimeIncrement());
      }
      result = result && (hasScanTime() == other.hasScanTime());
      if (hasScanTime()) {
        result = result && getScanTime()
            .equals(other.getScanTime());
      }
      result = result && (hasRangeMin() == other.hasRangeMin());
      if (hasRangeMin()) {
        result = result && getRangeMin()
            .equals(other.getRangeMin());
      }
      result = result && (hasRangeMax() == other.hasRangeMax());
      if (hasRangeMax()) {
        result = result && getRangeMax()
            .equals(other.getRangeMax());
      }
      result = result && getRangesList()
          .equals(other.getRangesList());
      result = result && getIntensitiesList()
          .equals(other.getIntensitiesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasAngleMin()) {
        hash = (37 * hash) + ANGLE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + getAngleMin().hashCode();
      }
      if (hasAngleMax()) {
        hash = (37 * hash) + ANGLE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + getAngleMax().hashCode();
      }
      if (hasAngleIncrement()) {
        hash = (37 * hash) + ANGLE_INCREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getAngleIncrement().hashCode();
      }
      if (hasTimeIncrement()) {
        hash = (37 * hash) + TIME_INCREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeIncrement().hashCode();
      }
      if (hasScanTime()) {
        hash = (37 * hash) + SCAN_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getScanTime().hashCode();
      }
      if (hasRangeMin()) {
        hash = (37 * hash) + RANGE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + getRangeMin().hashCode();
      }
      if (hasRangeMax()) {
        hash = (37 * hash) + RANGE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + getRangeMax().hashCode();
      }
      if (getRangesCount() > 0) {
        hash = (37 * hash) + RANGES_FIELD_NUMBER;
        hash = (53 * hash) + getRangesList().hashCode();
      }
      if (getIntensitiesCount() > 0) {
        hash = (37 * hash) + INTENSITIES_FIELD_NUMBER;
        hash = (53 * hash) + getIntensitiesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.MultiEchoLaserScan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.MultiEchoLaserScan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.MultiEchoLaserScan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.MultiEchoLaserScan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.MultiEchoLaserScan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.MultiEchoLaserScan)
        choreo.Depth.MultiEchoLaserScanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_MultiEchoLaserScan_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_MultiEchoLaserScan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.MultiEchoLaserScan.class, choreo.Depth.MultiEchoLaserScan.Builder.class);
      }

      // Construct using choreo.Depth.MultiEchoLaserScan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRangesFieldBuilder();
          getIntensitiesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (angleMinBuilder_ == null) {
          angleMin_ = null;
        } else {
          angleMin_ = null;
          angleMinBuilder_ = null;
        }
        if (angleMaxBuilder_ == null) {
          angleMax_ = null;
        } else {
          angleMax_ = null;
          angleMaxBuilder_ = null;
        }
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = null;
        } else {
          angleIncrement_ = null;
          angleIncrementBuilder_ = null;
        }
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = null;
        } else {
          timeIncrement_ = null;
          timeIncrementBuilder_ = null;
        }
        if (scanTimeBuilder_ == null) {
          scanTime_ = null;
        } else {
          scanTime_ = null;
          scanTimeBuilder_ = null;
        }
        if (rangeMinBuilder_ == null) {
          rangeMin_ = null;
        } else {
          rangeMin_ = null;
          rangeMinBuilder_ = null;
        }
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = null;
        } else {
          rangeMax_ = null;
          rangeMaxBuilder_ = null;
        }
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          rangesBuilder_.clear();
        }
        if (intensitiesBuilder_ == null) {
          intensities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          intensitiesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_MultiEchoLaserScan_descriptor;
      }

      public choreo.Depth.MultiEchoLaserScan getDefaultInstanceForType() {
        return choreo.Depth.MultiEchoLaserScan.getDefaultInstance();
      }

      public choreo.Depth.MultiEchoLaserScan build() {
        choreo.Depth.MultiEchoLaserScan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.MultiEchoLaserScan buildPartial() {
        choreo.Depth.MultiEchoLaserScan result = new choreo.Depth.MultiEchoLaserScan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (angleMinBuilder_ == null) {
          result.angleMin_ = angleMin_;
        } else {
          result.angleMin_ = angleMinBuilder_.build();
        }
        if (angleMaxBuilder_ == null) {
          result.angleMax_ = angleMax_;
        } else {
          result.angleMax_ = angleMaxBuilder_.build();
        }
        if (angleIncrementBuilder_ == null) {
          result.angleIncrement_ = angleIncrement_;
        } else {
          result.angleIncrement_ = angleIncrementBuilder_.build();
        }
        if (timeIncrementBuilder_ == null) {
          result.timeIncrement_ = timeIncrement_;
        } else {
          result.timeIncrement_ = timeIncrementBuilder_.build();
        }
        if (scanTimeBuilder_ == null) {
          result.scanTime_ = scanTime_;
        } else {
          result.scanTime_ = scanTimeBuilder_.build();
        }
        if (rangeMinBuilder_ == null) {
          result.rangeMin_ = rangeMin_;
        } else {
          result.rangeMin_ = rangeMinBuilder_.build();
        }
        if (rangeMaxBuilder_ == null) {
          result.rangeMax_ = rangeMax_;
        } else {
          result.rangeMax_ = rangeMaxBuilder_.build();
        }
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (intensitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            intensities_ = java.util.Collections.unmodifiableList(intensities_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.intensities_ = intensities_;
        } else {
          result.intensities_ = intensitiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.MultiEchoLaserScan) {
          return mergeFrom((choreo.Depth.MultiEchoLaserScan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.MultiEchoLaserScan other) {
        if (other == choreo.Depth.MultiEchoLaserScan.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasAngleMin()) {
          mergeAngleMin(other.getAngleMin());
        }
        if (other.hasAngleMax()) {
          mergeAngleMax(other.getAngleMax());
        }
        if (other.hasAngleIncrement()) {
          mergeAngleIncrement(other.getAngleIncrement());
        }
        if (other.hasTimeIncrement()) {
          mergeTimeIncrement(other.getTimeIncrement());
        }
        if (other.hasScanTime()) {
          mergeScanTime(other.getScanTime());
        }
        if (other.hasRangeMin()) {
          mergeRangeMin(other.getRangeMin());
        }
        if (other.hasRangeMax()) {
          mergeRangeMax(other.getRangeMax());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000100);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (intensitiesBuilder_ == null) {
          if (!other.intensities_.isEmpty()) {
            if (intensities_.isEmpty()) {
              intensities_ = other.intensities_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureIntensitiesIsMutable();
              intensities_.addAll(other.intensities_);
            }
            onChanged();
          }
        } else {
          if (!other.intensities_.isEmpty()) {
            if (intensitiesBuilder_.isEmpty()) {
              intensitiesBuilder_.dispose();
              intensitiesBuilder_ = null;
              intensities_ = other.intensities_;
              bitField0_ = (bitField0_ & ~0x00000200);
              intensitiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIntensitiesFieldBuilder() : null;
            } else {
              intensitiesBuilder_.addAllMessages(other.intensities_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.MultiEchoLaserScan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.MultiEchoLaserScan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleMin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleMinBuilder_;
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public boolean hasAngleMin() {
        return angleMinBuilder_ != null || angleMin_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleMin() {
        if (angleMinBuilder_ == null) {
          return angleMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
        } else {
          return angleMinBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder setAngleMin(choreo.FloatOuterClass.Float32 value) {
        if (angleMinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleMin_ = value;
          onChanged();
        } else {
          angleMinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder setAngleMin(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleMinBuilder_ == null) {
          angleMin_ = builderForValue.build();
          onChanged();
        } else {
          angleMinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder mergeAngleMin(choreo.FloatOuterClass.Float32 value) {
        if (angleMinBuilder_ == null) {
          if (angleMin_ != null) {
            angleMin_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleMin_).mergeFrom(value).buildPartial();
          } else {
            angleMin_ = value;
          }
          onChanged();
        } else {
          angleMinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public Builder clearAngleMin() {
        if (angleMinBuilder_ == null) {
          angleMin_ = null;
          onChanged();
        } else {
          angleMin_ = null;
          angleMinBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleMinBuilder() {
        
        onChanged();
        return getAngleMinFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleMinOrBuilder() {
        if (angleMinBuilder_ != null) {
          return angleMinBuilder_.getMessageOrBuilder();
        } else {
          return angleMin_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMin_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_min = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleMinFieldBuilder() {
        if (angleMinBuilder_ == null) {
          angleMinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleMin(),
                  getParentForChildren(),
                  isClean());
          angleMin_ = null;
        }
        return angleMinBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleMax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleMaxBuilder_;
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public boolean hasAngleMax() {
        return angleMaxBuilder_ != null || angleMax_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleMax() {
        if (angleMaxBuilder_ == null) {
          return angleMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
        } else {
          return angleMaxBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder setAngleMax(choreo.FloatOuterClass.Float32 value) {
        if (angleMaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleMax_ = value;
          onChanged();
        } else {
          angleMaxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder setAngleMax(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleMaxBuilder_ == null) {
          angleMax_ = builderForValue.build();
          onChanged();
        } else {
          angleMaxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder mergeAngleMax(choreo.FloatOuterClass.Float32 value) {
        if (angleMaxBuilder_ == null) {
          if (angleMax_ != null) {
            angleMax_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleMax_).mergeFrom(value).buildPartial();
          } else {
            angleMax_ = value;
          }
          onChanged();
        } else {
          angleMaxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public Builder clearAngleMax() {
        if (angleMaxBuilder_ == null) {
          angleMax_ = null;
          onChanged();
        } else {
          angleMax_ = null;
          angleMaxBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleMaxBuilder() {
        
        onChanged();
        return getAngleMaxFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleMaxOrBuilder() {
        if (angleMaxBuilder_ != null) {
          return angleMaxBuilder_.getMessageOrBuilder();
        } else {
          return angleMax_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleMax_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_max = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleMaxFieldBuilder() {
        if (angleMaxBuilder_ == null) {
          angleMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleMax(),
                  getParentForChildren(),
                  isClean());
          angleMax_ = null;
        }
        return angleMaxBuilder_;
      }

      private choreo.FloatOuterClass.Float32 angleIncrement_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> angleIncrementBuilder_;
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public boolean hasAngleIncrement() {
        return angleIncrementBuilder_ != null || angleIncrement_ != null;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32 getAngleIncrement() {
        if (angleIncrementBuilder_ == null) {
          return angleIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
        } else {
          return angleIncrementBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder setAngleIncrement(choreo.FloatOuterClass.Float32 value) {
        if (angleIncrementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angleIncrement_ = value;
          onChanged();
        } else {
          angleIncrementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder setAngleIncrement(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = builderForValue.build();
          onChanged();
        } else {
          angleIncrementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder mergeAngleIncrement(choreo.FloatOuterClass.Float32 value) {
        if (angleIncrementBuilder_ == null) {
          if (angleIncrement_ != null) {
            angleIncrement_ =
              choreo.FloatOuterClass.Float32.newBuilder(angleIncrement_).mergeFrom(value).buildPartial();
          } else {
            angleIncrement_ = value;
          }
          onChanged();
        } else {
          angleIncrementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public Builder clearAngleIncrement() {
        if (angleIncrementBuilder_ == null) {
          angleIncrement_ = null;
          onChanged();
        } else {
          angleIncrement_ = null;
          angleIncrementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAngleIncrementBuilder() {
        
        onChanged();
        return getAngleIncrementFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAngleIncrementOrBuilder() {
        if (angleIncrementBuilder_ != null) {
          return angleIncrementBuilder_.getMessageOrBuilder();
        } else {
          return angleIncrement_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : angleIncrement_;
        }
      }
      /**
       * <code>.choreo.Float32 angle_increment = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAngleIncrementFieldBuilder() {
        if (angleIncrementBuilder_ == null) {
          angleIncrementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getAngleIncrement(),
                  getParentForChildren(),
                  isClean());
          angleIncrement_ = null;
        }
        return angleIncrementBuilder_;
      }

      private choreo.FloatOuterClass.Float32 timeIncrement_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> timeIncrementBuilder_;
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public boolean hasTimeIncrement() {
        return timeIncrementBuilder_ != null || timeIncrement_ != null;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32 getTimeIncrement() {
        if (timeIncrementBuilder_ == null) {
          return timeIncrement_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
        } else {
          return timeIncrementBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder setTimeIncrement(choreo.FloatOuterClass.Float32 value) {
        if (timeIncrementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeIncrement_ = value;
          onChanged();
        } else {
          timeIncrementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder setTimeIncrement(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = builderForValue.build();
          onChanged();
        } else {
          timeIncrementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder mergeTimeIncrement(choreo.FloatOuterClass.Float32 value) {
        if (timeIncrementBuilder_ == null) {
          if (timeIncrement_ != null) {
            timeIncrement_ =
              choreo.FloatOuterClass.Float32.newBuilder(timeIncrement_).mergeFrom(value).buildPartial();
          } else {
            timeIncrement_ = value;
          }
          onChanged();
        } else {
          timeIncrementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public Builder clearTimeIncrement() {
        if (timeIncrementBuilder_ == null) {
          timeIncrement_ = null;
          onChanged();
        } else {
          timeIncrement_ = null;
          timeIncrementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getTimeIncrementBuilder() {
        
        onChanged();
        return getTimeIncrementFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getTimeIncrementOrBuilder() {
        if (timeIncrementBuilder_ != null) {
          return timeIncrementBuilder_.getMessageOrBuilder();
        } else {
          return timeIncrement_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : timeIncrement_;
        }
      }
      /**
       * <code>.choreo.Float32 time_increment = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getTimeIncrementFieldBuilder() {
        if (timeIncrementBuilder_ == null) {
          timeIncrementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getTimeIncrement(),
                  getParentForChildren(),
                  isClean());
          timeIncrement_ = null;
        }
        return timeIncrementBuilder_;
      }

      private choreo.FloatOuterClass.Float32 scanTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> scanTimeBuilder_;
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public boolean hasScanTime() {
        return scanTimeBuilder_ != null || scanTime_ != null;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32 getScanTime() {
        if (scanTimeBuilder_ == null) {
          return scanTime_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
        } else {
          return scanTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder setScanTime(choreo.FloatOuterClass.Float32 value) {
        if (scanTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scanTime_ = value;
          onChanged();
        } else {
          scanTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder setScanTime(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (scanTimeBuilder_ == null) {
          scanTime_ = builderForValue.build();
          onChanged();
        } else {
          scanTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder mergeScanTime(choreo.FloatOuterClass.Float32 value) {
        if (scanTimeBuilder_ == null) {
          if (scanTime_ != null) {
            scanTime_ =
              choreo.FloatOuterClass.Float32.newBuilder(scanTime_).mergeFrom(value).buildPartial();
          } else {
            scanTime_ = value;
          }
          onChanged();
        } else {
          scanTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public Builder clearScanTime() {
        if (scanTimeBuilder_ == null) {
          scanTime_ = null;
          onChanged();
        } else {
          scanTime_ = null;
          scanTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getScanTimeBuilder() {
        
        onChanged();
        return getScanTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getScanTimeOrBuilder() {
        if (scanTimeBuilder_ != null) {
          return scanTimeBuilder_.getMessageOrBuilder();
        } else {
          return scanTime_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : scanTime_;
        }
      }
      /**
       * <code>.choreo.Float32 scan_time = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getScanTimeFieldBuilder() {
        if (scanTimeBuilder_ == null) {
          scanTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getScanTime(),
                  getParentForChildren(),
                  isClean());
          scanTime_ = null;
        }
        return scanTimeBuilder_;
      }

      private choreo.FloatOuterClass.Float32 rangeMin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangeMinBuilder_;
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public boolean hasRangeMin() {
        return rangeMinBuilder_ != null || rangeMin_ != null;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32 getRangeMin() {
        if (rangeMinBuilder_ == null) {
          return rangeMin_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
        } else {
          return rangeMinBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder setRangeMin(choreo.FloatOuterClass.Float32 value) {
        if (rangeMinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rangeMin_ = value;
          onChanged();
        } else {
          rangeMinBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder setRangeMin(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangeMinBuilder_ == null) {
          rangeMin_ = builderForValue.build();
          onChanged();
        } else {
          rangeMinBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder mergeRangeMin(choreo.FloatOuterClass.Float32 value) {
        if (rangeMinBuilder_ == null) {
          if (rangeMin_ != null) {
            rangeMin_ =
              choreo.FloatOuterClass.Float32.newBuilder(rangeMin_).mergeFrom(value).buildPartial();
          } else {
            rangeMin_ = value;
          }
          onChanged();
        } else {
          rangeMinBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public Builder clearRangeMin() {
        if (rangeMinBuilder_ == null) {
          rangeMin_ = null;
          onChanged();
        } else {
          rangeMin_ = null;
          rangeMinBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangeMinBuilder() {
        
        onChanged();
        return getRangeMinFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangeMinOrBuilder() {
        if (rangeMinBuilder_ != null) {
          return rangeMinBuilder_.getMessageOrBuilder();
        } else {
          return rangeMin_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMin_;
        }
      }
      /**
       * <code>.choreo.Float32 range_min = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangeMinFieldBuilder() {
        if (rangeMinBuilder_ == null) {
          rangeMinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getRangeMin(),
                  getParentForChildren(),
                  isClean());
          rangeMin_ = null;
        }
        return rangeMinBuilder_;
      }

      private choreo.FloatOuterClass.Float32 rangeMax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangeMaxBuilder_;
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public boolean hasRangeMax() {
        return rangeMaxBuilder_ != null || rangeMax_ != null;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32 getRangeMax() {
        if (rangeMaxBuilder_ == null) {
          return rangeMax_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
        } else {
          return rangeMaxBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder setRangeMax(choreo.FloatOuterClass.Float32 value) {
        if (rangeMaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rangeMax_ = value;
          onChanged();
        } else {
          rangeMaxBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder setRangeMax(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = builderForValue.build();
          onChanged();
        } else {
          rangeMaxBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder mergeRangeMax(choreo.FloatOuterClass.Float32 value) {
        if (rangeMaxBuilder_ == null) {
          if (rangeMax_ != null) {
            rangeMax_ =
              choreo.FloatOuterClass.Float32.newBuilder(rangeMax_).mergeFrom(value).buildPartial();
          } else {
            rangeMax_ = value;
          }
          onChanged();
        } else {
          rangeMaxBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public Builder clearRangeMax() {
        if (rangeMaxBuilder_ == null) {
          rangeMax_ = null;
          onChanged();
        } else {
          rangeMax_ = null;
          rangeMaxBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangeMaxBuilder() {
        
        onChanged();
        return getRangeMaxFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangeMaxOrBuilder() {
        if (rangeMaxBuilder_ != null) {
          return rangeMaxBuilder_.getMessageOrBuilder();
        } else {
          return rangeMax_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : rangeMax_;
        }
      }
      /**
       * <code>.choreo.Float32 range_max = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangeMaxFieldBuilder() {
        if (rangeMaxBuilder_ == null) {
          rangeMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getRangeMax(),
                  getParentForChildren(),
                  isClean());
          rangeMax_ = null;
        }
        return rangeMaxBuilder_;
      }

      private java.util.List<choreo.Depth.LaserEcho> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          ranges_ = new java.util.ArrayList<choreo.Depth.LaserEcho>(ranges_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder> rangesBuilder_;

      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public java.util.List<choreo.Depth.LaserEcho> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public choreo.Depth.LaserEcho getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder setRanges(
          int index, choreo.Depth.LaserEcho value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder setRanges(
          int index, choreo.Depth.LaserEcho.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder addRanges(choreo.Depth.LaserEcho value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder addRanges(
          int index, choreo.Depth.LaserEcho value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder addRanges(
          choreo.Depth.LaserEcho.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder addRanges(
          int index, choreo.Depth.LaserEcho.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends choreo.Depth.LaserEcho> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public choreo.Depth.LaserEcho.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public choreo.Depth.LaserEchoOrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public choreo.Depth.LaserEcho.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            choreo.Depth.LaserEcho.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public choreo.Depth.LaserEcho.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, choreo.Depth.LaserEcho.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.LaserEcho ranges = 9;</code>
       */
      public java.util.List<choreo.Depth.LaserEcho.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private java.util.List<choreo.Depth.LaserEcho> intensities_ =
        java.util.Collections.emptyList();
      private void ensureIntensitiesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          intensities_ = new java.util.ArrayList<choreo.Depth.LaserEcho>(intensities_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder> intensitiesBuilder_;

      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public java.util.List<choreo.Depth.LaserEcho> getIntensitiesList() {
        if (intensitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(intensities_);
        } else {
          return intensitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public int getIntensitiesCount() {
        if (intensitiesBuilder_ == null) {
          return intensities_.size();
        } else {
          return intensitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public choreo.Depth.LaserEcho getIntensities(int index) {
        if (intensitiesBuilder_ == null) {
          return intensities_.get(index);
        } else {
          return intensitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder setIntensities(
          int index, choreo.Depth.LaserEcho value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.set(index, value);
          onChanged();
        } else {
          intensitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder setIntensities(
          int index, choreo.Depth.LaserEcho.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.set(index, builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder addIntensities(choreo.Depth.LaserEcho value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.add(value);
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder addIntensities(
          int index, choreo.Depth.LaserEcho value) {
        if (intensitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntensitiesIsMutable();
          intensities_.add(index, value);
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder addIntensities(
          choreo.Depth.LaserEcho.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.add(builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder addIntensities(
          int index, choreo.Depth.LaserEcho.Builder builderForValue) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.add(index, builderForValue.build());
          onChanged();
        } else {
          intensitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder addAllIntensities(
          java.lang.Iterable<? extends choreo.Depth.LaserEcho> values) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, intensities_);
          onChanged();
        } else {
          intensitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder clearIntensities() {
        if (intensitiesBuilder_ == null) {
          intensities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          intensitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public Builder removeIntensities(int index) {
        if (intensitiesBuilder_ == null) {
          ensureIntensitiesIsMutable();
          intensities_.remove(index);
          onChanged();
        } else {
          intensitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public choreo.Depth.LaserEcho.Builder getIntensitiesBuilder(
          int index) {
        return getIntensitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public choreo.Depth.LaserEchoOrBuilder getIntensitiesOrBuilder(
          int index) {
        if (intensitiesBuilder_ == null) {
          return intensities_.get(index);  } else {
          return intensitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public java.util.List<? extends choreo.Depth.LaserEchoOrBuilder> 
           getIntensitiesOrBuilderList() {
        if (intensitiesBuilder_ != null) {
          return intensitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(intensities_);
        }
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public choreo.Depth.LaserEcho.Builder addIntensitiesBuilder() {
        return getIntensitiesFieldBuilder().addBuilder(
            choreo.Depth.LaserEcho.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public choreo.Depth.LaserEcho.Builder addIntensitiesBuilder(
          int index) {
        return getIntensitiesFieldBuilder().addBuilder(
            index, choreo.Depth.LaserEcho.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.LaserEcho intensities = 10;</code>
       */
      public java.util.List<choreo.Depth.LaserEcho.Builder> 
           getIntensitiesBuilderList() {
        return getIntensitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder> 
          getIntensitiesFieldBuilder() {
        if (intensitiesBuilder_ == null) {
          intensitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Depth.LaserEcho, choreo.Depth.LaserEcho.Builder, choreo.Depth.LaserEchoOrBuilder>(
                  intensities_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          intensities_ = null;
        }
        return intensitiesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.MultiEchoLaserScan)
    }

    // @@protoc_insertion_point(class_scope:choreo.MultiEchoLaserScan)
    private static final choreo.Depth.MultiEchoLaserScan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.MultiEchoLaserScan();
    }

    public static choreo.Depth.MultiEchoLaserScan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiEchoLaserScan>
        PARSER = new com.google.protobuf.AbstractParser<MultiEchoLaserScan>() {
      public MultiEchoLaserScan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultiEchoLaserScan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiEchoLaserScan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiEchoLaserScan> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.MultiEchoLaserScan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.PointField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.String name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>.choreo.String name = 1;</code>
     */
    choreo.StringOuterClass.String getName();
    /**
     * <code>.choreo.String name = 1;</code>
     */
    choreo.StringOuterClass.StringOrBuilder getNameOrBuilder();

    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    choreo.Int.UInt32 getOffset();
    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    choreo.Int.UInt32OrBuilder getOffsetOrBuilder();

    /**
     * <code>.choreo.PointField.Datatype datatype = 3;</code>
     */
    int getDatatypeValue();
    /**
     * <code>.choreo.PointField.Datatype datatype = 3;</code>
     */
    choreo.Depth.PointField.Datatype getDatatype();

    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    boolean hasCount();
    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    choreo.Int.UInt32 getCount();
    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    choreo.Int.UInt32OrBuilder getCountOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.PointField}
   */
  public  static final class PointField extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.PointField)
      PointFieldOrBuilder {
    // Use PointField.newBuilder() to construct.
    private PointField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointField() {
      datatype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PointField(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.StringOuterClass.String.Builder subBuilder = null;
              if (name_ != null) {
                subBuilder = name_.toBuilder();
              }
              name_ = input.readMessage(choreo.StringOuterClass.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(name_);
                name_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (offset_ != null) {
                subBuilder = offset_.toBuilder();
              }
              offset_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(offset_);
                offset_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              datatype_ = rawValue;
              break;
            }
            case 34: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (count_ != null) {
                subBuilder = count_.toBuilder();
              }
              count_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(count_);
                count_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_PointField_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_PointField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.PointField.class, choreo.Depth.PointField.Builder.class);
    }

    /**
     * Protobuf enum {@code choreo.PointField.Datatype}
     */
    public enum Datatype
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INT8 = 0;</code>
       */
      INT8(0),
      /**
       * <code>UINT8 = 1;</code>
       */
      UINT8(1),
      /**
       * <code>INT16 = 2;</code>
       */
      INT16(2),
      /**
       * <code>UINT16 = 3;</code>
       */
      UINT16(3),
      /**
       * <code>INT32 = 4;</code>
       */
      INT32(4),
      /**
       * <code>UINT32 = 5;</code>
       */
      UINT32(5),
      /**
       * <code>FLOAT32 = 6;</code>
       */
      FLOAT32(6),
      /**
       * <code>FLOAT64 = 7;</code>
       */
      FLOAT64(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>INT8 = 0;</code>
       */
      public static final int INT8_VALUE = 0;
      /**
       * <code>UINT8 = 1;</code>
       */
      public static final int UINT8_VALUE = 1;
      /**
       * <code>INT16 = 2;</code>
       */
      public static final int INT16_VALUE = 2;
      /**
       * <code>UINT16 = 3;</code>
       */
      public static final int UINT16_VALUE = 3;
      /**
       * <code>INT32 = 4;</code>
       */
      public static final int INT32_VALUE = 4;
      /**
       * <code>UINT32 = 5;</code>
       */
      public static final int UINT32_VALUE = 5;
      /**
       * <code>FLOAT32 = 6;</code>
       */
      public static final int FLOAT32_VALUE = 6;
      /**
       * <code>FLOAT64 = 7;</code>
       */
      public static final int FLOAT64_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Datatype valueOf(int value) {
        return forNumber(value);
      }

      public static Datatype forNumber(int value) {
        switch (value) {
          case 0: return INT8;
          case 1: return UINT8;
          case 2: return INT16;
          case 3: return UINT16;
          case 4: return INT32;
          case 5: return UINT32;
          case 6: return FLOAT32;
          case 7: return FLOAT64;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Datatype>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Datatype> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Datatype>() {
              public Datatype findValueByNumber(int number) {
                return Datatype.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Depth.PointField.getDescriptor().getEnumTypes().get(0);
      }

      private static final Datatype[] VALUES = values();

      public static Datatype valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Datatype(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.PointField.Datatype)
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private choreo.StringOuterClass.String name_;
    /**
     * <code>.choreo.String name = 1;</code>
     */
    public boolean hasName() {
      return name_ != null;
    }
    /**
     * <code>.choreo.String name = 1;</code>
     */
    public choreo.StringOuterClass.String getName() {
      return name_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : name_;
    }
    /**
     * <code>.choreo.String name = 1;</code>
     */
    public choreo.StringOuterClass.StringOrBuilder getNameOrBuilder() {
      return getName();
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private choreo.Int.UInt32 offset_;
    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    public boolean hasOffset() {
      return offset_ != null;
    }
    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    public choreo.Int.UInt32 getOffset() {
      return offset_ == null ? choreo.Int.UInt32.getDefaultInstance() : offset_;
    }
    /**
     * <code>.choreo.UInt32 offset = 2;</code>
     */
    public choreo.Int.UInt32OrBuilder getOffsetOrBuilder() {
      return getOffset();
    }

    public static final int DATATYPE_FIELD_NUMBER = 3;
    private int datatype_;
    /**
     * <code>.choreo.PointField.Datatype datatype = 3;</code>
     */
    public int getDatatypeValue() {
      return datatype_;
    }
    /**
     * <code>.choreo.PointField.Datatype datatype = 3;</code>
     */
    public choreo.Depth.PointField.Datatype getDatatype() {
      choreo.Depth.PointField.Datatype result = choreo.Depth.PointField.Datatype.valueOf(datatype_);
      return result == null ? choreo.Depth.PointField.Datatype.UNRECOGNIZED : result;
    }

    public static final int COUNT_FIELD_NUMBER = 4;
    private choreo.Int.UInt32 count_;
    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    public boolean hasCount() {
      return count_ != null;
    }
    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    public choreo.Int.UInt32 getCount() {
      return count_ == null ? choreo.Int.UInt32.getDefaultInstance() : count_;
    }
    /**
     * <code>.choreo.UInt32 count = 4;</code>
     */
    public choreo.Int.UInt32OrBuilder getCountOrBuilder() {
      return getCount();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (name_ != null) {
        output.writeMessage(1, getName());
      }
      if (offset_ != null) {
        output.writeMessage(2, getOffset());
      }
      if (datatype_ != choreo.Depth.PointField.Datatype.INT8.getNumber()) {
        output.writeEnum(3, datatype_);
      }
      if (count_ != null) {
        output.writeMessage(4, getCount());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (name_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getName());
      }
      if (offset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOffset());
      }
      if (datatype_ != choreo.Depth.PointField.Datatype.INT8.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, datatype_);
      }
      if (count_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCount());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.PointField)) {
        return super.equals(obj);
      }
      choreo.Depth.PointField other = (choreo.Depth.PointField) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasOffset() == other.hasOffset());
      if (hasOffset()) {
        result = result && getOffset()
            .equals(other.getOffset());
      }
      result = result && datatype_ == other.datatype_;
      result = result && (hasCount() == other.hasCount());
      if (hasCount()) {
        result = result && getCount()
            .equals(other.getCount());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasOffset()) {
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getOffset().hashCode();
      }
      hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
      hash = (53 * hash) + datatype_;
      if (hasCount()) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCount().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.PointField parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointField parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.PointField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.PointField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.PointField)
        choreo.Depth.PointFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_PointField_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_PointField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.PointField.class, choreo.Depth.PointField.Builder.class);
      }

      // Construct using choreo.Depth.PointField.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (nameBuilder_ == null) {
          name_ = null;
        } else {
          name_ = null;
          nameBuilder_ = null;
        }
        if (offsetBuilder_ == null) {
          offset_ = null;
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }
        datatype_ = 0;

        if (countBuilder_ == null) {
          count_ = null;
        } else {
          count_ = null;
          countBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_PointField_descriptor;
      }

      public choreo.Depth.PointField getDefaultInstanceForType() {
        return choreo.Depth.PointField.getDefaultInstance();
      }

      public choreo.Depth.PointField build() {
        choreo.Depth.PointField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.PointField buildPartial() {
        choreo.Depth.PointField result = new choreo.Depth.PointField(this);
        if (nameBuilder_ == null) {
          result.name_ = name_;
        } else {
          result.name_ = nameBuilder_.build();
        }
        if (offsetBuilder_ == null) {
          result.offset_ = offset_;
        } else {
          result.offset_ = offsetBuilder_.build();
        }
        result.datatype_ = datatype_;
        if (countBuilder_ == null) {
          result.count_ = count_;
        } else {
          result.count_ = countBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.PointField) {
          return mergeFrom((choreo.Depth.PointField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.PointField other) {
        if (other == choreo.Depth.PointField.getDefaultInstance()) return this;
        if (other.hasName()) {
          mergeName(other.getName());
        }
        if (other.hasOffset()) {
          mergeOffset(other.getOffset());
        }
        if (other.datatype_ != 0) {
          setDatatypeValue(other.getDatatypeValue());
        }
        if (other.hasCount()) {
          mergeCount(other.getCount());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.PointField parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.PointField) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.StringOuterClass.String name_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> nameBuilder_;
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public boolean hasName() {
        return nameBuilder_ != null || name_ != null;
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public choreo.StringOuterClass.String getName() {
        if (nameBuilder_ == null) {
          return name_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : name_;
        } else {
          return nameBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public Builder setName(choreo.StringOuterClass.String value) {
        if (nameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          name_ = value;
          onChanged();
        } else {
          nameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public Builder setName(
          choreo.StringOuterClass.String.Builder builderForValue) {
        if (nameBuilder_ == null) {
          name_ = builderForValue.build();
          onChanged();
        } else {
          nameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public Builder mergeName(choreo.StringOuterClass.String value) {
        if (nameBuilder_ == null) {
          if (name_ != null) {
            name_ =
              choreo.StringOuterClass.String.newBuilder(name_).mergeFrom(value).buildPartial();
          } else {
            name_ = value;
          }
          onChanged();
        } else {
          nameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public Builder clearName() {
        if (nameBuilder_ == null) {
          name_ = null;
          onChanged();
        } else {
          name_ = null;
          nameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public choreo.StringOuterClass.String.Builder getNameBuilder() {
        
        onChanged();
        return getNameFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      public choreo.StringOuterClass.StringOrBuilder getNameOrBuilder() {
        if (nameBuilder_ != null) {
          return nameBuilder_.getMessageOrBuilder();
        } else {
          return name_ == null ?
              choreo.StringOuterClass.String.getDefaultInstance() : name_;
        }
      }
      /**
       * <code>.choreo.String name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> 
          getNameFieldBuilder() {
        if (nameBuilder_ == null) {
          nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder>(
                  getName(),
                  getParentForChildren(),
                  isClean());
          name_ = null;
        }
        return nameBuilder_;
      }

      private choreo.Int.UInt32 offset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> offsetBuilder_;
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public boolean hasOffset() {
        return offsetBuilder_ != null || offset_ != null;
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public choreo.Int.UInt32 getOffset() {
        if (offsetBuilder_ == null) {
          return offset_ == null ? choreo.Int.UInt32.getDefaultInstance() : offset_;
        } else {
          return offsetBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public Builder setOffset(choreo.Int.UInt32 value) {
        if (offsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          offset_ = value;
          onChanged();
        } else {
          offsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public Builder setOffset(
          choreo.Int.UInt32.Builder builderForValue) {
        if (offsetBuilder_ == null) {
          offset_ = builderForValue.build();
          onChanged();
        } else {
          offsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public Builder mergeOffset(choreo.Int.UInt32 value) {
        if (offsetBuilder_ == null) {
          if (offset_ != null) {
            offset_ =
              choreo.Int.UInt32.newBuilder(offset_).mergeFrom(value).buildPartial();
          } else {
            offset_ = value;
          }
          onChanged();
        } else {
          offsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public Builder clearOffset() {
        if (offsetBuilder_ == null) {
          offset_ = null;
          onChanged();
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public choreo.Int.UInt32.Builder getOffsetBuilder() {
        
        onChanged();
        return getOffsetFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      public choreo.Int.UInt32OrBuilder getOffsetOrBuilder() {
        if (offsetBuilder_ != null) {
          return offsetBuilder_.getMessageOrBuilder();
        } else {
          return offset_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : offset_;
        }
      }
      /**
       * <code>.choreo.UInt32 offset = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getOffsetFieldBuilder() {
        if (offsetBuilder_ == null) {
          offsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getOffset(),
                  getParentForChildren(),
                  isClean());
          offset_ = null;
        }
        return offsetBuilder_;
      }

      private int datatype_ = 0;
      /**
       * <code>.choreo.PointField.Datatype datatype = 3;</code>
       */
      public int getDatatypeValue() {
        return datatype_;
      }
      /**
       * <code>.choreo.PointField.Datatype datatype = 3;</code>
       */
      public Builder setDatatypeValue(int value) {
        datatype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.PointField.Datatype datatype = 3;</code>
       */
      public choreo.Depth.PointField.Datatype getDatatype() {
        choreo.Depth.PointField.Datatype result = choreo.Depth.PointField.Datatype.valueOf(datatype_);
        return result == null ? choreo.Depth.PointField.Datatype.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.PointField.Datatype datatype = 3;</code>
       */
      public Builder setDatatype(choreo.Depth.PointField.Datatype value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        datatype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.PointField.Datatype datatype = 3;</code>
       */
      public Builder clearDatatype() {
        
        datatype_ = 0;
        onChanged();
        return this;
      }

      private choreo.Int.UInt32 count_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> countBuilder_;
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public boolean hasCount() {
        return countBuilder_ != null || count_ != null;
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public choreo.Int.UInt32 getCount() {
        if (countBuilder_ == null) {
          return count_ == null ? choreo.Int.UInt32.getDefaultInstance() : count_;
        } else {
          return countBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public Builder setCount(choreo.Int.UInt32 value) {
        if (countBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          count_ = value;
          onChanged();
        } else {
          countBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public Builder setCount(
          choreo.Int.UInt32.Builder builderForValue) {
        if (countBuilder_ == null) {
          count_ = builderForValue.build();
          onChanged();
        } else {
          countBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public Builder mergeCount(choreo.Int.UInt32 value) {
        if (countBuilder_ == null) {
          if (count_ != null) {
            count_ =
              choreo.Int.UInt32.newBuilder(count_).mergeFrom(value).buildPartial();
          } else {
            count_ = value;
          }
          onChanged();
        } else {
          countBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public Builder clearCount() {
        if (countBuilder_ == null) {
          count_ = null;
          onChanged();
        } else {
          count_ = null;
          countBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public choreo.Int.UInt32.Builder getCountBuilder() {
        
        onChanged();
        return getCountFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      public choreo.Int.UInt32OrBuilder getCountOrBuilder() {
        if (countBuilder_ != null) {
          return countBuilder_.getMessageOrBuilder();
        } else {
          return count_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : count_;
        }
      }
      /**
       * <code>.choreo.UInt32 count = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getCountFieldBuilder() {
        if (countBuilder_ == null) {
          countBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getCount(),
                  getParentForChildren(),
                  isClean());
          count_ = null;
        }
        return countBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.PointField)
    }

    // @@protoc_insertion_point(class_scope:choreo.PointField)
    private static final choreo.Depth.PointField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.PointField();
    }

    public static choreo.Depth.PointField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointField>
        PARSER = new com.google.protobuf.AbstractParser<PointField>() {
      public PointField parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PointField(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointField> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.PointField getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointCloudOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.PointCloud)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    java.util.List<choreo.PointOuterClass.Point32> 
        getPointsList();
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    choreo.PointOuterClass.Point32 getPoints(int index);
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    int getPointsCount();
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    java.util.List<? extends choreo.PointOuterClass.Point32OrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    choreo.PointOuterClass.Point32OrBuilder getPointsOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    java.util.List<choreo.Camera.ChannelFloat32> 
        getChannelsList();
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    choreo.Camera.ChannelFloat32 getChannels(int index);
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    int getChannelsCount();
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    java.util.List<? extends choreo.Camera.ChannelFloat32OrBuilder> 
        getChannelsOrBuilderList();
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    choreo.Camera.ChannelFloat32OrBuilder getChannelsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.PointCloud}
   */
  public  static final class PointCloud extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.PointCloud)
      PointCloudOrBuilder {
    // Use PointCloud.newBuilder() to construct.
    private PointCloud(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointCloud() {
      points_ = java.util.Collections.emptyList();
      channels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PointCloud(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                points_ = new java.util.ArrayList<choreo.PointOuterClass.Point32>();
                mutable_bitField0_ |= 0x00000002;
              }
              points_.add(
                  input.readMessage(choreo.PointOuterClass.Point32.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                channels_ = new java.util.ArrayList<choreo.Camera.ChannelFloat32>();
                mutable_bitField0_ |= 0x00000004;
              }
              channels_.add(
                  input.readMessage(choreo.Camera.ChannelFloat32.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          channels_ = java.util.Collections.unmodifiableList(channels_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_PointCloud_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_PointCloud_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.PointCloud.class, choreo.Depth.PointCloud.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int POINTS_FIELD_NUMBER = 2;
    private java.util.List<choreo.PointOuterClass.Point32> points_;
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    public java.util.List<choreo.PointOuterClass.Point32> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    public java.util.List<? extends choreo.PointOuterClass.Point32OrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    public choreo.PointOuterClass.Point32 getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .choreo.Point32 points = 2;</code>
     */
    public choreo.PointOuterClass.Point32OrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    public static final int CHANNELS_FIELD_NUMBER = 3;
    private java.util.List<choreo.Camera.ChannelFloat32> channels_;
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    public java.util.List<choreo.Camera.ChannelFloat32> getChannelsList() {
      return channels_;
    }
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    public java.util.List<? extends choreo.Camera.ChannelFloat32OrBuilder> 
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    public choreo.Camera.ChannelFloat32 getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
     */
    public choreo.Camera.ChannelFloat32OrBuilder getChannelsOrBuilder(
        int index) {
      return channels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(2, points_.get(i));
      }
      for (int i = 0; i < channels_.size(); i++) {
        output.writeMessage(3, channels_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, points_.get(i));
      }
      for (int i = 0; i < channels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, channels_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.PointCloud)) {
        return super.equals(obj);
      }
      choreo.Depth.PointCloud other = (choreo.Depth.PointCloud) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && getPointsList()
          .equals(other.getPointsList());
      result = result && getChannelsList()
          .equals(other.getChannelsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      if (getChannelsCount() > 0) {
        hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.PointCloud parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointCloud parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointCloud parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.PointCloud prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.PointCloud}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.PointCloud)
        choreo.Depth.PointCloudOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_PointCloud_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_PointCloud_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.PointCloud.class, choreo.Depth.PointCloud.Builder.class);
      }

      // Construct using choreo.Depth.PointCloud.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
          getChannelsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          pointsBuilder_.clear();
        }
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_PointCloud_descriptor;
      }

      public choreo.Depth.PointCloud getDefaultInstanceForType() {
        return choreo.Depth.PointCloud.getDefaultInstance();
      }

      public choreo.Depth.PointCloud build() {
        choreo.Depth.PointCloud result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.PointCloud buildPartial() {
        choreo.Depth.PointCloud result = new choreo.Depth.PointCloud(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        if (channelsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            channels_ = java.util.Collections.unmodifiableList(channels_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.channels_ = channels_;
        } else {
          result.channels_ = channelsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.PointCloud) {
          return mergeFrom((choreo.Depth.PointCloud)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.PointCloud other) {
        if (other == choreo.Depth.PointCloud.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000002);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        if (channelsBuilder_ == null) {
          if (!other.channels_.isEmpty()) {
            if (channels_.isEmpty()) {
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChannelsIsMutable();
              channels_.addAll(other.channels_);
            }
            onChanged();
          }
        } else {
          if (!other.channels_.isEmpty()) {
            if (channelsBuilder_.isEmpty()) {
              channelsBuilder_.dispose();
              channelsBuilder_ = null;
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000004);
              channelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelsFieldBuilder() : null;
            } else {
              channelsBuilder_.addAllMessages(other.channels_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.PointCloud parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.PointCloud) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<choreo.PointOuterClass.Point32> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          points_ = new java.util.ArrayList<choreo.PointOuterClass.Point32>(points_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.PointOuterClass.Point32, choreo.PointOuterClass.Point32.Builder, choreo.PointOuterClass.Point32OrBuilder> pointsBuilder_;

      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public java.util.List<choreo.PointOuterClass.Point32> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public choreo.PointOuterClass.Point32 getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder setPoints(
          int index, choreo.PointOuterClass.Point32 value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder setPoints(
          int index, choreo.PointOuterClass.Point32.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder addPoints(choreo.PointOuterClass.Point32 value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder addPoints(
          int index, choreo.PointOuterClass.Point32 value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder addPoints(
          choreo.PointOuterClass.Point32.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder addPoints(
          int index, choreo.PointOuterClass.Point32.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends choreo.PointOuterClass.Point32> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public choreo.PointOuterClass.Point32.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public choreo.PointOuterClass.Point32OrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public java.util.List<? extends choreo.PointOuterClass.Point32OrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public choreo.PointOuterClass.Point32.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            choreo.PointOuterClass.Point32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public choreo.PointOuterClass.Point32.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, choreo.PointOuterClass.Point32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Point32 points = 2;</code>
       */
      public java.util.List<choreo.PointOuterClass.Point32.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.PointOuterClass.Point32, choreo.PointOuterClass.Point32.Builder, choreo.PointOuterClass.Point32OrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.PointOuterClass.Point32, choreo.PointOuterClass.Point32.Builder, choreo.PointOuterClass.Point32OrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      private java.util.List<choreo.Camera.ChannelFloat32> channels_ =
        java.util.Collections.emptyList();
      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          channels_ = new java.util.ArrayList<choreo.Camera.ChannelFloat32>(channels_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Camera.ChannelFloat32, choreo.Camera.ChannelFloat32.Builder, choreo.Camera.ChannelFloat32OrBuilder> channelsBuilder_;

      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public java.util.List<choreo.Camera.ChannelFloat32> getChannelsList() {
        if (channelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channels_);
        } else {
          return channelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public int getChannelsCount() {
        if (channelsBuilder_ == null) {
          return channels_.size();
        } else {
          return channelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public choreo.Camera.ChannelFloat32 getChannels(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder setChannels(
          int index, choreo.Camera.ChannelFloat32 value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.set(index, value);
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder setChannels(
          int index, choreo.Camera.ChannelFloat32.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder addChannels(choreo.Camera.ChannelFloat32 value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder addChannels(
          int index, choreo.Camera.ChannelFloat32 value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(index, value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder addChannels(
          choreo.Camera.ChannelFloat32.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder addChannels(
          int index, choreo.Camera.ChannelFloat32.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<? extends choreo.Camera.ChannelFloat32> values) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channels_);
          onChanged();
        } else {
          channelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder clearChannels() {
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public Builder removeChannels(int index) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.remove(index);
          onChanged();
        } else {
          channelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public choreo.Camera.ChannelFloat32.Builder getChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public choreo.Camera.ChannelFloat32OrBuilder getChannelsOrBuilder(
          int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);  } else {
          return channelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public java.util.List<? extends choreo.Camera.ChannelFloat32OrBuilder> 
           getChannelsOrBuilderList() {
        if (channelsBuilder_ != null) {
          return channelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channels_);
        }
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public choreo.Camera.ChannelFloat32.Builder addChannelsBuilder() {
        return getChannelsFieldBuilder().addBuilder(
            choreo.Camera.ChannelFloat32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public choreo.Camera.ChannelFloat32.Builder addChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().addBuilder(
            index, choreo.Camera.ChannelFloat32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.ChannelFloat32 channels = 3;</code>
       */
      public java.util.List<choreo.Camera.ChannelFloat32.Builder> 
           getChannelsBuilderList() {
        return getChannelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Camera.ChannelFloat32, choreo.Camera.ChannelFloat32.Builder, choreo.Camera.ChannelFloat32OrBuilder> 
          getChannelsFieldBuilder() {
        if (channelsBuilder_ == null) {
          channelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Camera.ChannelFloat32, choreo.Camera.ChannelFloat32.Builder, choreo.Camera.ChannelFloat32OrBuilder>(
                  channels_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          channels_ = null;
        }
        return channelsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.PointCloud)
    }

    // @@protoc_insertion_point(class_scope:choreo.PointCloud)
    private static final choreo.Depth.PointCloud DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.PointCloud();
    }

    public static choreo.Depth.PointCloud getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointCloud>
        PARSER = new com.google.protobuf.AbstractParser<PointCloud>() {
      public PointCloud parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PointCloud(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointCloud> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointCloud> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.PointCloud getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PointCloud2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.PointCloud2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    boolean hasHeight();
    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    choreo.Int.UInt32 getHeight();
    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    choreo.Int.UInt32OrBuilder getHeightOrBuilder();

    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    boolean hasWidth();
    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    choreo.Int.UInt32 getWidth();
    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    choreo.Int.UInt32OrBuilder getWidthOrBuilder();

    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    java.util.List<choreo.Depth.PointField> 
        getFieldsList();
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    choreo.Depth.PointField getFields(int index);
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    java.util.List<? extends choreo.Depth.PointFieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    choreo.Depth.PointFieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    boolean hasIsBigendian();
    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    choreo.BoolOuterClass.Bool getIsBigendian();
    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    choreo.BoolOuterClass.BoolOrBuilder getIsBigendianOrBuilder();

    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    boolean hasPointStep();
    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    choreo.Int.UInt32 getPointStep();
    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    choreo.Int.UInt32OrBuilder getPointStepOrBuilder();

    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    boolean hasRowStep();
    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    choreo.Int.UInt32 getRowStep();
    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    choreo.Int.UInt32OrBuilder getRowStepOrBuilder();

    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    boolean hasData();
    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    choreo.BytesOuterClass.Bytes getData();
    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    choreo.BytesOuterClass.BytesOrBuilder getDataOrBuilder();

    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    boolean hasIsDense();
    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    choreo.BoolOuterClass.Bool getIsDense();
    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    choreo.BoolOuterClass.BoolOrBuilder getIsDenseOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.PointCloud2}
   */
  public  static final class PointCloud2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.PointCloud2)
      PointCloud2OrBuilder {
    // Use PointCloud2.newBuilder() to construct.
    private PointCloud2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PointCloud2() {
      fields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PointCloud2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (height_ != null) {
                subBuilder = height_.toBuilder();
              }
              height_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(height_);
                height_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (width_ != null) {
                subBuilder = width_.toBuilder();
              }
              width_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(width_);
                width_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fields_ = new java.util.ArrayList<choreo.Depth.PointField>();
                mutable_bitField0_ |= 0x00000008;
              }
              fields_.add(
                  input.readMessage(choreo.Depth.PointField.parser(), extensionRegistry));
              break;
            }
            case 42: {
              choreo.BoolOuterClass.Bool.Builder subBuilder = null;
              if (isBigendian_ != null) {
                subBuilder = isBigendian_.toBuilder();
              }
              isBigendian_ = input.readMessage(choreo.BoolOuterClass.Bool.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(isBigendian_);
                isBigendian_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (pointStep_ != null) {
                subBuilder = pointStep_.toBuilder();
              }
              pointStep_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pointStep_);
                pointStep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (rowStep_ != null) {
                subBuilder = rowStep_.toBuilder();
              }
              rowStep_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rowStep_);
                rowStep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              choreo.BytesOuterClass.Bytes.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(choreo.BytesOuterClass.Bytes.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              choreo.BoolOuterClass.Bool.Builder subBuilder = null;
              if (isDense_ != null) {
                subBuilder = isDense_.toBuilder();
              }
              isDense_ = input.readMessage(choreo.BoolOuterClass.Bool.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(isDense_);
                isDense_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_PointCloud2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_PointCloud2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.PointCloud2.class, choreo.Depth.PointCloud2.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int HEIGHT_FIELD_NUMBER = 2;
    private choreo.Int.UInt32 height_;
    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    public boolean hasHeight() {
      return height_ != null;
    }
    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    public choreo.Int.UInt32 getHeight() {
      return height_ == null ? choreo.Int.UInt32.getDefaultInstance() : height_;
    }
    /**
     * <code>.choreo.UInt32 height = 2;</code>
     */
    public choreo.Int.UInt32OrBuilder getHeightOrBuilder() {
      return getHeight();
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private choreo.Int.UInt32 width_;
    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    public boolean hasWidth() {
      return width_ != null;
    }
    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    public choreo.Int.UInt32 getWidth() {
      return width_ == null ? choreo.Int.UInt32.getDefaultInstance() : width_;
    }
    /**
     * <code>.choreo.UInt32 width = 3;</code>
     */
    public choreo.Int.UInt32OrBuilder getWidthOrBuilder() {
      return getWidth();
    }

    public static final int FIELDS_FIELD_NUMBER = 4;
    private java.util.List<choreo.Depth.PointField> fields_;
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    public java.util.List<choreo.Depth.PointField> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    public java.util.List<? extends choreo.Depth.PointFieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    public choreo.Depth.PointField getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .choreo.PointField fields = 4;</code>
     */
    public choreo.Depth.PointFieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int IS_BIGENDIAN_FIELD_NUMBER = 5;
    private choreo.BoolOuterClass.Bool isBigendian_;
    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    public boolean hasIsBigendian() {
      return isBigendian_ != null;
    }
    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    public choreo.BoolOuterClass.Bool getIsBigendian() {
      return isBigendian_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : isBigendian_;
    }
    /**
     * <code>.choreo.Bool is_bigendian = 5;</code>
     */
    public choreo.BoolOuterClass.BoolOrBuilder getIsBigendianOrBuilder() {
      return getIsBigendian();
    }

    public static final int POINT_STEP_FIELD_NUMBER = 6;
    private choreo.Int.UInt32 pointStep_;
    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    public boolean hasPointStep() {
      return pointStep_ != null;
    }
    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    public choreo.Int.UInt32 getPointStep() {
      return pointStep_ == null ? choreo.Int.UInt32.getDefaultInstance() : pointStep_;
    }
    /**
     * <code>.choreo.UInt32 point_step = 6;</code>
     */
    public choreo.Int.UInt32OrBuilder getPointStepOrBuilder() {
      return getPointStep();
    }

    public static final int ROW_STEP_FIELD_NUMBER = 7;
    private choreo.Int.UInt32 rowStep_;
    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    public boolean hasRowStep() {
      return rowStep_ != null;
    }
    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    public choreo.Int.UInt32 getRowStep() {
      return rowStep_ == null ? choreo.Int.UInt32.getDefaultInstance() : rowStep_;
    }
    /**
     * <code>.choreo.UInt32 row_step = 7;</code>
     */
    public choreo.Int.UInt32OrBuilder getRowStepOrBuilder() {
      return getRowStep();
    }

    public static final int DATA_FIELD_NUMBER = 8;
    private choreo.BytesOuterClass.Bytes data_;
    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    public choreo.BytesOuterClass.Bytes getData() {
      return data_ == null ? choreo.BytesOuterClass.Bytes.getDefaultInstance() : data_;
    }
    /**
     * <code>.choreo.Bytes data = 8;</code>
     */
    public choreo.BytesOuterClass.BytesOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int IS_DENSE_FIELD_NUMBER = 9;
    private choreo.BoolOuterClass.Bool isDense_;
    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    public boolean hasIsDense() {
      return isDense_ != null;
    }
    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    public choreo.BoolOuterClass.Bool getIsDense() {
      return isDense_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : isDense_;
    }
    /**
     * <code>.choreo.Bool is_dense = 9;</code>
     */
    public choreo.BoolOuterClass.BoolOrBuilder getIsDenseOrBuilder() {
      return getIsDense();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (height_ != null) {
        output.writeMessage(2, getHeight());
      }
      if (width_ != null) {
        output.writeMessage(3, getWidth());
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(4, fields_.get(i));
      }
      if (isBigendian_ != null) {
        output.writeMessage(5, getIsBigendian());
      }
      if (pointStep_ != null) {
        output.writeMessage(6, getPointStep());
      }
      if (rowStep_ != null) {
        output.writeMessage(7, getRowStep());
      }
      if (data_ != null) {
        output.writeMessage(8, getData());
      }
      if (isDense_ != null) {
        output.writeMessage(9, getIsDense());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (height_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHeight());
      }
      if (width_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getWidth());
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fields_.get(i));
      }
      if (isBigendian_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getIsBigendian());
      }
      if (pointStep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPointStep());
      }
      if (rowStep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRowStep());
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getData());
      }
      if (isDense_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getIsDense());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.PointCloud2)) {
        return super.equals(obj);
      }
      choreo.Depth.PointCloud2 other = (choreo.Depth.PointCloud2) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasHeight() == other.hasHeight());
      if (hasHeight()) {
        result = result && getHeight()
            .equals(other.getHeight());
      }
      result = result && (hasWidth() == other.hasWidth());
      if (hasWidth()) {
        result = result && getWidth()
            .equals(other.getWidth());
      }
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && (hasIsBigendian() == other.hasIsBigendian());
      if (hasIsBigendian()) {
        result = result && getIsBigendian()
            .equals(other.getIsBigendian());
      }
      result = result && (hasPointStep() == other.hasPointStep());
      if (hasPointStep()) {
        result = result && getPointStep()
            .equals(other.getPointStep());
      }
      result = result && (hasRowStep() == other.hasRowStep());
      if (hasRowStep()) {
        result = result && getRowStep()
            .equals(other.getRowStep());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasIsDense() == other.hasIsDense());
      if (hasIsDense()) {
        result = result && getIsDense()
            .equals(other.getIsDense());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight().hashCode();
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth().hashCode();
      }
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      if (hasIsBigendian()) {
        hash = (37 * hash) + IS_BIGENDIAN_FIELD_NUMBER;
        hash = (53 * hash) + getIsBigendian().hashCode();
      }
      if (hasPointStep()) {
        hash = (37 * hash) + POINT_STEP_FIELD_NUMBER;
        hash = (53 * hash) + getPointStep().hashCode();
      }
      if (hasRowStep()) {
        hash = (37 * hash) + ROW_STEP_FIELD_NUMBER;
        hash = (53 * hash) + getRowStep().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasIsDense()) {
        hash = (37 * hash) + IS_DENSE_FIELD_NUMBER;
        hash = (53 * hash) + getIsDense().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.PointCloud2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.PointCloud2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointCloud2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.PointCloud2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.PointCloud2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.PointCloud2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.PointCloud2)
        choreo.Depth.PointCloud2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_PointCloud2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_PointCloud2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.PointCloud2.class, choreo.Depth.PointCloud2.Builder.class);
      }

      // Construct using choreo.Depth.PointCloud2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (heightBuilder_ == null) {
          height_ = null;
        } else {
          height_ = null;
          heightBuilder_ = null;
        }
        if (widthBuilder_ == null) {
          width_ = null;
        } else {
          width_ = null;
          widthBuilder_ = null;
        }
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          fieldsBuilder_.clear();
        }
        if (isBigendianBuilder_ == null) {
          isBigendian_ = null;
        } else {
          isBigendian_ = null;
          isBigendianBuilder_ = null;
        }
        if (pointStepBuilder_ == null) {
          pointStep_ = null;
        } else {
          pointStep_ = null;
          pointStepBuilder_ = null;
        }
        if (rowStepBuilder_ == null) {
          rowStep_ = null;
        } else {
          rowStep_ = null;
          rowStepBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        if (isDenseBuilder_ == null) {
          isDense_ = null;
        } else {
          isDense_ = null;
          isDenseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_PointCloud2_descriptor;
      }

      public choreo.Depth.PointCloud2 getDefaultInstanceForType() {
        return choreo.Depth.PointCloud2.getDefaultInstance();
      }

      public choreo.Depth.PointCloud2 build() {
        choreo.Depth.PointCloud2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.PointCloud2 buildPartial() {
        choreo.Depth.PointCloud2 result = new choreo.Depth.PointCloud2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (heightBuilder_ == null) {
          result.height_ = height_;
        } else {
          result.height_ = heightBuilder_.build();
        }
        if (widthBuilder_ == null) {
          result.width_ = width_;
        } else {
          result.width_ = widthBuilder_.build();
        }
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        if (isBigendianBuilder_ == null) {
          result.isBigendian_ = isBigendian_;
        } else {
          result.isBigendian_ = isBigendianBuilder_.build();
        }
        if (pointStepBuilder_ == null) {
          result.pointStep_ = pointStep_;
        } else {
          result.pointStep_ = pointStepBuilder_.build();
        }
        if (rowStepBuilder_ == null) {
          result.rowStep_ = rowStep_;
        } else {
          result.rowStep_ = rowStepBuilder_.build();
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (isDenseBuilder_ == null) {
          result.isDense_ = isDense_;
        } else {
          result.isDense_ = isDenseBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.PointCloud2) {
          return mergeFrom((choreo.Depth.PointCloud2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.PointCloud2 other) {
        if (other == choreo.Depth.PointCloud2.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasHeight()) {
          mergeHeight(other.getHeight());
        }
        if (other.hasWidth()) {
          mergeWidth(other.getWidth());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000008);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.hasIsBigendian()) {
          mergeIsBigendian(other.getIsBigendian());
        }
        if (other.hasPointStep()) {
          mergePointStep(other.getPointStep());
        }
        if (other.hasRowStep()) {
          mergeRowStep(other.getRowStep());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.hasIsDense()) {
          mergeIsDense(other.getIsDense());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.PointCloud2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.PointCloud2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.Int.UInt32 height_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> heightBuilder_;
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public boolean hasHeight() {
        return heightBuilder_ != null || height_ != null;
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public choreo.Int.UInt32 getHeight() {
        if (heightBuilder_ == null) {
          return height_ == null ? choreo.Int.UInt32.getDefaultInstance() : height_;
        } else {
          return heightBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public Builder setHeight(choreo.Int.UInt32 value) {
        if (heightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          height_ = value;
          onChanged();
        } else {
          heightBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public Builder setHeight(
          choreo.Int.UInt32.Builder builderForValue) {
        if (heightBuilder_ == null) {
          height_ = builderForValue.build();
          onChanged();
        } else {
          heightBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public Builder mergeHeight(choreo.Int.UInt32 value) {
        if (heightBuilder_ == null) {
          if (height_ != null) {
            height_ =
              choreo.Int.UInt32.newBuilder(height_).mergeFrom(value).buildPartial();
          } else {
            height_ = value;
          }
          onChanged();
        } else {
          heightBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public Builder clearHeight() {
        if (heightBuilder_ == null) {
          height_ = null;
          onChanged();
        } else {
          height_ = null;
          heightBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public choreo.Int.UInt32.Builder getHeightBuilder() {
        
        onChanged();
        return getHeightFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      public choreo.Int.UInt32OrBuilder getHeightOrBuilder() {
        if (heightBuilder_ != null) {
          return heightBuilder_.getMessageOrBuilder();
        } else {
          return height_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : height_;
        }
      }
      /**
       * <code>.choreo.UInt32 height = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getHeightFieldBuilder() {
        if (heightBuilder_ == null) {
          heightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getHeight(),
                  getParentForChildren(),
                  isClean());
          height_ = null;
        }
        return heightBuilder_;
      }

      private choreo.Int.UInt32 width_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> widthBuilder_;
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public boolean hasWidth() {
        return widthBuilder_ != null || width_ != null;
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public choreo.Int.UInt32 getWidth() {
        if (widthBuilder_ == null) {
          return width_ == null ? choreo.Int.UInt32.getDefaultInstance() : width_;
        } else {
          return widthBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public Builder setWidth(choreo.Int.UInt32 value) {
        if (widthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          width_ = value;
          onChanged();
        } else {
          widthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public Builder setWidth(
          choreo.Int.UInt32.Builder builderForValue) {
        if (widthBuilder_ == null) {
          width_ = builderForValue.build();
          onChanged();
        } else {
          widthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public Builder mergeWidth(choreo.Int.UInt32 value) {
        if (widthBuilder_ == null) {
          if (width_ != null) {
            width_ =
              choreo.Int.UInt32.newBuilder(width_).mergeFrom(value).buildPartial();
          } else {
            width_ = value;
          }
          onChanged();
        } else {
          widthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public Builder clearWidth() {
        if (widthBuilder_ == null) {
          width_ = null;
          onChanged();
        } else {
          width_ = null;
          widthBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public choreo.Int.UInt32.Builder getWidthBuilder() {
        
        onChanged();
        return getWidthFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      public choreo.Int.UInt32OrBuilder getWidthOrBuilder() {
        if (widthBuilder_ != null) {
          return widthBuilder_.getMessageOrBuilder();
        } else {
          return width_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : width_;
        }
      }
      /**
       * <code>.choreo.UInt32 width = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getWidthFieldBuilder() {
        if (widthBuilder_ == null) {
          widthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getWidth(),
                  getParentForChildren(),
                  isClean());
          width_ = null;
        }
        return widthBuilder_;
      }

      private java.util.List<choreo.Depth.PointField> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fields_ = new java.util.ArrayList<choreo.Depth.PointField>(fields_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.PointField, choreo.Depth.PointField.Builder, choreo.Depth.PointFieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public java.util.List<choreo.Depth.PointField> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public choreo.Depth.PointField getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder setFields(
          int index, choreo.Depth.PointField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder setFields(
          int index, choreo.Depth.PointField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder addFields(choreo.Depth.PointField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder addFields(
          int index, choreo.Depth.PointField value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder addFields(
          choreo.Depth.PointField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder addFields(
          int index, choreo.Depth.PointField.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends choreo.Depth.PointField> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public choreo.Depth.PointField.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public choreo.Depth.PointFieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public java.util.List<? extends choreo.Depth.PointFieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public choreo.Depth.PointField.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            choreo.Depth.PointField.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public choreo.Depth.PointField.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, choreo.Depth.PointField.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.PointField fields = 4;</code>
       */
      public java.util.List<choreo.Depth.PointField.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Depth.PointField, choreo.Depth.PointField.Builder, choreo.Depth.PointFieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Depth.PointField, choreo.Depth.PointField.Builder, choreo.Depth.PointFieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private choreo.BoolOuterClass.Bool isBigendian_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> isBigendianBuilder_;
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public boolean hasIsBigendian() {
        return isBigendianBuilder_ != null || isBigendian_ != null;
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public choreo.BoolOuterClass.Bool getIsBigendian() {
        if (isBigendianBuilder_ == null) {
          return isBigendian_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : isBigendian_;
        } else {
          return isBigendianBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public Builder setIsBigendian(choreo.BoolOuterClass.Bool value) {
        if (isBigendianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          isBigendian_ = value;
          onChanged();
        } else {
          isBigendianBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public Builder setIsBigendian(
          choreo.BoolOuterClass.Bool.Builder builderForValue) {
        if (isBigendianBuilder_ == null) {
          isBigendian_ = builderForValue.build();
          onChanged();
        } else {
          isBigendianBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public Builder mergeIsBigendian(choreo.BoolOuterClass.Bool value) {
        if (isBigendianBuilder_ == null) {
          if (isBigendian_ != null) {
            isBigendian_ =
              choreo.BoolOuterClass.Bool.newBuilder(isBigendian_).mergeFrom(value).buildPartial();
          } else {
            isBigendian_ = value;
          }
          onChanged();
        } else {
          isBigendianBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public Builder clearIsBigendian() {
        if (isBigendianBuilder_ == null) {
          isBigendian_ = null;
          onChanged();
        } else {
          isBigendian_ = null;
          isBigendianBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public choreo.BoolOuterClass.Bool.Builder getIsBigendianBuilder() {
        
        onChanged();
        return getIsBigendianFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      public choreo.BoolOuterClass.BoolOrBuilder getIsBigendianOrBuilder() {
        if (isBigendianBuilder_ != null) {
          return isBigendianBuilder_.getMessageOrBuilder();
        } else {
          return isBigendian_ == null ?
              choreo.BoolOuterClass.Bool.getDefaultInstance() : isBigendian_;
        }
      }
      /**
       * <code>.choreo.Bool is_bigendian = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> 
          getIsBigendianFieldBuilder() {
        if (isBigendianBuilder_ == null) {
          isBigendianBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder>(
                  getIsBigendian(),
                  getParentForChildren(),
                  isClean());
          isBigendian_ = null;
        }
        return isBigendianBuilder_;
      }

      private choreo.Int.UInt32 pointStep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> pointStepBuilder_;
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public boolean hasPointStep() {
        return pointStepBuilder_ != null || pointStep_ != null;
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public choreo.Int.UInt32 getPointStep() {
        if (pointStepBuilder_ == null) {
          return pointStep_ == null ? choreo.Int.UInt32.getDefaultInstance() : pointStep_;
        } else {
          return pointStepBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public Builder setPointStep(choreo.Int.UInt32 value) {
        if (pointStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pointStep_ = value;
          onChanged();
        } else {
          pointStepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public Builder setPointStep(
          choreo.Int.UInt32.Builder builderForValue) {
        if (pointStepBuilder_ == null) {
          pointStep_ = builderForValue.build();
          onChanged();
        } else {
          pointStepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public Builder mergePointStep(choreo.Int.UInt32 value) {
        if (pointStepBuilder_ == null) {
          if (pointStep_ != null) {
            pointStep_ =
              choreo.Int.UInt32.newBuilder(pointStep_).mergeFrom(value).buildPartial();
          } else {
            pointStep_ = value;
          }
          onChanged();
        } else {
          pointStepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public Builder clearPointStep() {
        if (pointStepBuilder_ == null) {
          pointStep_ = null;
          onChanged();
        } else {
          pointStep_ = null;
          pointStepBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public choreo.Int.UInt32.Builder getPointStepBuilder() {
        
        onChanged();
        return getPointStepFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      public choreo.Int.UInt32OrBuilder getPointStepOrBuilder() {
        if (pointStepBuilder_ != null) {
          return pointStepBuilder_.getMessageOrBuilder();
        } else {
          return pointStep_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : pointStep_;
        }
      }
      /**
       * <code>.choreo.UInt32 point_step = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getPointStepFieldBuilder() {
        if (pointStepBuilder_ == null) {
          pointStepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getPointStep(),
                  getParentForChildren(),
                  isClean());
          pointStep_ = null;
        }
        return pointStepBuilder_;
      }

      private choreo.Int.UInt32 rowStep_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> rowStepBuilder_;
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public boolean hasRowStep() {
        return rowStepBuilder_ != null || rowStep_ != null;
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public choreo.Int.UInt32 getRowStep() {
        if (rowStepBuilder_ == null) {
          return rowStep_ == null ? choreo.Int.UInt32.getDefaultInstance() : rowStep_;
        } else {
          return rowStepBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public Builder setRowStep(choreo.Int.UInt32 value) {
        if (rowStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rowStep_ = value;
          onChanged();
        } else {
          rowStepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public Builder setRowStep(
          choreo.Int.UInt32.Builder builderForValue) {
        if (rowStepBuilder_ == null) {
          rowStep_ = builderForValue.build();
          onChanged();
        } else {
          rowStepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public Builder mergeRowStep(choreo.Int.UInt32 value) {
        if (rowStepBuilder_ == null) {
          if (rowStep_ != null) {
            rowStep_ =
              choreo.Int.UInt32.newBuilder(rowStep_).mergeFrom(value).buildPartial();
          } else {
            rowStep_ = value;
          }
          onChanged();
        } else {
          rowStepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public Builder clearRowStep() {
        if (rowStepBuilder_ == null) {
          rowStep_ = null;
          onChanged();
        } else {
          rowStep_ = null;
          rowStepBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public choreo.Int.UInt32.Builder getRowStepBuilder() {
        
        onChanged();
        return getRowStepFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      public choreo.Int.UInt32OrBuilder getRowStepOrBuilder() {
        if (rowStepBuilder_ != null) {
          return rowStepBuilder_.getMessageOrBuilder();
        } else {
          return rowStep_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : rowStep_;
        }
      }
      /**
       * <code>.choreo.UInt32 row_step = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getRowStepFieldBuilder() {
        if (rowStepBuilder_ == null) {
          rowStepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getRowStep(),
                  getParentForChildren(),
                  isClean());
          rowStep_ = null;
        }
        return rowStepBuilder_;
      }

      private choreo.BytesOuterClass.Bytes data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BytesOuterClass.Bytes, choreo.BytesOuterClass.Bytes.Builder, choreo.BytesOuterClass.BytesOrBuilder> dataBuilder_;
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public choreo.BytesOuterClass.Bytes getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? choreo.BytesOuterClass.Bytes.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public Builder setData(choreo.BytesOuterClass.Bytes value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public Builder setData(
          choreo.BytesOuterClass.Bytes.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public Builder mergeData(choreo.BytesOuterClass.Bytes value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              choreo.BytesOuterClass.Bytes.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public choreo.BytesOuterClass.Bytes.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      public choreo.BytesOuterClass.BytesOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              choreo.BytesOuterClass.Bytes.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.choreo.Bytes data = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BytesOuterClass.Bytes, choreo.BytesOuterClass.Bytes.Builder, choreo.BytesOuterClass.BytesOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.BytesOuterClass.Bytes, choreo.BytesOuterClass.Bytes.Builder, choreo.BytesOuterClass.BytesOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private choreo.BoolOuterClass.Bool isDense_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> isDenseBuilder_;
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public boolean hasIsDense() {
        return isDenseBuilder_ != null || isDense_ != null;
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public choreo.BoolOuterClass.Bool getIsDense() {
        if (isDenseBuilder_ == null) {
          return isDense_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : isDense_;
        } else {
          return isDenseBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public Builder setIsDense(choreo.BoolOuterClass.Bool value) {
        if (isDenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          isDense_ = value;
          onChanged();
        } else {
          isDenseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public Builder setIsDense(
          choreo.BoolOuterClass.Bool.Builder builderForValue) {
        if (isDenseBuilder_ == null) {
          isDense_ = builderForValue.build();
          onChanged();
        } else {
          isDenseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public Builder mergeIsDense(choreo.BoolOuterClass.Bool value) {
        if (isDenseBuilder_ == null) {
          if (isDense_ != null) {
            isDense_ =
              choreo.BoolOuterClass.Bool.newBuilder(isDense_).mergeFrom(value).buildPartial();
          } else {
            isDense_ = value;
          }
          onChanged();
        } else {
          isDenseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public Builder clearIsDense() {
        if (isDenseBuilder_ == null) {
          isDense_ = null;
          onChanged();
        } else {
          isDense_ = null;
          isDenseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public choreo.BoolOuterClass.Bool.Builder getIsDenseBuilder() {
        
        onChanged();
        return getIsDenseFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      public choreo.BoolOuterClass.BoolOrBuilder getIsDenseOrBuilder() {
        if (isDenseBuilder_ != null) {
          return isDenseBuilder_.getMessageOrBuilder();
        } else {
          return isDense_ == null ?
              choreo.BoolOuterClass.Bool.getDefaultInstance() : isDense_;
        }
      }
      /**
       * <code>.choreo.Bool is_dense = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> 
          getIsDenseFieldBuilder() {
        if (isDenseBuilder_ == null) {
          isDenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder>(
                  getIsDense(),
                  getParentForChildren(),
                  isClean());
          isDense_ = null;
        }
        return isDenseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.PointCloud2)
    }

    // @@protoc_insertion_point(class_scope:choreo.PointCloud2)
    private static final choreo.Depth.PointCloud2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.PointCloud2();
    }

    public static choreo.Depth.PointCloud2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PointCloud2>
        PARSER = new com.google.protobuf.AbstractParser<PointCloud2>() {
      public PointCloud2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PointCloud2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PointCloud2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PointCloud2> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.PointCloud2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Range)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
     */
    int getRadiationTypeValue();
    /**
     * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
     */
    choreo.Depth.Range.RadiationType getRadiationType();

    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    boolean hasFieldOfView();
    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    choreo.FloatOuterClass.Float32 getFieldOfView();
    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getFieldOfViewOrBuilder();

    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    boolean hasMinRange();
    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    choreo.FloatOuterClass.Float32 getMinRange();
    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getMinRangeOrBuilder();

    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    boolean hasMaxRange();
    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    choreo.FloatOuterClass.Float32 getMaxRange();
    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getMaxRangeOrBuilder();

    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    boolean hasRange();
    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    choreo.FloatOuterClass.Float32 getRange();
    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getRangeOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Range}
   */
  public  static final class Range extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Range)
      RangeOrBuilder {
    // Use Range.newBuilder() to construct.
    private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Range() {
      radiationType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Range(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              radiationType_ = rawValue;
              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (fieldOfView_ != null) {
                subBuilder = fieldOfView_.toBuilder();
              }
              fieldOfView_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fieldOfView_);
                fieldOfView_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (minRange_ != null) {
                subBuilder = minRange_.toBuilder();
              }
              minRange_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minRange_);
                minRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (maxRange_ != null) {
                subBuilder = maxRange_.toBuilder();
              }
              maxRange_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRange_);
                maxRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (range_ != null) {
                subBuilder = range_.toBuilder();
              }
              range_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(range_);
                range_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Depth.internal_static_choreo_Range_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Depth.internal_static_choreo_Range_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Depth.Range.class, choreo.Depth.Range.Builder.class);
    }

    /**
     * Protobuf enum {@code choreo.Range.RadiationType}
     */
    public enum RadiationType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ULTRASOUND = 0;</code>
       */
      ULTRASOUND(0),
      /**
       * <code>INFRARED = 1;</code>
       */
      INFRARED(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ULTRASOUND = 0;</code>
       */
      public static final int ULTRASOUND_VALUE = 0;
      /**
       * <code>INFRARED = 1;</code>
       */
      public static final int INFRARED_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RadiationType valueOf(int value) {
        return forNumber(value);
      }

      public static RadiationType forNumber(int value) {
        switch (value) {
          case 0: return ULTRASOUND;
          case 1: return INFRARED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RadiationType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RadiationType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RadiationType>() {
              public RadiationType findValueByNumber(int number) {
                return RadiationType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Depth.Range.getDescriptor().getEnumTypes().get(0);
      }

      private static final RadiationType[] VALUES = values();

      public static RadiationType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RadiationType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.Range.RadiationType)
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int RADIATION_TYPE_FIELD_NUMBER = 2;
    private int radiationType_;
    /**
     * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
     */
    public int getRadiationTypeValue() {
      return radiationType_;
    }
    /**
     * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
     */
    public choreo.Depth.Range.RadiationType getRadiationType() {
      choreo.Depth.Range.RadiationType result = choreo.Depth.Range.RadiationType.valueOf(radiationType_);
      return result == null ? choreo.Depth.Range.RadiationType.UNRECOGNIZED : result;
    }

    public static final int FIELD_OF_VIEW_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float32 fieldOfView_;
    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    public boolean hasFieldOfView() {
      return fieldOfView_ != null;
    }
    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    public choreo.FloatOuterClass.Float32 getFieldOfView() {
      return fieldOfView_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : fieldOfView_;
    }
    /**
     * <code>.choreo.Float32 field_of_view = 3;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getFieldOfViewOrBuilder() {
      return getFieldOfView();
    }

    public static final int MIN_RANGE_FIELD_NUMBER = 4;
    private choreo.FloatOuterClass.Float32 minRange_;
    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    public boolean hasMinRange() {
      return minRange_ != null;
    }
    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    public choreo.FloatOuterClass.Float32 getMinRange() {
      return minRange_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : minRange_;
    }
    /**
     * <code>.choreo.Float32 min_range = 4;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getMinRangeOrBuilder() {
      return getMinRange();
    }

    public static final int MAX_RANGE_FIELD_NUMBER = 5;
    private choreo.FloatOuterClass.Float32 maxRange_;
    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    public boolean hasMaxRange() {
      return maxRange_ != null;
    }
    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    public choreo.FloatOuterClass.Float32 getMaxRange() {
      return maxRange_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : maxRange_;
    }
    /**
     * <code>.choreo.Float32 max_range = 5;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getMaxRangeOrBuilder() {
      return getMaxRange();
    }

    public static final int RANGE_FIELD_NUMBER = 6;
    private choreo.FloatOuterClass.Float32 range_;
    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    public boolean hasRange() {
      return range_ != null;
    }
    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    public choreo.FloatOuterClass.Float32 getRange() {
      return range_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : range_;
    }
    /**
     * <code>.choreo.Float32 range = 6;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getRangeOrBuilder() {
      return getRange();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (radiationType_ != choreo.Depth.Range.RadiationType.ULTRASOUND.getNumber()) {
        output.writeEnum(2, radiationType_);
      }
      if (fieldOfView_ != null) {
        output.writeMessage(3, getFieldOfView());
      }
      if (minRange_ != null) {
        output.writeMessage(4, getMinRange());
      }
      if (maxRange_ != null) {
        output.writeMessage(5, getMaxRange());
      }
      if (range_ != null) {
        output.writeMessage(6, getRange());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (radiationType_ != choreo.Depth.Range.RadiationType.ULTRASOUND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, radiationType_);
      }
      if (fieldOfView_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFieldOfView());
      }
      if (minRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMinRange());
      }
      if (maxRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMaxRange());
      }
      if (range_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRange());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Depth.Range)) {
        return super.equals(obj);
      }
      choreo.Depth.Range other = (choreo.Depth.Range) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && radiationType_ == other.radiationType_;
      result = result && (hasFieldOfView() == other.hasFieldOfView());
      if (hasFieldOfView()) {
        result = result && getFieldOfView()
            .equals(other.getFieldOfView());
      }
      result = result && (hasMinRange() == other.hasMinRange());
      if (hasMinRange()) {
        result = result && getMinRange()
            .equals(other.getMinRange());
      }
      result = result && (hasMaxRange() == other.hasMaxRange());
      if (hasMaxRange()) {
        result = result && getMaxRange()
            .equals(other.getMaxRange());
      }
      result = result && (hasRange() == other.hasRange());
      if (hasRange()) {
        result = result && getRange()
            .equals(other.getRange());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + RADIATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + radiationType_;
      if (hasFieldOfView()) {
        hash = (37 * hash) + FIELD_OF_VIEW_FIELD_NUMBER;
        hash = (53 * hash) + getFieldOfView().hashCode();
      }
      if (hasMinRange()) {
        hash = (37 * hash) + MIN_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getMinRange().hashCode();
      }
      if (hasMaxRange()) {
        hash = (37 * hash) + MAX_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRange().hashCode();
      }
      if (hasRange()) {
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRange().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Depth.Range parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.Range parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.Range parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.Range parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.Range parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Depth.Range parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Depth.Range parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.Range parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.Range parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Depth.Range parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Depth.Range parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Depth.Range parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Depth.Range prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Range}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Range)
        choreo.Depth.RangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Depth.internal_static_choreo_Range_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Depth.internal_static_choreo_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Depth.Range.class, choreo.Depth.Range.Builder.class);
      }

      // Construct using choreo.Depth.Range.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        radiationType_ = 0;

        if (fieldOfViewBuilder_ == null) {
          fieldOfView_ = null;
        } else {
          fieldOfView_ = null;
          fieldOfViewBuilder_ = null;
        }
        if (minRangeBuilder_ == null) {
          minRange_ = null;
        } else {
          minRange_ = null;
          minRangeBuilder_ = null;
        }
        if (maxRangeBuilder_ == null) {
          maxRange_ = null;
        } else {
          maxRange_ = null;
          maxRangeBuilder_ = null;
        }
        if (rangeBuilder_ == null) {
          range_ = null;
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Depth.internal_static_choreo_Range_descriptor;
      }

      public choreo.Depth.Range getDefaultInstanceForType() {
        return choreo.Depth.Range.getDefaultInstance();
      }

      public choreo.Depth.Range build() {
        choreo.Depth.Range result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Depth.Range buildPartial() {
        choreo.Depth.Range result = new choreo.Depth.Range(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        result.radiationType_ = radiationType_;
        if (fieldOfViewBuilder_ == null) {
          result.fieldOfView_ = fieldOfView_;
        } else {
          result.fieldOfView_ = fieldOfViewBuilder_.build();
        }
        if (minRangeBuilder_ == null) {
          result.minRange_ = minRange_;
        } else {
          result.minRange_ = minRangeBuilder_.build();
        }
        if (maxRangeBuilder_ == null) {
          result.maxRange_ = maxRange_;
        } else {
          result.maxRange_ = maxRangeBuilder_.build();
        }
        if (rangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = rangeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Depth.Range) {
          return mergeFrom((choreo.Depth.Range)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Depth.Range other) {
        if (other == choreo.Depth.Range.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.radiationType_ != 0) {
          setRadiationTypeValue(other.getRadiationTypeValue());
        }
        if (other.hasFieldOfView()) {
          mergeFieldOfView(other.getFieldOfView());
        }
        if (other.hasMinRange()) {
          mergeMinRange(other.getMinRange());
        }
        if (other.hasMaxRange()) {
          mergeMaxRange(other.getMaxRange());
        }
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Depth.Range parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Depth.Range) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private int radiationType_ = 0;
      /**
       * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
       */
      public int getRadiationTypeValue() {
        return radiationType_;
      }
      /**
       * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
       */
      public Builder setRadiationTypeValue(int value) {
        radiationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
       */
      public choreo.Depth.Range.RadiationType getRadiationType() {
        choreo.Depth.Range.RadiationType result = choreo.Depth.Range.RadiationType.valueOf(radiationType_);
        return result == null ? choreo.Depth.Range.RadiationType.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
       */
      public Builder setRadiationType(choreo.Depth.Range.RadiationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        radiationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.Range.RadiationType radiation_type = 2;</code>
       */
      public Builder clearRadiationType() {
        
        radiationType_ = 0;
        onChanged();
        return this;
      }

      private choreo.FloatOuterClass.Float32 fieldOfView_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> fieldOfViewBuilder_;
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public boolean hasFieldOfView() {
        return fieldOfViewBuilder_ != null || fieldOfView_ != null;
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public choreo.FloatOuterClass.Float32 getFieldOfView() {
        if (fieldOfViewBuilder_ == null) {
          return fieldOfView_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : fieldOfView_;
        } else {
          return fieldOfViewBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public Builder setFieldOfView(choreo.FloatOuterClass.Float32 value) {
        if (fieldOfViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldOfView_ = value;
          onChanged();
        } else {
          fieldOfViewBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public Builder setFieldOfView(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (fieldOfViewBuilder_ == null) {
          fieldOfView_ = builderForValue.build();
          onChanged();
        } else {
          fieldOfViewBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public Builder mergeFieldOfView(choreo.FloatOuterClass.Float32 value) {
        if (fieldOfViewBuilder_ == null) {
          if (fieldOfView_ != null) {
            fieldOfView_ =
              choreo.FloatOuterClass.Float32.newBuilder(fieldOfView_).mergeFrom(value).buildPartial();
          } else {
            fieldOfView_ = value;
          }
          onChanged();
        } else {
          fieldOfViewBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public Builder clearFieldOfView() {
        if (fieldOfViewBuilder_ == null) {
          fieldOfView_ = null;
          onChanged();
        } else {
          fieldOfView_ = null;
          fieldOfViewBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getFieldOfViewBuilder() {
        
        onChanged();
        return getFieldOfViewFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getFieldOfViewOrBuilder() {
        if (fieldOfViewBuilder_ != null) {
          return fieldOfViewBuilder_.getMessageOrBuilder();
        } else {
          return fieldOfView_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : fieldOfView_;
        }
      }
      /**
       * <code>.choreo.Float32 field_of_view = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getFieldOfViewFieldBuilder() {
        if (fieldOfViewBuilder_ == null) {
          fieldOfViewBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getFieldOfView(),
                  getParentForChildren(),
                  isClean());
          fieldOfView_ = null;
        }
        return fieldOfViewBuilder_;
      }

      private choreo.FloatOuterClass.Float32 minRange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> minRangeBuilder_;
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public boolean hasMinRange() {
        return minRangeBuilder_ != null || minRange_ != null;
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public choreo.FloatOuterClass.Float32 getMinRange() {
        if (minRangeBuilder_ == null) {
          return minRange_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : minRange_;
        } else {
          return minRangeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public Builder setMinRange(choreo.FloatOuterClass.Float32 value) {
        if (minRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minRange_ = value;
          onChanged();
        } else {
          minRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public Builder setMinRange(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (minRangeBuilder_ == null) {
          minRange_ = builderForValue.build();
          onChanged();
        } else {
          minRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public Builder mergeMinRange(choreo.FloatOuterClass.Float32 value) {
        if (minRangeBuilder_ == null) {
          if (minRange_ != null) {
            minRange_ =
              choreo.FloatOuterClass.Float32.newBuilder(minRange_).mergeFrom(value).buildPartial();
          } else {
            minRange_ = value;
          }
          onChanged();
        } else {
          minRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public Builder clearMinRange() {
        if (minRangeBuilder_ == null) {
          minRange_ = null;
          onChanged();
        } else {
          minRange_ = null;
          minRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getMinRangeBuilder() {
        
        onChanged();
        return getMinRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getMinRangeOrBuilder() {
        if (minRangeBuilder_ != null) {
          return minRangeBuilder_.getMessageOrBuilder();
        } else {
          return minRange_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : minRange_;
        }
      }
      /**
       * <code>.choreo.Float32 min_range = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getMinRangeFieldBuilder() {
        if (minRangeBuilder_ == null) {
          minRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getMinRange(),
                  getParentForChildren(),
                  isClean());
          minRange_ = null;
        }
        return minRangeBuilder_;
      }

      private choreo.FloatOuterClass.Float32 maxRange_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> maxRangeBuilder_;
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public boolean hasMaxRange() {
        return maxRangeBuilder_ != null || maxRange_ != null;
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public choreo.FloatOuterClass.Float32 getMaxRange() {
        if (maxRangeBuilder_ == null) {
          return maxRange_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : maxRange_;
        } else {
          return maxRangeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public Builder setMaxRange(choreo.FloatOuterClass.Float32 value) {
        if (maxRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRange_ = value;
          onChanged();
        } else {
          maxRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public Builder setMaxRange(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (maxRangeBuilder_ == null) {
          maxRange_ = builderForValue.build();
          onChanged();
        } else {
          maxRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public Builder mergeMaxRange(choreo.FloatOuterClass.Float32 value) {
        if (maxRangeBuilder_ == null) {
          if (maxRange_ != null) {
            maxRange_ =
              choreo.FloatOuterClass.Float32.newBuilder(maxRange_).mergeFrom(value).buildPartial();
          } else {
            maxRange_ = value;
          }
          onChanged();
        } else {
          maxRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public Builder clearMaxRange() {
        if (maxRangeBuilder_ == null) {
          maxRange_ = null;
          onChanged();
        } else {
          maxRange_ = null;
          maxRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getMaxRangeBuilder() {
        
        onChanged();
        return getMaxRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getMaxRangeOrBuilder() {
        if (maxRangeBuilder_ != null) {
          return maxRangeBuilder_.getMessageOrBuilder();
        } else {
          return maxRange_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : maxRange_;
        }
      }
      /**
       * <code>.choreo.Float32 max_range = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getMaxRangeFieldBuilder() {
        if (maxRangeBuilder_ == null) {
          maxRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getMaxRange(),
                  getParentForChildren(),
                  isClean());
          maxRange_ = null;
        }
        return maxRangeBuilder_;
      }

      private choreo.FloatOuterClass.Float32 range_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> rangeBuilder_;
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public boolean hasRange() {
        return rangeBuilder_ != null || range_ != null;
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public choreo.FloatOuterClass.Float32 getRange() {
        if (rangeBuilder_ == null) {
          return range_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : range_;
        } else {
          return rangeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public Builder setRange(choreo.FloatOuterClass.Float32 value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          range_ = value;
          onChanged();
        } else {
          rangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public Builder setRange(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          range_ = builderForValue.build();
          onChanged();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public Builder mergeRange(choreo.FloatOuterClass.Float32 value) {
        if (rangeBuilder_ == null) {
          if (range_ != null) {
            range_ =
              choreo.FloatOuterClass.Float32.newBuilder(range_).mergeFrom(value).buildPartial();
          } else {
            range_ = value;
          }
          onChanged();
        } else {
          rangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public Builder clearRange() {
        if (rangeBuilder_ == null) {
          range_ = null;
          onChanged();
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getRangeBuilder() {
        
        onChanged();
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getRangeOrBuilder() {
        if (rangeBuilder_ != null) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          return range_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : range_;
        }
      }
      /**
       * <code>.choreo.Float32 range = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getRange(),
                  getParentForChildren(),
                  isClean());
          range_ = null;
        }
        return rangeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Range)
    }

    // @@protoc_insertion_point(class_scope:choreo.Range)
    private static final choreo.Depth.Range DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Depth.Range();
    }

    public static choreo.Depth.Range getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Range>
        PARSER = new com.google.protobuf.AbstractParser<Range>() {
      public Range parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Range(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Range> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Range> getParserForType() {
      return PARSER;
    }

    public choreo.Depth.Range getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_LaserEcho_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_LaserEcho_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_LaserScan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_LaserScan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_MultiEchoLaserScan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_MultiEchoLaserScan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_PointField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_PointField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_PointCloud_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_PointCloud_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_PointCloud2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_PointCloud2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Range_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022sensor/depth.proto\022\006choreo\032\024primitive/" +
      "bool.proto\032\025primitive/bytes.proto\032\025primi" +
      "tive/float.proto\032\026primitive/header.proto" +
      "\032\023primitive/int.proto\032\026primitive/string." +
      "proto\032\025geometric/point.proto\032\023sensor/cam" +
      "era.proto\",\n\tLaserEcho\022\037\n\006echoes\030\001 \003(\0132\017" +
      ".choreo.Float32\"\371\002\n\tLaserScan\022\036\n\006header\030" +
      "\001 \001(\0132\016.choreo.Header\022\"\n\tangle_min\030\002 \001(\013" +
      "2\017.choreo.Float32\022\"\n\tangle_max\030\003 \001(\0132\017.c" +
      "horeo.Float32\022(\n\017angle_increment\030\004 \001(\0132\017",
      ".choreo.Float32\022\'\n\016time_increment\030\005 \001(\0132" +
      "\017.choreo.Float32\022\"\n\tscan_time\030\006 \001(\0132\017.ch" +
      "oreo.Float32\022\"\n\trange_min\030\007 \001(\0132\017.choreo" +
      ".Float32\022\"\n\trange_max\030\010 \001(\0132\017.choreo.Flo" +
      "at32\022\037\n\006ranges\030\t \003(\0132\017.choreo.Float32\022$\n" +
      "\013intensities\030\n \003(\0132\017.choreo.Float32\"\206\003\n\022" +
      "MultiEchoLaserScan\022\036\n\006header\030\001 \001(\0132\016.cho" +
      "reo.Header\022\"\n\tangle_min\030\002 \001(\0132\017.choreo.F" +
      "loat32\022\"\n\tangle_max\030\003 \001(\0132\017.choreo.Float" +
      "32\022(\n\017angle_increment\030\004 \001(\0132\017.choreo.Flo",
      "at32\022\'\n\016time_increment\030\005 \001(\0132\017.choreo.Fl" +
      "oat32\022\"\n\tscan_time\030\006 \001(\0132\017.choreo.Float3" +
      "2\022\"\n\trange_min\030\007 \001(\0132\017.choreo.Float32\022\"\n" +
      "\trange_max\030\010 \001(\0132\017.choreo.Float32\022!\n\006ran" +
      "ges\030\t \003(\0132\021.choreo.LaserEcho\022&\n\013intensit" +
      "ies\030\n \003(\0132\021.choreo.LaserEcho\"\201\002\n\nPointFi" +
      "eld\022\034\n\004name\030\001 \001(\0132\016.choreo.String\022\036\n\006off" +
      "set\030\002 \001(\0132\016.choreo.UInt32\022-\n\010datatype\030\003 " +
      "\001(\0162\033.choreo.PointField.Datatype\022\035\n\005coun" +
      "t\030\004 \001(\0132\016.choreo.UInt32\"g\n\010Datatype\022\010\n\004I",
      "NT8\020\000\022\t\n\005UINT8\020\001\022\t\n\005INT16\020\002\022\n\n\006UINT16\020\003\022" +
      "\t\n\005INT32\020\004\022\n\n\006UINT32\020\005\022\013\n\007FLOAT32\020\006\022\013\n\007F" +
      "LOAT64\020\007\"w\n\nPointCloud\022\036\n\006header\030\001 \001(\0132\016" +
      ".choreo.Header\022\037\n\006points\030\002 \003(\0132\017.choreo." +
      "Point32\022(\n\010channels\030\003 \003(\0132\026.choreo.Chann" +
      "elFloat32\"\267\002\n\013PointCloud2\022\036\n\006header\030\001 \001(" +
      "\0132\016.choreo.Header\022\036\n\006height\030\002 \001(\0132\016.chor" +
      "eo.UInt32\022\035\n\005width\030\003 \001(\0132\016.choreo.UInt32" +
      "\022\"\n\006fields\030\004 \003(\0132\022.choreo.PointField\022\"\n\014" +
      "is_bigendian\030\005 \001(\0132\014.choreo.Bool\022\"\n\npoin",
      "t_step\030\006 \001(\0132\016.choreo.UInt32\022 \n\010row_step" +
      "\030\007 \001(\0132\016.choreo.UInt32\022\033\n\004data\030\010 \001(\0132\r.c" +
      "horeo.Bytes\022\036\n\010is_dense\030\t \001(\0132\014.choreo.B" +
      "ool\"\233\002\n\005Range\022\036\n\006header\030\001 \001(\0132\016.choreo.H" +
      "eader\0223\n\016radiation_type\030\002 \001(\0162\033.choreo.R" +
      "ange.RadiationType\022&\n\rfield_of_view\030\003 \001(" +
      "\0132\017.choreo.Float32\022\"\n\tmin_range\030\004 \001(\0132\017." +
      "choreo.Float32\022\"\n\tmax_range\030\005 \001(\0132\017.chor" +
      "eo.Float32\022\036\n\005range\030\006 \001(\0132\017.choreo.Float" +
      "32\"-\n\rRadiationType\022\016\n\nULTRASOUND\020\000\022\014\n\010I",
      "NFRARED\020\001B+Z)github.com/RobotStudio/chor" +
      "eo-msg/msg;msgb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.BoolOuterClass.getDescriptor(),
          choreo.BytesOuterClass.getDescriptor(),
          choreo.FloatOuterClass.getDescriptor(),
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.Int.getDescriptor(),
          choreo.StringOuterClass.getDescriptor(),
          choreo.PointOuterClass.getDescriptor(),
          choreo.Camera.getDescriptor(),
        }, assigner);
    internal_static_choreo_LaserEcho_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_LaserEcho_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_LaserEcho_descriptor,
        new java.lang.String[] { "Echoes", });
    internal_static_choreo_LaserScan_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_LaserScan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_LaserScan_descriptor,
        new java.lang.String[] { "Header", "AngleMin", "AngleMax", "AngleIncrement", "TimeIncrement", "ScanTime", "RangeMin", "RangeMax", "Ranges", "Intensities", });
    internal_static_choreo_MultiEchoLaserScan_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_choreo_MultiEchoLaserScan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_MultiEchoLaserScan_descriptor,
        new java.lang.String[] { "Header", "AngleMin", "AngleMax", "AngleIncrement", "TimeIncrement", "ScanTime", "RangeMin", "RangeMax", "Ranges", "Intensities", });
    internal_static_choreo_PointField_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_choreo_PointField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_PointField_descriptor,
        new java.lang.String[] { "Name", "Offset", "Datatype", "Count", });
    internal_static_choreo_PointCloud_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_choreo_PointCloud_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_PointCloud_descriptor,
        new java.lang.String[] { "Header", "Points", "Channels", });
    internal_static_choreo_PointCloud2_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_choreo_PointCloud2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_PointCloud2_descriptor,
        new java.lang.String[] { "Header", "Height", "Width", "Fields", "IsBigendian", "PointStep", "RowStep", "Data", "IsDense", });
    internal_static_choreo_Range_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_choreo_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Range_descriptor,
        new java.lang.String[] { "Header", "RadiationType", "FieldOfView", "MinRange", "MaxRange", "Range", });
    choreo.BoolOuterClass.getDescriptor();
    choreo.BytesOuterClass.getDescriptor();
    choreo.FloatOuterClass.getDescriptor();
    choreo.HeaderOuterClass.getDescriptor();
    choreo.Int.getDescriptor();
    choreo.StringOuterClass.getDescriptor();
    choreo.PointOuterClass.getDescriptor();
    choreo.Camera.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
