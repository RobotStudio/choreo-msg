// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor/battery.proto

package choreo;

public final class Battery {
  private Battery() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BatteryStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.BatteryState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.BatteryState.Status status = 1;</code>
     */
    int getStatusValue();
    /**
     * <code>.choreo.BatteryState.Status status = 1;</code>
     */
    choreo.Battery.BatteryState.Status getStatus();

    /**
     * <code>.choreo.BatteryState.Health health = 2;</code>
     */
    int getHealthValue();
    /**
     * <code>.choreo.BatteryState.Health health = 2;</code>
     */
    choreo.Battery.BatteryState.Health getHealth();

    /**
     * <code>.choreo.BatteryState.Technology technology = 3;</code>
     */
    int getTechnologyValue();
    /**
     * <code>.choreo.BatteryState.Technology technology = 3;</code>
     */
    choreo.Battery.BatteryState.Technology getTechnology();

    /**
     * <code>.choreo.Header header = 4;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 4;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 4;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    boolean hasVoltage();
    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    choreo.FloatOuterClass.Float32 getVoltage();
    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getVoltageOrBuilder();

    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    boolean hasCurrent();
    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    choreo.FloatOuterClass.Float32 getCurrent();
    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getCurrentOrBuilder();

    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    boolean hasCharge();
    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    choreo.FloatOuterClass.Float32 getCharge();
    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getChargeOrBuilder();

    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    boolean hasCapacity();
    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    choreo.FloatOuterClass.Float32 getCapacity();
    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getCapacityOrBuilder();

    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    boolean hasDesignCapacity();
    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    choreo.FloatOuterClass.Float32 getDesignCapacity();
    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getDesignCapacityOrBuilder();

    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    boolean hasPercentage();
    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    choreo.FloatOuterClass.Float32 getPercentage();
    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getPercentageOrBuilder();

    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    boolean hasPowerSupplyStatus();
    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    choreo.Int.UInt32 getPowerSupplyStatus();
    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    choreo.Int.UInt32OrBuilder getPowerSupplyStatusOrBuilder();

    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    boolean hasPowerSupplyHealth();
    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    choreo.Int.UInt32 getPowerSupplyHealth();
    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    choreo.Int.UInt32OrBuilder getPowerSupplyHealthOrBuilder();

    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    boolean hasPowerSupplyTechnology();
    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    choreo.Int.UInt32 getPowerSupplyTechnology();
    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    choreo.Int.UInt32OrBuilder getPowerSupplyTechnologyOrBuilder();

    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    boolean hasPresent();
    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    choreo.BoolOuterClass.Bool getPresent();
    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    choreo.BoolOuterClass.BoolOrBuilder getPresentOrBuilder();

    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    boolean hasCellVoltage();
    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    choreo.FloatOuterClass.Float32 getCellVoltage();
    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getCellVoltageOrBuilder();

    /**
     * <code>.choreo.String location = 17;</code>
     */
    boolean hasLocation();
    /**
     * <code>.choreo.String location = 17;</code>
     */
    choreo.StringOuterClass.String getLocation();
    /**
     * <code>.choreo.String location = 17;</code>
     */
    choreo.StringOuterClass.StringOrBuilder getLocationOrBuilder();

    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    boolean hasSerialNumber();
    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    choreo.StringOuterClass.String getSerialNumber();
    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    choreo.StringOuterClass.StringOrBuilder getSerialNumberOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.BatteryState}
   */
  public  static final class BatteryState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.BatteryState)
      BatteryStateOrBuilder {
    // Use BatteryState.newBuilder() to construct.
    private BatteryState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BatteryState() {
      status_ = 0;
      health_ = 0;
      technology_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BatteryState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              health_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              technology_ = rawValue;
              break;
            }
            case 34: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (voltage_ != null) {
                subBuilder = voltage_.toBuilder();
              }
              voltage_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(voltage_);
                voltage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (current_ != null) {
                subBuilder = current_.toBuilder();
              }
              current_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(current_);
                current_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (charge_ != null) {
                subBuilder = charge_.toBuilder();
              }
              charge_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(charge_);
                charge_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (capacity_ != null) {
                subBuilder = capacity_.toBuilder();
              }
              capacity_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(capacity_);
                capacity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (designCapacity_ != null) {
                subBuilder = designCapacity_.toBuilder();
              }
              designCapacity_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(designCapacity_);
                designCapacity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (percentage_ != null) {
                subBuilder = percentage_.toBuilder();
              }
              percentage_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(percentage_);
                percentage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (powerSupplyStatus_ != null) {
                subBuilder = powerSupplyStatus_.toBuilder();
              }
              powerSupplyStatus_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(powerSupplyStatus_);
                powerSupplyStatus_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (powerSupplyHealth_ != null) {
                subBuilder = powerSupplyHealth_.toBuilder();
              }
              powerSupplyHealth_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(powerSupplyHealth_);
                powerSupplyHealth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (powerSupplyTechnology_ != null) {
                subBuilder = powerSupplyTechnology_.toBuilder();
              }
              powerSupplyTechnology_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(powerSupplyTechnology_);
                powerSupplyTechnology_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              choreo.BoolOuterClass.Bool.Builder subBuilder = null;
              if (present_ != null) {
                subBuilder = present_.toBuilder();
              }
              present_ = input.readMessage(choreo.BoolOuterClass.Bool.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(present_);
                present_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (cellVoltage_ != null) {
                subBuilder = cellVoltage_.toBuilder();
              }
              cellVoltage_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cellVoltage_);
                cellVoltage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 138: {
              choreo.StringOuterClass.String.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(choreo.StringOuterClass.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              choreo.StringOuterClass.String.Builder subBuilder = null;
              if (serialNumber_ != null) {
                subBuilder = serialNumber_.toBuilder();
              }
              serialNumber_ = input.readMessage(choreo.StringOuterClass.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serialNumber_);
                serialNumber_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Battery.internal_static_choreo_BatteryState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Battery.internal_static_choreo_BatteryState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Battery.BatteryState.class, choreo.Battery.BatteryState.Builder.class);
    }

    /**
     * Protobuf enum {@code choreo.BatteryState.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>STATUS_UNKNOWN = 0;</code>
       */
      STATUS_UNKNOWN(0),
      /**
       * <code>STATUS_CHARGING = 1;</code>
       */
      STATUS_CHARGING(1),
      /**
       * <code>STATUS_DISCHARGING = 2;</code>
       */
      STATUS_DISCHARGING(2),
      /**
       * <code>STATUS_NOT_CHARGING = 3;</code>
       */
      STATUS_NOT_CHARGING(3),
      /**
       * <code>STATUS_FULL = 4;</code>
       */
      STATUS_FULL(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>STATUS_UNKNOWN = 0;</code>
       */
      public static final int STATUS_UNKNOWN_VALUE = 0;
      /**
       * <code>STATUS_CHARGING = 1;</code>
       */
      public static final int STATUS_CHARGING_VALUE = 1;
      /**
       * <code>STATUS_DISCHARGING = 2;</code>
       */
      public static final int STATUS_DISCHARGING_VALUE = 2;
      /**
       * <code>STATUS_NOT_CHARGING = 3;</code>
       */
      public static final int STATUS_NOT_CHARGING_VALUE = 3;
      /**
       * <code>STATUS_FULL = 4;</code>
       */
      public static final int STATUS_FULL_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      public static Status forNumber(int value) {
        switch (value) {
          case 0: return STATUS_UNKNOWN;
          case 1: return STATUS_CHARGING;
          case 2: return STATUS_DISCHARGING;
          case 3: return STATUS_NOT_CHARGING;
          case 4: return STATUS_FULL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Battery.BatteryState.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.BatteryState.Status)
    }

    /**
     * Protobuf enum {@code choreo.BatteryState.Health}
     */
    public enum Health
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HEALTH_UNKNOWN = 0;</code>
       */
      HEALTH_UNKNOWN(0),
      /**
       * <code>HEALTH_GOOD = 1;</code>
       */
      HEALTH_GOOD(1),
      /**
       * <code>HEALTH_OVERHEAT = 2;</code>
       */
      HEALTH_OVERHEAT(2),
      /**
       * <code>HEALTH_DEAD = 3;</code>
       */
      HEALTH_DEAD(3),
      /**
       * <code>HEALTH_OVERVOLTAGE = 4;</code>
       */
      HEALTH_OVERVOLTAGE(4),
      /**
       * <code>HEALTH_UNSPEC_FAILURE = 5;</code>
       */
      HEALTH_UNSPEC_FAILURE(5),
      /**
       * <code>HEALTH_COLD = 6;</code>
       */
      HEALTH_COLD(6),
      /**
       * <code>HEALTH_WATCHDOG_TIMER_EXPIRE = 7;</code>
       */
      HEALTH_WATCHDOG_TIMER_EXPIRE(7),
      /**
       * <code>HEALTH_SAFETY_TIMER_EXPIRE = 8;</code>
       */
      HEALTH_SAFETY_TIMER_EXPIRE(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>HEALTH_UNKNOWN = 0;</code>
       */
      public static final int HEALTH_UNKNOWN_VALUE = 0;
      /**
       * <code>HEALTH_GOOD = 1;</code>
       */
      public static final int HEALTH_GOOD_VALUE = 1;
      /**
       * <code>HEALTH_OVERHEAT = 2;</code>
       */
      public static final int HEALTH_OVERHEAT_VALUE = 2;
      /**
       * <code>HEALTH_DEAD = 3;</code>
       */
      public static final int HEALTH_DEAD_VALUE = 3;
      /**
       * <code>HEALTH_OVERVOLTAGE = 4;</code>
       */
      public static final int HEALTH_OVERVOLTAGE_VALUE = 4;
      /**
       * <code>HEALTH_UNSPEC_FAILURE = 5;</code>
       */
      public static final int HEALTH_UNSPEC_FAILURE_VALUE = 5;
      /**
       * <code>HEALTH_COLD = 6;</code>
       */
      public static final int HEALTH_COLD_VALUE = 6;
      /**
       * <code>HEALTH_WATCHDOG_TIMER_EXPIRE = 7;</code>
       */
      public static final int HEALTH_WATCHDOG_TIMER_EXPIRE_VALUE = 7;
      /**
       * <code>HEALTH_SAFETY_TIMER_EXPIRE = 8;</code>
       */
      public static final int HEALTH_SAFETY_TIMER_EXPIRE_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Health valueOf(int value) {
        return forNumber(value);
      }

      public static Health forNumber(int value) {
        switch (value) {
          case 0: return HEALTH_UNKNOWN;
          case 1: return HEALTH_GOOD;
          case 2: return HEALTH_OVERHEAT;
          case 3: return HEALTH_DEAD;
          case 4: return HEALTH_OVERVOLTAGE;
          case 5: return HEALTH_UNSPEC_FAILURE;
          case 6: return HEALTH_COLD;
          case 7: return HEALTH_WATCHDOG_TIMER_EXPIRE;
          case 8: return HEALTH_SAFETY_TIMER_EXPIRE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Health>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Health> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Health>() {
              public Health findValueByNumber(int number) {
                return Health.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Battery.BatteryState.getDescriptor().getEnumTypes().get(1);
      }

      private static final Health[] VALUES = values();

      public static Health valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Health(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.BatteryState.Health)
    }

    /**
     * Protobuf enum {@code choreo.BatteryState.Technology}
     */
    public enum Technology
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TECHNOLOGY_UNKNOWN = 0;</code>
       */
      TECHNOLOGY_UNKNOWN(0),
      /**
       * <code>TECHNOLOGY_NIMH = 1;</code>
       */
      TECHNOLOGY_NIMH(1),
      /**
       * <code>TECHNOLOGY_LION = 2;</code>
       */
      TECHNOLOGY_LION(2),
      /**
       * <code>TECHNOLOGY_LIPO = 3;</code>
       */
      TECHNOLOGY_LIPO(3),
      /**
       * <code>TECHNOLOGY_LIFE = 4;</code>
       */
      TECHNOLOGY_LIFE(4),
      /**
       * <code>TECHNOLOGY_NICD = 5;</code>
       */
      TECHNOLOGY_NICD(5),
      /**
       * <code>TECHNOLOGY_LIMN = 6;</code>
       */
      TECHNOLOGY_LIMN(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TECHNOLOGY_UNKNOWN = 0;</code>
       */
      public static final int TECHNOLOGY_UNKNOWN_VALUE = 0;
      /**
       * <code>TECHNOLOGY_NIMH = 1;</code>
       */
      public static final int TECHNOLOGY_NIMH_VALUE = 1;
      /**
       * <code>TECHNOLOGY_LION = 2;</code>
       */
      public static final int TECHNOLOGY_LION_VALUE = 2;
      /**
       * <code>TECHNOLOGY_LIPO = 3;</code>
       */
      public static final int TECHNOLOGY_LIPO_VALUE = 3;
      /**
       * <code>TECHNOLOGY_LIFE = 4;</code>
       */
      public static final int TECHNOLOGY_LIFE_VALUE = 4;
      /**
       * <code>TECHNOLOGY_NICD = 5;</code>
       */
      public static final int TECHNOLOGY_NICD_VALUE = 5;
      /**
       * <code>TECHNOLOGY_LIMN = 6;</code>
       */
      public static final int TECHNOLOGY_LIMN_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Technology valueOf(int value) {
        return forNumber(value);
      }

      public static Technology forNumber(int value) {
        switch (value) {
          case 0: return TECHNOLOGY_UNKNOWN;
          case 1: return TECHNOLOGY_NIMH;
          case 2: return TECHNOLOGY_LION;
          case 3: return TECHNOLOGY_LIPO;
          case 4: return TECHNOLOGY_LIFE;
          case 5: return TECHNOLOGY_NICD;
          case 6: return TECHNOLOGY_LIMN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Technology>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Technology> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Technology>() {
              public Technology findValueByNumber(int number) {
                return Technology.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Battery.BatteryState.getDescriptor().getEnumTypes().get(2);
      }

      private static final Technology[] VALUES = values();

      public static Technology valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Technology(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.BatteryState.Technology)
    }

    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>.choreo.BatteryState.Status status = 1;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.choreo.BatteryState.Status status = 1;</code>
     */
    public choreo.Battery.BatteryState.Status getStatus() {
      choreo.Battery.BatteryState.Status result = choreo.Battery.BatteryState.Status.valueOf(status_);
      return result == null ? choreo.Battery.BatteryState.Status.UNRECOGNIZED : result;
    }

    public static final int HEALTH_FIELD_NUMBER = 2;
    private int health_;
    /**
     * <code>.choreo.BatteryState.Health health = 2;</code>
     */
    public int getHealthValue() {
      return health_;
    }
    /**
     * <code>.choreo.BatteryState.Health health = 2;</code>
     */
    public choreo.Battery.BatteryState.Health getHealth() {
      choreo.Battery.BatteryState.Health result = choreo.Battery.BatteryState.Health.valueOf(health_);
      return result == null ? choreo.Battery.BatteryState.Health.UNRECOGNIZED : result;
    }

    public static final int TECHNOLOGY_FIELD_NUMBER = 3;
    private int technology_;
    /**
     * <code>.choreo.BatteryState.Technology technology = 3;</code>
     */
    public int getTechnologyValue() {
      return technology_;
    }
    /**
     * <code>.choreo.BatteryState.Technology technology = 3;</code>
     */
    public choreo.Battery.BatteryState.Technology getTechnology() {
      choreo.Battery.BatteryState.Technology result = choreo.Battery.BatteryState.Technology.valueOf(technology_);
      return result == null ? choreo.Battery.BatteryState.Technology.UNRECOGNIZED : result;
    }

    public static final int HEADER_FIELD_NUMBER = 4;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 4;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 4;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 4;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int VOLTAGE_FIELD_NUMBER = 5;
    private choreo.FloatOuterClass.Float32 voltage_;
    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    public boolean hasVoltage() {
      return voltage_ != null;
    }
    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    public choreo.FloatOuterClass.Float32 getVoltage() {
      return voltage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : voltage_;
    }
    /**
     * <code>.choreo.Float32 voltage = 5;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getVoltageOrBuilder() {
      return getVoltage();
    }

    public static final int CURRENT_FIELD_NUMBER = 6;
    private choreo.FloatOuterClass.Float32 current_;
    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    public boolean hasCurrent() {
      return current_ != null;
    }
    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    public choreo.FloatOuterClass.Float32 getCurrent() {
      return current_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : current_;
    }
    /**
     * <code>.choreo.Float32 current = 6;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getCurrentOrBuilder() {
      return getCurrent();
    }

    public static final int CHARGE_FIELD_NUMBER = 7;
    private choreo.FloatOuterClass.Float32 charge_;
    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    public boolean hasCharge() {
      return charge_ != null;
    }
    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    public choreo.FloatOuterClass.Float32 getCharge() {
      return charge_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : charge_;
    }
    /**
     * <code>.choreo.Float32 charge = 7;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getChargeOrBuilder() {
      return getCharge();
    }

    public static final int CAPACITY_FIELD_NUMBER = 8;
    private choreo.FloatOuterClass.Float32 capacity_;
    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    public boolean hasCapacity() {
      return capacity_ != null;
    }
    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    public choreo.FloatOuterClass.Float32 getCapacity() {
      return capacity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : capacity_;
    }
    /**
     * <code>.choreo.Float32 capacity = 8;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getCapacityOrBuilder() {
      return getCapacity();
    }

    public static final int DESIGN_CAPACITY_FIELD_NUMBER = 9;
    private choreo.FloatOuterClass.Float32 designCapacity_;
    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    public boolean hasDesignCapacity() {
      return designCapacity_ != null;
    }
    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    public choreo.FloatOuterClass.Float32 getDesignCapacity() {
      return designCapacity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : designCapacity_;
    }
    /**
     * <code>.choreo.Float32 design_capacity = 9;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getDesignCapacityOrBuilder() {
      return getDesignCapacity();
    }

    public static final int PERCENTAGE_FIELD_NUMBER = 10;
    private choreo.FloatOuterClass.Float32 percentage_;
    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    public boolean hasPercentage() {
      return percentage_ != null;
    }
    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    public choreo.FloatOuterClass.Float32 getPercentage() {
      return percentage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : percentage_;
    }
    /**
     * <code>.choreo.Float32 percentage = 10;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getPercentageOrBuilder() {
      return getPercentage();
    }

    public static final int POWER_SUPPLY_STATUS_FIELD_NUMBER = 12;
    private choreo.Int.UInt32 powerSupplyStatus_;
    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    public boolean hasPowerSupplyStatus() {
      return powerSupplyStatus_ != null;
    }
    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    public choreo.Int.UInt32 getPowerSupplyStatus() {
      return powerSupplyStatus_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyStatus_;
    }
    /**
     * <code>.choreo.UInt32 power_supply_status = 12;</code>
     */
    public choreo.Int.UInt32OrBuilder getPowerSupplyStatusOrBuilder() {
      return getPowerSupplyStatus();
    }

    public static final int POWER_SUPPLY_HEALTH_FIELD_NUMBER = 13;
    private choreo.Int.UInt32 powerSupplyHealth_;
    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    public boolean hasPowerSupplyHealth() {
      return powerSupplyHealth_ != null;
    }
    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    public choreo.Int.UInt32 getPowerSupplyHealth() {
      return powerSupplyHealth_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyHealth_;
    }
    /**
     * <code>.choreo.UInt32 power_supply_health = 13;</code>
     */
    public choreo.Int.UInt32OrBuilder getPowerSupplyHealthOrBuilder() {
      return getPowerSupplyHealth();
    }

    public static final int POWER_SUPPLY_TECHNOLOGY_FIELD_NUMBER = 14;
    private choreo.Int.UInt32 powerSupplyTechnology_;
    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    public boolean hasPowerSupplyTechnology() {
      return powerSupplyTechnology_ != null;
    }
    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    public choreo.Int.UInt32 getPowerSupplyTechnology() {
      return powerSupplyTechnology_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyTechnology_;
    }
    /**
     * <code>.choreo.UInt32 power_supply_technology = 14;</code>
     */
    public choreo.Int.UInt32OrBuilder getPowerSupplyTechnologyOrBuilder() {
      return getPowerSupplyTechnology();
    }

    public static final int PRESENT_FIELD_NUMBER = 15;
    private choreo.BoolOuterClass.Bool present_;
    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    public boolean hasPresent() {
      return present_ != null;
    }
    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    public choreo.BoolOuterClass.Bool getPresent() {
      return present_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : present_;
    }
    /**
     * <code>.choreo.Bool present = 15;</code>
     */
    public choreo.BoolOuterClass.BoolOrBuilder getPresentOrBuilder() {
      return getPresent();
    }

    public static final int CELL_VOLTAGE_FIELD_NUMBER = 16;
    private choreo.FloatOuterClass.Float32 cellVoltage_;
    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    public boolean hasCellVoltage() {
      return cellVoltage_ != null;
    }
    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    public choreo.FloatOuterClass.Float32 getCellVoltage() {
      return cellVoltage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : cellVoltage_;
    }
    /**
     * <code>.choreo.Float32 cell_voltage = 16;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getCellVoltageOrBuilder() {
      return getCellVoltage();
    }

    public static final int LOCATION_FIELD_NUMBER = 17;
    private choreo.StringOuterClass.String location_;
    /**
     * <code>.choreo.String location = 17;</code>
     */
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <code>.choreo.String location = 17;</code>
     */
    public choreo.StringOuterClass.String getLocation() {
      return location_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : location_;
    }
    /**
     * <code>.choreo.String location = 17;</code>
     */
    public choreo.StringOuterClass.StringOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int SERIAL_NUMBER_FIELD_NUMBER = 18;
    private choreo.StringOuterClass.String serialNumber_;
    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    public boolean hasSerialNumber() {
      return serialNumber_ != null;
    }
    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    public choreo.StringOuterClass.String getSerialNumber() {
      return serialNumber_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : serialNumber_;
    }
    /**
     * <code>.choreo.String serial_number = 18;</code>
     */
    public choreo.StringOuterClass.StringOrBuilder getSerialNumberOrBuilder() {
      return getSerialNumber();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != choreo.Battery.BatteryState.Status.STATUS_UNKNOWN.getNumber()) {
        output.writeEnum(1, status_);
      }
      if (health_ != choreo.Battery.BatteryState.Health.HEALTH_UNKNOWN.getNumber()) {
        output.writeEnum(2, health_);
      }
      if (technology_ != choreo.Battery.BatteryState.Technology.TECHNOLOGY_UNKNOWN.getNumber()) {
        output.writeEnum(3, technology_);
      }
      if (header_ != null) {
        output.writeMessage(4, getHeader());
      }
      if (voltage_ != null) {
        output.writeMessage(5, getVoltage());
      }
      if (current_ != null) {
        output.writeMessage(6, getCurrent());
      }
      if (charge_ != null) {
        output.writeMessage(7, getCharge());
      }
      if (capacity_ != null) {
        output.writeMessage(8, getCapacity());
      }
      if (designCapacity_ != null) {
        output.writeMessage(9, getDesignCapacity());
      }
      if (percentage_ != null) {
        output.writeMessage(10, getPercentage());
      }
      if (powerSupplyStatus_ != null) {
        output.writeMessage(12, getPowerSupplyStatus());
      }
      if (powerSupplyHealth_ != null) {
        output.writeMessage(13, getPowerSupplyHealth());
      }
      if (powerSupplyTechnology_ != null) {
        output.writeMessage(14, getPowerSupplyTechnology());
      }
      if (present_ != null) {
        output.writeMessage(15, getPresent());
      }
      if (cellVoltage_ != null) {
        output.writeMessage(16, getCellVoltage());
      }
      if (location_ != null) {
        output.writeMessage(17, getLocation());
      }
      if (serialNumber_ != null) {
        output.writeMessage(18, getSerialNumber());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != choreo.Battery.BatteryState.Status.STATUS_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (health_ != choreo.Battery.BatteryState.Health.HEALTH_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, health_);
      }
      if (technology_ != choreo.Battery.BatteryState.Technology.TECHNOLOGY_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, technology_);
      }
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHeader());
      }
      if (voltage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getVoltage());
      }
      if (current_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCurrent());
      }
      if (charge_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCharge());
      }
      if (capacity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getCapacity());
      }
      if (designCapacity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getDesignCapacity());
      }
      if (percentage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getPercentage());
      }
      if (powerSupplyStatus_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getPowerSupplyStatus());
      }
      if (powerSupplyHealth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getPowerSupplyHealth());
      }
      if (powerSupplyTechnology_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getPowerSupplyTechnology());
      }
      if (present_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getPresent());
      }
      if (cellVoltage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getCellVoltage());
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getLocation());
      }
      if (serialNumber_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getSerialNumber());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Battery.BatteryState)) {
        return super.equals(obj);
      }
      choreo.Battery.BatteryState other = (choreo.Battery.BatteryState) obj;

      boolean result = true;
      result = result && status_ == other.status_;
      result = result && health_ == other.health_;
      result = result && technology_ == other.technology_;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasVoltage() == other.hasVoltage());
      if (hasVoltage()) {
        result = result && getVoltage()
            .equals(other.getVoltage());
      }
      result = result && (hasCurrent() == other.hasCurrent());
      if (hasCurrent()) {
        result = result && getCurrent()
            .equals(other.getCurrent());
      }
      result = result && (hasCharge() == other.hasCharge());
      if (hasCharge()) {
        result = result && getCharge()
            .equals(other.getCharge());
      }
      result = result && (hasCapacity() == other.hasCapacity());
      if (hasCapacity()) {
        result = result && getCapacity()
            .equals(other.getCapacity());
      }
      result = result && (hasDesignCapacity() == other.hasDesignCapacity());
      if (hasDesignCapacity()) {
        result = result && getDesignCapacity()
            .equals(other.getDesignCapacity());
      }
      result = result && (hasPercentage() == other.hasPercentage());
      if (hasPercentage()) {
        result = result && getPercentage()
            .equals(other.getPercentage());
      }
      result = result && (hasPowerSupplyStatus() == other.hasPowerSupplyStatus());
      if (hasPowerSupplyStatus()) {
        result = result && getPowerSupplyStatus()
            .equals(other.getPowerSupplyStatus());
      }
      result = result && (hasPowerSupplyHealth() == other.hasPowerSupplyHealth());
      if (hasPowerSupplyHealth()) {
        result = result && getPowerSupplyHealth()
            .equals(other.getPowerSupplyHealth());
      }
      result = result && (hasPowerSupplyTechnology() == other.hasPowerSupplyTechnology());
      if (hasPowerSupplyTechnology()) {
        result = result && getPowerSupplyTechnology()
            .equals(other.getPowerSupplyTechnology());
      }
      result = result && (hasPresent() == other.hasPresent());
      if (hasPresent()) {
        result = result && getPresent()
            .equals(other.getPresent());
      }
      result = result && (hasCellVoltage() == other.hasCellVoltage());
      if (hasCellVoltage()) {
        result = result && getCellVoltage()
            .equals(other.getCellVoltage());
      }
      result = result && (hasLocation() == other.hasLocation());
      if (hasLocation()) {
        result = result && getLocation()
            .equals(other.getLocation());
      }
      result = result && (hasSerialNumber() == other.hasSerialNumber());
      if (hasSerialNumber()) {
        result = result && getSerialNumber()
            .equals(other.getSerialNumber());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + HEALTH_FIELD_NUMBER;
      hash = (53 * hash) + health_;
      hash = (37 * hash) + TECHNOLOGY_FIELD_NUMBER;
      hash = (53 * hash) + technology_;
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasVoltage()) {
        hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
        hash = (53 * hash) + getVoltage().hashCode();
      }
      if (hasCurrent()) {
        hash = (37 * hash) + CURRENT_FIELD_NUMBER;
        hash = (53 * hash) + getCurrent().hashCode();
      }
      if (hasCharge()) {
        hash = (37 * hash) + CHARGE_FIELD_NUMBER;
        hash = (53 * hash) + getCharge().hashCode();
      }
      if (hasCapacity()) {
        hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
        hash = (53 * hash) + getCapacity().hashCode();
      }
      if (hasDesignCapacity()) {
        hash = (37 * hash) + DESIGN_CAPACITY_FIELD_NUMBER;
        hash = (53 * hash) + getDesignCapacity().hashCode();
      }
      if (hasPercentage()) {
        hash = (37 * hash) + PERCENTAGE_FIELD_NUMBER;
        hash = (53 * hash) + getPercentage().hashCode();
      }
      if (hasPowerSupplyStatus()) {
        hash = (37 * hash) + POWER_SUPPLY_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getPowerSupplyStatus().hashCode();
      }
      if (hasPowerSupplyHealth()) {
        hash = (37 * hash) + POWER_SUPPLY_HEALTH_FIELD_NUMBER;
        hash = (53 * hash) + getPowerSupplyHealth().hashCode();
      }
      if (hasPowerSupplyTechnology()) {
        hash = (37 * hash) + POWER_SUPPLY_TECHNOLOGY_FIELD_NUMBER;
        hash = (53 * hash) + getPowerSupplyTechnology().hashCode();
      }
      if (hasPresent()) {
        hash = (37 * hash) + PRESENT_FIELD_NUMBER;
        hash = (53 * hash) + getPresent().hashCode();
      }
      if (hasCellVoltage()) {
        hash = (37 * hash) + CELL_VOLTAGE_FIELD_NUMBER;
        hash = (53 * hash) + getCellVoltage().hashCode();
      }
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      if (hasSerialNumber()) {
        hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSerialNumber().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Battery.BatteryState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Battery.BatteryState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Battery.BatteryState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Battery.BatteryState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Battery.BatteryState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Battery.BatteryState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Battery.BatteryState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Battery.BatteryState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Battery.BatteryState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Battery.BatteryState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Battery.BatteryState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Battery.BatteryState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Battery.BatteryState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.BatteryState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.BatteryState)
        choreo.Battery.BatteryStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Battery.internal_static_choreo_BatteryState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Battery.internal_static_choreo_BatteryState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Battery.BatteryState.class, choreo.Battery.BatteryState.Builder.class);
      }

      // Construct using choreo.Battery.BatteryState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        status_ = 0;

        health_ = 0;

        technology_ = 0;

        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (voltageBuilder_ == null) {
          voltage_ = null;
        } else {
          voltage_ = null;
          voltageBuilder_ = null;
        }
        if (currentBuilder_ == null) {
          current_ = null;
        } else {
          current_ = null;
          currentBuilder_ = null;
        }
        if (chargeBuilder_ == null) {
          charge_ = null;
        } else {
          charge_ = null;
          chargeBuilder_ = null;
        }
        if (capacityBuilder_ == null) {
          capacity_ = null;
        } else {
          capacity_ = null;
          capacityBuilder_ = null;
        }
        if (designCapacityBuilder_ == null) {
          designCapacity_ = null;
        } else {
          designCapacity_ = null;
          designCapacityBuilder_ = null;
        }
        if (percentageBuilder_ == null) {
          percentage_ = null;
        } else {
          percentage_ = null;
          percentageBuilder_ = null;
        }
        if (powerSupplyStatusBuilder_ == null) {
          powerSupplyStatus_ = null;
        } else {
          powerSupplyStatus_ = null;
          powerSupplyStatusBuilder_ = null;
        }
        if (powerSupplyHealthBuilder_ == null) {
          powerSupplyHealth_ = null;
        } else {
          powerSupplyHealth_ = null;
          powerSupplyHealthBuilder_ = null;
        }
        if (powerSupplyTechnologyBuilder_ == null) {
          powerSupplyTechnology_ = null;
        } else {
          powerSupplyTechnology_ = null;
          powerSupplyTechnologyBuilder_ = null;
        }
        if (presentBuilder_ == null) {
          present_ = null;
        } else {
          present_ = null;
          presentBuilder_ = null;
        }
        if (cellVoltageBuilder_ == null) {
          cellVoltage_ = null;
        } else {
          cellVoltage_ = null;
          cellVoltageBuilder_ = null;
        }
        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        if (serialNumberBuilder_ == null) {
          serialNumber_ = null;
        } else {
          serialNumber_ = null;
          serialNumberBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Battery.internal_static_choreo_BatteryState_descriptor;
      }

      public choreo.Battery.BatteryState getDefaultInstanceForType() {
        return choreo.Battery.BatteryState.getDefaultInstance();
      }

      public choreo.Battery.BatteryState build() {
        choreo.Battery.BatteryState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Battery.BatteryState buildPartial() {
        choreo.Battery.BatteryState result = new choreo.Battery.BatteryState(this);
        result.status_ = status_;
        result.health_ = health_;
        result.technology_ = technology_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (voltageBuilder_ == null) {
          result.voltage_ = voltage_;
        } else {
          result.voltage_ = voltageBuilder_.build();
        }
        if (currentBuilder_ == null) {
          result.current_ = current_;
        } else {
          result.current_ = currentBuilder_.build();
        }
        if (chargeBuilder_ == null) {
          result.charge_ = charge_;
        } else {
          result.charge_ = chargeBuilder_.build();
        }
        if (capacityBuilder_ == null) {
          result.capacity_ = capacity_;
        } else {
          result.capacity_ = capacityBuilder_.build();
        }
        if (designCapacityBuilder_ == null) {
          result.designCapacity_ = designCapacity_;
        } else {
          result.designCapacity_ = designCapacityBuilder_.build();
        }
        if (percentageBuilder_ == null) {
          result.percentage_ = percentage_;
        } else {
          result.percentage_ = percentageBuilder_.build();
        }
        if (powerSupplyStatusBuilder_ == null) {
          result.powerSupplyStatus_ = powerSupplyStatus_;
        } else {
          result.powerSupplyStatus_ = powerSupplyStatusBuilder_.build();
        }
        if (powerSupplyHealthBuilder_ == null) {
          result.powerSupplyHealth_ = powerSupplyHealth_;
        } else {
          result.powerSupplyHealth_ = powerSupplyHealthBuilder_.build();
        }
        if (powerSupplyTechnologyBuilder_ == null) {
          result.powerSupplyTechnology_ = powerSupplyTechnology_;
        } else {
          result.powerSupplyTechnology_ = powerSupplyTechnologyBuilder_.build();
        }
        if (presentBuilder_ == null) {
          result.present_ = present_;
        } else {
          result.present_ = presentBuilder_.build();
        }
        if (cellVoltageBuilder_ == null) {
          result.cellVoltage_ = cellVoltage_;
        } else {
          result.cellVoltage_ = cellVoltageBuilder_.build();
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (serialNumberBuilder_ == null) {
          result.serialNumber_ = serialNumber_;
        } else {
          result.serialNumber_ = serialNumberBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Battery.BatteryState) {
          return mergeFrom((choreo.Battery.BatteryState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Battery.BatteryState other) {
        if (other == choreo.Battery.BatteryState.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.health_ != 0) {
          setHealthValue(other.getHealthValue());
        }
        if (other.technology_ != 0) {
          setTechnologyValue(other.getTechnologyValue());
        }
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasVoltage()) {
          mergeVoltage(other.getVoltage());
        }
        if (other.hasCurrent()) {
          mergeCurrent(other.getCurrent());
        }
        if (other.hasCharge()) {
          mergeCharge(other.getCharge());
        }
        if (other.hasCapacity()) {
          mergeCapacity(other.getCapacity());
        }
        if (other.hasDesignCapacity()) {
          mergeDesignCapacity(other.getDesignCapacity());
        }
        if (other.hasPercentage()) {
          mergePercentage(other.getPercentage());
        }
        if (other.hasPowerSupplyStatus()) {
          mergePowerSupplyStatus(other.getPowerSupplyStatus());
        }
        if (other.hasPowerSupplyHealth()) {
          mergePowerSupplyHealth(other.getPowerSupplyHealth());
        }
        if (other.hasPowerSupplyTechnology()) {
          mergePowerSupplyTechnology(other.getPowerSupplyTechnology());
        }
        if (other.hasPresent()) {
          mergePresent(other.getPresent());
        }
        if (other.hasCellVoltage()) {
          mergeCellVoltage(other.getCellVoltage());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasSerialNumber()) {
          mergeSerialNumber(other.getSerialNumber());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Battery.BatteryState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Battery.BatteryState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int status_ = 0;
      /**
       * <code>.choreo.BatteryState.Status status = 1;</code>
       */
      public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.choreo.BatteryState.Status status = 1;</code>
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Status status = 1;</code>
       */
      public choreo.Battery.BatteryState.Status getStatus() {
        choreo.Battery.BatteryState.Status result = choreo.Battery.BatteryState.Status.valueOf(status_);
        return result == null ? choreo.Battery.BatteryState.Status.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.BatteryState.Status status = 1;</code>
       */
      public Builder setStatus(choreo.Battery.BatteryState.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Status status = 1;</code>
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private int health_ = 0;
      /**
       * <code>.choreo.BatteryState.Health health = 2;</code>
       */
      public int getHealthValue() {
        return health_;
      }
      /**
       * <code>.choreo.BatteryState.Health health = 2;</code>
       */
      public Builder setHealthValue(int value) {
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Health health = 2;</code>
       */
      public choreo.Battery.BatteryState.Health getHealth() {
        choreo.Battery.BatteryState.Health result = choreo.Battery.BatteryState.Health.valueOf(health_);
        return result == null ? choreo.Battery.BatteryState.Health.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.BatteryState.Health health = 2;</code>
       */
      public Builder setHealth(choreo.Battery.BatteryState.Health value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        health_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Health health = 2;</code>
       */
      public Builder clearHealth() {
        
        health_ = 0;
        onChanged();
        return this;
      }

      private int technology_ = 0;
      /**
       * <code>.choreo.BatteryState.Technology technology = 3;</code>
       */
      public int getTechnologyValue() {
        return technology_;
      }
      /**
       * <code>.choreo.BatteryState.Technology technology = 3;</code>
       */
      public Builder setTechnologyValue(int value) {
        technology_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Technology technology = 3;</code>
       */
      public choreo.Battery.BatteryState.Technology getTechnology() {
        choreo.Battery.BatteryState.Technology result = choreo.Battery.BatteryState.Technology.valueOf(technology_);
        return result == null ? choreo.Battery.BatteryState.Technology.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.BatteryState.Technology technology = 3;</code>
       */
      public Builder setTechnology(choreo.Battery.BatteryState.Technology value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        technology_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.BatteryState.Technology technology = 3;</code>
       */
      public Builder clearTechnology() {
        
        technology_ = 0;
        onChanged();
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float32 voltage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> voltageBuilder_;
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public boolean hasVoltage() {
        return voltageBuilder_ != null || voltage_ != null;
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public choreo.FloatOuterClass.Float32 getVoltage() {
        if (voltageBuilder_ == null) {
          return voltage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : voltage_;
        } else {
          return voltageBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public Builder setVoltage(choreo.FloatOuterClass.Float32 value) {
        if (voltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          voltage_ = value;
          onChanged();
        } else {
          voltageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public Builder setVoltage(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (voltageBuilder_ == null) {
          voltage_ = builderForValue.build();
          onChanged();
        } else {
          voltageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public Builder mergeVoltage(choreo.FloatOuterClass.Float32 value) {
        if (voltageBuilder_ == null) {
          if (voltage_ != null) {
            voltage_ =
              choreo.FloatOuterClass.Float32.newBuilder(voltage_).mergeFrom(value).buildPartial();
          } else {
            voltage_ = value;
          }
          onChanged();
        } else {
          voltageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public Builder clearVoltage() {
        if (voltageBuilder_ == null) {
          voltage_ = null;
          onChanged();
        } else {
          voltage_ = null;
          voltageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getVoltageBuilder() {
        
        onChanged();
        return getVoltageFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getVoltageOrBuilder() {
        if (voltageBuilder_ != null) {
          return voltageBuilder_.getMessageOrBuilder();
        } else {
          return voltage_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : voltage_;
        }
      }
      /**
       * <code>.choreo.Float32 voltage = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getVoltageFieldBuilder() {
        if (voltageBuilder_ == null) {
          voltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getVoltage(),
                  getParentForChildren(),
                  isClean());
          voltage_ = null;
        }
        return voltageBuilder_;
      }

      private choreo.FloatOuterClass.Float32 current_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> currentBuilder_;
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public boolean hasCurrent() {
        return currentBuilder_ != null || current_ != null;
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public choreo.FloatOuterClass.Float32 getCurrent() {
        if (currentBuilder_ == null) {
          return current_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : current_;
        } else {
          return currentBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public Builder setCurrent(choreo.FloatOuterClass.Float32 value) {
        if (currentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          current_ = value;
          onChanged();
        } else {
          currentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public Builder setCurrent(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (currentBuilder_ == null) {
          current_ = builderForValue.build();
          onChanged();
        } else {
          currentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public Builder mergeCurrent(choreo.FloatOuterClass.Float32 value) {
        if (currentBuilder_ == null) {
          if (current_ != null) {
            current_ =
              choreo.FloatOuterClass.Float32.newBuilder(current_).mergeFrom(value).buildPartial();
          } else {
            current_ = value;
          }
          onChanged();
        } else {
          currentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public Builder clearCurrent() {
        if (currentBuilder_ == null) {
          current_ = null;
          onChanged();
        } else {
          current_ = null;
          currentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getCurrentBuilder() {
        
        onChanged();
        return getCurrentFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getCurrentOrBuilder() {
        if (currentBuilder_ != null) {
          return currentBuilder_.getMessageOrBuilder();
        } else {
          return current_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : current_;
        }
      }
      /**
       * <code>.choreo.Float32 current = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getCurrentFieldBuilder() {
        if (currentBuilder_ == null) {
          currentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getCurrent(),
                  getParentForChildren(),
                  isClean());
          current_ = null;
        }
        return currentBuilder_;
      }

      private choreo.FloatOuterClass.Float32 charge_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> chargeBuilder_;
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public boolean hasCharge() {
        return chargeBuilder_ != null || charge_ != null;
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public choreo.FloatOuterClass.Float32 getCharge() {
        if (chargeBuilder_ == null) {
          return charge_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : charge_;
        } else {
          return chargeBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public Builder setCharge(choreo.FloatOuterClass.Float32 value) {
        if (chargeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          charge_ = value;
          onChanged();
        } else {
          chargeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public Builder setCharge(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (chargeBuilder_ == null) {
          charge_ = builderForValue.build();
          onChanged();
        } else {
          chargeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public Builder mergeCharge(choreo.FloatOuterClass.Float32 value) {
        if (chargeBuilder_ == null) {
          if (charge_ != null) {
            charge_ =
              choreo.FloatOuterClass.Float32.newBuilder(charge_).mergeFrom(value).buildPartial();
          } else {
            charge_ = value;
          }
          onChanged();
        } else {
          chargeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public Builder clearCharge() {
        if (chargeBuilder_ == null) {
          charge_ = null;
          onChanged();
        } else {
          charge_ = null;
          chargeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getChargeBuilder() {
        
        onChanged();
        return getChargeFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getChargeOrBuilder() {
        if (chargeBuilder_ != null) {
          return chargeBuilder_.getMessageOrBuilder();
        } else {
          return charge_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : charge_;
        }
      }
      /**
       * <code>.choreo.Float32 charge = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getChargeFieldBuilder() {
        if (chargeBuilder_ == null) {
          chargeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getCharge(),
                  getParentForChildren(),
                  isClean());
          charge_ = null;
        }
        return chargeBuilder_;
      }

      private choreo.FloatOuterClass.Float32 capacity_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> capacityBuilder_;
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public boolean hasCapacity() {
        return capacityBuilder_ != null || capacity_ != null;
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public choreo.FloatOuterClass.Float32 getCapacity() {
        if (capacityBuilder_ == null) {
          return capacity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : capacity_;
        } else {
          return capacityBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public Builder setCapacity(choreo.FloatOuterClass.Float32 value) {
        if (capacityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          capacity_ = value;
          onChanged();
        } else {
          capacityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public Builder setCapacity(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (capacityBuilder_ == null) {
          capacity_ = builderForValue.build();
          onChanged();
        } else {
          capacityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public Builder mergeCapacity(choreo.FloatOuterClass.Float32 value) {
        if (capacityBuilder_ == null) {
          if (capacity_ != null) {
            capacity_ =
              choreo.FloatOuterClass.Float32.newBuilder(capacity_).mergeFrom(value).buildPartial();
          } else {
            capacity_ = value;
          }
          onChanged();
        } else {
          capacityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public Builder clearCapacity() {
        if (capacityBuilder_ == null) {
          capacity_ = null;
          onChanged();
        } else {
          capacity_ = null;
          capacityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getCapacityBuilder() {
        
        onChanged();
        return getCapacityFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getCapacityOrBuilder() {
        if (capacityBuilder_ != null) {
          return capacityBuilder_.getMessageOrBuilder();
        } else {
          return capacity_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : capacity_;
        }
      }
      /**
       * <code>.choreo.Float32 capacity = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getCapacityFieldBuilder() {
        if (capacityBuilder_ == null) {
          capacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getCapacity(),
                  getParentForChildren(),
                  isClean());
          capacity_ = null;
        }
        return capacityBuilder_;
      }

      private choreo.FloatOuterClass.Float32 designCapacity_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> designCapacityBuilder_;
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public boolean hasDesignCapacity() {
        return designCapacityBuilder_ != null || designCapacity_ != null;
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public choreo.FloatOuterClass.Float32 getDesignCapacity() {
        if (designCapacityBuilder_ == null) {
          return designCapacity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : designCapacity_;
        } else {
          return designCapacityBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public Builder setDesignCapacity(choreo.FloatOuterClass.Float32 value) {
        if (designCapacityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          designCapacity_ = value;
          onChanged();
        } else {
          designCapacityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public Builder setDesignCapacity(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (designCapacityBuilder_ == null) {
          designCapacity_ = builderForValue.build();
          onChanged();
        } else {
          designCapacityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public Builder mergeDesignCapacity(choreo.FloatOuterClass.Float32 value) {
        if (designCapacityBuilder_ == null) {
          if (designCapacity_ != null) {
            designCapacity_ =
              choreo.FloatOuterClass.Float32.newBuilder(designCapacity_).mergeFrom(value).buildPartial();
          } else {
            designCapacity_ = value;
          }
          onChanged();
        } else {
          designCapacityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public Builder clearDesignCapacity() {
        if (designCapacityBuilder_ == null) {
          designCapacity_ = null;
          onChanged();
        } else {
          designCapacity_ = null;
          designCapacityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getDesignCapacityBuilder() {
        
        onChanged();
        return getDesignCapacityFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getDesignCapacityOrBuilder() {
        if (designCapacityBuilder_ != null) {
          return designCapacityBuilder_.getMessageOrBuilder();
        } else {
          return designCapacity_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : designCapacity_;
        }
      }
      /**
       * <code>.choreo.Float32 design_capacity = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getDesignCapacityFieldBuilder() {
        if (designCapacityBuilder_ == null) {
          designCapacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getDesignCapacity(),
                  getParentForChildren(),
                  isClean());
          designCapacity_ = null;
        }
        return designCapacityBuilder_;
      }

      private choreo.FloatOuterClass.Float32 percentage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> percentageBuilder_;
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public boolean hasPercentage() {
        return percentageBuilder_ != null || percentage_ != null;
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public choreo.FloatOuterClass.Float32 getPercentage() {
        if (percentageBuilder_ == null) {
          return percentage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : percentage_;
        } else {
          return percentageBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public Builder setPercentage(choreo.FloatOuterClass.Float32 value) {
        if (percentageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          percentage_ = value;
          onChanged();
        } else {
          percentageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public Builder setPercentage(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (percentageBuilder_ == null) {
          percentage_ = builderForValue.build();
          onChanged();
        } else {
          percentageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public Builder mergePercentage(choreo.FloatOuterClass.Float32 value) {
        if (percentageBuilder_ == null) {
          if (percentage_ != null) {
            percentage_ =
              choreo.FloatOuterClass.Float32.newBuilder(percentage_).mergeFrom(value).buildPartial();
          } else {
            percentage_ = value;
          }
          onChanged();
        } else {
          percentageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public Builder clearPercentage() {
        if (percentageBuilder_ == null) {
          percentage_ = null;
          onChanged();
        } else {
          percentage_ = null;
          percentageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getPercentageBuilder() {
        
        onChanged();
        return getPercentageFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getPercentageOrBuilder() {
        if (percentageBuilder_ != null) {
          return percentageBuilder_.getMessageOrBuilder();
        } else {
          return percentage_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : percentage_;
        }
      }
      /**
       * <code>.choreo.Float32 percentage = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getPercentageFieldBuilder() {
        if (percentageBuilder_ == null) {
          percentageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getPercentage(),
                  getParentForChildren(),
                  isClean());
          percentage_ = null;
        }
        return percentageBuilder_;
      }

      private choreo.Int.UInt32 powerSupplyStatus_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> powerSupplyStatusBuilder_;
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public boolean hasPowerSupplyStatus() {
        return powerSupplyStatusBuilder_ != null || powerSupplyStatus_ != null;
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public choreo.Int.UInt32 getPowerSupplyStatus() {
        if (powerSupplyStatusBuilder_ == null) {
          return powerSupplyStatus_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyStatus_;
        } else {
          return powerSupplyStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public Builder setPowerSupplyStatus(choreo.Int.UInt32 value) {
        if (powerSupplyStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerSupplyStatus_ = value;
          onChanged();
        } else {
          powerSupplyStatusBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public Builder setPowerSupplyStatus(
          choreo.Int.UInt32.Builder builderForValue) {
        if (powerSupplyStatusBuilder_ == null) {
          powerSupplyStatus_ = builderForValue.build();
          onChanged();
        } else {
          powerSupplyStatusBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public Builder mergePowerSupplyStatus(choreo.Int.UInt32 value) {
        if (powerSupplyStatusBuilder_ == null) {
          if (powerSupplyStatus_ != null) {
            powerSupplyStatus_ =
              choreo.Int.UInt32.newBuilder(powerSupplyStatus_).mergeFrom(value).buildPartial();
          } else {
            powerSupplyStatus_ = value;
          }
          onChanged();
        } else {
          powerSupplyStatusBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public Builder clearPowerSupplyStatus() {
        if (powerSupplyStatusBuilder_ == null) {
          powerSupplyStatus_ = null;
          onChanged();
        } else {
          powerSupplyStatus_ = null;
          powerSupplyStatusBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public choreo.Int.UInt32.Builder getPowerSupplyStatusBuilder() {
        
        onChanged();
        return getPowerSupplyStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      public choreo.Int.UInt32OrBuilder getPowerSupplyStatusOrBuilder() {
        if (powerSupplyStatusBuilder_ != null) {
          return powerSupplyStatusBuilder_.getMessageOrBuilder();
        } else {
          return powerSupplyStatus_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : powerSupplyStatus_;
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_status = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getPowerSupplyStatusFieldBuilder() {
        if (powerSupplyStatusBuilder_ == null) {
          powerSupplyStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getPowerSupplyStatus(),
                  getParentForChildren(),
                  isClean());
          powerSupplyStatus_ = null;
        }
        return powerSupplyStatusBuilder_;
      }

      private choreo.Int.UInt32 powerSupplyHealth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> powerSupplyHealthBuilder_;
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public boolean hasPowerSupplyHealth() {
        return powerSupplyHealthBuilder_ != null || powerSupplyHealth_ != null;
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public choreo.Int.UInt32 getPowerSupplyHealth() {
        if (powerSupplyHealthBuilder_ == null) {
          return powerSupplyHealth_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyHealth_;
        } else {
          return powerSupplyHealthBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public Builder setPowerSupplyHealth(choreo.Int.UInt32 value) {
        if (powerSupplyHealthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerSupplyHealth_ = value;
          onChanged();
        } else {
          powerSupplyHealthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public Builder setPowerSupplyHealth(
          choreo.Int.UInt32.Builder builderForValue) {
        if (powerSupplyHealthBuilder_ == null) {
          powerSupplyHealth_ = builderForValue.build();
          onChanged();
        } else {
          powerSupplyHealthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public Builder mergePowerSupplyHealth(choreo.Int.UInt32 value) {
        if (powerSupplyHealthBuilder_ == null) {
          if (powerSupplyHealth_ != null) {
            powerSupplyHealth_ =
              choreo.Int.UInt32.newBuilder(powerSupplyHealth_).mergeFrom(value).buildPartial();
          } else {
            powerSupplyHealth_ = value;
          }
          onChanged();
        } else {
          powerSupplyHealthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public Builder clearPowerSupplyHealth() {
        if (powerSupplyHealthBuilder_ == null) {
          powerSupplyHealth_ = null;
          onChanged();
        } else {
          powerSupplyHealth_ = null;
          powerSupplyHealthBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public choreo.Int.UInt32.Builder getPowerSupplyHealthBuilder() {
        
        onChanged();
        return getPowerSupplyHealthFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      public choreo.Int.UInt32OrBuilder getPowerSupplyHealthOrBuilder() {
        if (powerSupplyHealthBuilder_ != null) {
          return powerSupplyHealthBuilder_.getMessageOrBuilder();
        } else {
          return powerSupplyHealth_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : powerSupplyHealth_;
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_health = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getPowerSupplyHealthFieldBuilder() {
        if (powerSupplyHealthBuilder_ == null) {
          powerSupplyHealthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getPowerSupplyHealth(),
                  getParentForChildren(),
                  isClean());
          powerSupplyHealth_ = null;
        }
        return powerSupplyHealthBuilder_;
      }

      private choreo.Int.UInt32 powerSupplyTechnology_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> powerSupplyTechnologyBuilder_;
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public boolean hasPowerSupplyTechnology() {
        return powerSupplyTechnologyBuilder_ != null || powerSupplyTechnology_ != null;
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public choreo.Int.UInt32 getPowerSupplyTechnology() {
        if (powerSupplyTechnologyBuilder_ == null) {
          return powerSupplyTechnology_ == null ? choreo.Int.UInt32.getDefaultInstance() : powerSupplyTechnology_;
        } else {
          return powerSupplyTechnologyBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public Builder setPowerSupplyTechnology(choreo.Int.UInt32 value) {
        if (powerSupplyTechnologyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerSupplyTechnology_ = value;
          onChanged();
        } else {
          powerSupplyTechnologyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public Builder setPowerSupplyTechnology(
          choreo.Int.UInt32.Builder builderForValue) {
        if (powerSupplyTechnologyBuilder_ == null) {
          powerSupplyTechnology_ = builderForValue.build();
          onChanged();
        } else {
          powerSupplyTechnologyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public Builder mergePowerSupplyTechnology(choreo.Int.UInt32 value) {
        if (powerSupplyTechnologyBuilder_ == null) {
          if (powerSupplyTechnology_ != null) {
            powerSupplyTechnology_ =
              choreo.Int.UInt32.newBuilder(powerSupplyTechnology_).mergeFrom(value).buildPartial();
          } else {
            powerSupplyTechnology_ = value;
          }
          onChanged();
        } else {
          powerSupplyTechnologyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public Builder clearPowerSupplyTechnology() {
        if (powerSupplyTechnologyBuilder_ == null) {
          powerSupplyTechnology_ = null;
          onChanged();
        } else {
          powerSupplyTechnology_ = null;
          powerSupplyTechnologyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public choreo.Int.UInt32.Builder getPowerSupplyTechnologyBuilder() {
        
        onChanged();
        return getPowerSupplyTechnologyFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      public choreo.Int.UInt32OrBuilder getPowerSupplyTechnologyOrBuilder() {
        if (powerSupplyTechnologyBuilder_ != null) {
          return powerSupplyTechnologyBuilder_.getMessageOrBuilder();
        } else {
          return powerSupplyTechnology_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : powerSupplyTechnology_;
        }
      }
      /**
       * <code>.choreo.UInt32 power_supply_technology = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getPowerSupplyTechnologyFieldBuilder() {
        if (powerSupplyTechnologyBuilder_ == null) {
          powerSupplyTechnologyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getPowerSupplyTechnology(),
                  getParentForChildren(),
                  isClean());
          powerSupplyTechnology_ = null;
        }
        return powerSupplyTechnologyBuilder_;
      }

      private choreo.BoolOuterClass.Bool present_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> presentBuilder_;
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public boolean hasPresent() {
        return presentBuilder_ != null || present_ != null;
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public choreo.BoolOuterClass.Bool getPresent() {
        if (presentBuilder_ == null) {
          return present_ == null ? choreo.BoolOuterClass.Bool.getDefaultInstance() : present_;
        } else {
          return presentBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public Builder setPresent(choreo.BoolOuterClass.Bool value) {
        if (presentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          present_ = value;
          onChanged();
        } else {
          presentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public Builder setPresent(
          choreo.BoolOuterClass.Bool.Builder builderForValue) {
        if (presentBuilder_ == null) {
          present_ = builderForValue.build();
          onChanged();
        } else {
          presentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public Builder mergePresent(choreo.BoolOuterClass.Bool value) {
        if (presentBuilder_ == null) {
          if (present_ != null) {
            present_ =
              choreo.BoolOuterClass.Bool.newBuilder(present_).mergeFrom(value).buildPartial();
          } else {
            present_ = value;
          }
          onChanged();
        } else {
          presentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public Builder clearPresent() {
        if (presentBuilder_ == null) {
          present_ = null;
          onChanged();
        } else {
          present_ = null;
          presentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public choreo.BoolOuterClass.Bool.Builder getPresentBuilder() {
        
        onChanged();
        return getPresentFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      public choreo.BoolOuterClass.BoolOrBuilder getPresentOrBuilder() {
        if (presentBuilder_ != null) {
          return presentBuilder_.getMessageOrBuilder();
        } else {
          return present_ == null ?
              choreo.BoolOuterClass.Bool.getDefaultInstance() : present_;
        }
      }
      /**
       * <code>.choreo.Bool present = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder> 
          getPresentFieldBuilder() {
        if (presentBuilder_ == null) {
          presentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.BoolOuterClass.Bool, choreo.BoolOuterClass.Bool.Builder, choreo.BoolOuterClass.BoolOrBuilder>(
                  getPresent(),
                  getParentForChildren(),
                  isClean());
          present_ = null;
        }
        return presentBuilder_;
      }

      private choreo.FloatOuterClass.Float32 cellVoltage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> cellVoltageBuilder_;
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public boolean hasCellVoltage() {
        return cellVoltageBuilder_ != null || cellVoltage_ != null;
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public choreo.FloatOuterClass.Float32 getCellVoltage() {
        if (cellVoltageBuilder_ == null) {
          return cellVoltage_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : cellVoltage_;
        } else {
          return cellVoltageBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public Builder setCellVoltage(choreo.FloatOuterClass.Float32 value) {
        if (cellVoltageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cellVoltage_ = value;
          onChanged();
        } else {
          cellVoltageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public Builder setCellVoltage(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (cellVoltageBuilder_ == null) {
          cellVoltage_ = builderForValue.build();
          onChanged();
        } else {
          cellVoltageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public Builder mergeCellVoltage(choreo.FloatOuterClass.Float32 value) {
        if (cellVoltageBuilder_ == null) {
          if (cellVoltage_ != null) {
            cellVoltage_ =
              choreo.FloatOuterClass.Float32.newBuilder(cellVoltage_).mergeFrom(value).buildPartial();
          } else {
            cellVoltage_ = value;
          }
          onChanged();
        } else {
          cellVoltageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public Builder clearCellVoltage() {
        if (cellVoltageBuilder_ == null) {
          cellVoltage_ = null;
          onChanged();
        } else {
          cellVoltage_ = null;
          cellVoltageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getCellVoltageBuilder() {
        
        onChanged();
        return getCellVoltageFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getCellVoltageOrBuilder() {
        if (cellVoltageBuilder_ != null) {
          return cellVoltageBuilder_.getMessageOrBuilder();
        } else {
          return cellVoltage_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : cellVoltage_;
        }
      }
      /**
       * <code>.choreo.Float32 cell_voltage = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getCellVoltageFieldBuilder() {
        if (cellVoltageBuilder_ == null) {
          cellVoltageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getCellVoltage(),
                  getParentForChildren(),
                  isClean());
          cellVoltage_ = null;
        }
        return cellVoltageBuilder_;
      }

      private choreo.StringOuterClass.String location_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> locationBuilder_;
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public choreo.StringOuterClass.String getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public Builder setLocation(choreo.StringOuterClass.String value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public Builder setLocation(
          choreo.StringOuterClass.String.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public Builder mergeLocation(choreo.StringOuterClass.String value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              choreo.StringOuterClass.String.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public choreo.StringOuterClass.String.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      public choreo.StringOuterClass.StringOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              choreo.StringOuterClass.String.getDefaultInstance() : location_;
        }
      }
      /**
       * <code>.choreo.String location = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private choreo.StringOuterClass.String serialNumber_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> serialNumberBuilder_;
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public boolean hasSerialNumber() {
        return serialNumberBuilder_ != null || serialNumber_ != null;
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public choreo.StringOuterClass.String getSerialNumber() {
        if (serialNumberBuilder_ == null) {
          return serialNumber_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : serialNumber_;
        } else {
          return serialNumberBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public Builder setSerialNumber(choreo.StringOuterClass.String value) {
        if (serialNumberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serialNumber_ = value;
          onChanged();
        } else {
          serialNumberBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public Builder setSerialNumber(
          choreo.StringOuterClass.String.Builder builderForValue) {
        if (serialNumberBuilder_ == null) {
          serialNumber_ = builderForValue.build();
          onChanged();
        } else {
          serialNumberBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public Builder mergeSerialNumber(choreo.StringOuterClass.String value) {
        if (serialNumberBuilder_ == null) {
          if (serialNumber_ != null) {
            serialNumber_ =
              choreo.StringOuterClass.String.newBuilder(serialNumber_).mergeFrom(value).buildPartial();
          } else {
            serialNumber_ = value;
          }
          onChanged();
        } else {
          serialNumberBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public Builder clearSerialNumber() {
        if (serialNumberBuilder_ == null) {
          serialNumber_ = null;
          onChanged();
        } else {
          serialNumber_ = null;
          serialNumberBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public choreo.StringOuterClass.String.Builder getSerialNumberBuilder() {
        
        onChanged();
        return getSerialNumberFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      public choreo.StringOuterClass.StringOrBuilder getSerialNumberOrBuilder() {
        if (serialNumberBuilder_ != null) {
          return serialNumberBuilder_.getMessageOrBuilder();
        } else {
          return serialNumber_ == null ?
              choreo.StringOuterClass.String.getDefaultInstance() : serialNumber_;
        }
      }
      /**
       * <code>.choreo.String serial_number = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> 
          getSerialNumberFieldBuilder() {
        if (serialNumberBuilder_ == null) {
          serialNumberBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder>(
                  getSerialNumber(),
                  getParentForChildren(),
                  isClean());
          serialNumber_ = null;
        }
        return serialNumberBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.BatteryState)
    }

    // @@protoc_insertion_point(class_scope:choreo.BatteryState)
    private static final choreo.Battery.BatteryState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Battery.BatteryState();
    }

    public static choreo.Battery.BatteryState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BatteryState>
        PARSER = new com.google.protobuf.AbstractParser<BatteryState>() {
      public BatteryState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BatteryState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BatteryState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BatteryState> getParserForType() {
      return PARSER;
    }

    public choreo.Battery.BatteryState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_BatteryState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_BatteryState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024sensor/battery.proto\022\006choreo\032\024primitiv" +
      "e/bool.proto\032\025primitive/float.proto\032\026pri" +
      "mitive/header.proto\032\023primitive/int.proto" +
      "\032\026primitive/string.proto\"\244\t\n\014BatteryStat" +
      "e\022+\n\006status\030\001 \001(\0162\033.choreo.BatteryState." +
      "Status\022+\n\006health\030\002 \001(\0162\033.choreo.BatteryS" +
      "tate.Health\0223\n\ntechnology\030\003 \001(\0162\037.choreo" +
      ".BatteryState.Technology\022\036\n\006header\030\004 \001(\013" +
      "2\016.choreo.Header\022 \n\007voltage\030\005 \001(\0132\017.chor" +
      "eo.Float32\022 \n\007current\030\006 \001(\0132\017.choreo.Flo",
      "at32\022\037\n\006charge\030\007 \001(\0132\017.choreo.Float32\022!\n" +
      "\010capacity\030\010 \001(\0132\017.choreo.Float32\022(\n\017desi" +
      "gn_capacity\030\t \001(\0132\017.choreo.Float32\022#\n\npe" +
      "rcentage\030\n \001(\0132\017.choreo.Float32\022+\n\023power" +
      "_supply_status\030\014 \001(\0132\016.choreo.UInt32\022+\n\023" +
      "power_supply_health\030\r \001(\0132\016.choreo.UInt3" +
      "2\022/\n\027power_supply_technology\030\016 \001(\0132\016.cho" +
      "reo.UInt32\022\035\n\007present\030\017 \001(\0132\014.choreo.Boo" +
      "l\022%\n\014cell_voltage\030\020 \001(\0132\017.choreo.Float32" +
      "\022 \n\010location\030\021 \001(\0132\016.choreo.String\022%\n\rse",
      "rial_number\030\022 \001(\0132\016.choreo.String\"s\n\006Sta" +
      "tus\022\022\n\016STATUS_UNKNOWN\020\000\022\023\n\017STATUS_CHARGI" +
      "NG\020\001\022\026\n\022STATUS_DISCHARGING\020\002\022\027\n\023STATUS_N" +
      "OT_CHARGING\020\003\022\017\n\013STATUS_FULL\020\004\"\331\001\n\006Healt" +
      "h\022\022\n\016HEALTH_UNKNOWN\020\000\022\017\n\013HEALTH_GOOD\020\001\022\023" +
      "\n\017HEALTH_OVERHEAT\020\002\022\017\n\013HEALTH_DEAD\020\003\022\026\n\022" +
      "HEALTH_OVERVOLTAGE\020\004\022\031\n\025HEALTH_UNSPEC_FA" +
      "ILURE\020\005\022\017\n\013HEALTH_COLD\020\006\022 \n\034HEALTH_WATCH" +
      "DOG_TIMER_EXPIRE\020\007\022\036\n\032HEALTH_SAFETY_TIME" +
      "R_EXPIRE\020\010\"\242\001\n\nTechnology\022\026\n\022TECHNOLOGY_",
      "UNKNOWN\020\000\022\023\n\017TECHNOLOGY_NIMH\020\001\022\023\n\017TECHNO" +
      "LOGY_LION\020\002\022\023\n\017TECHNOLOGY_LIPO\020\003\022\023\n\017TECH" +
      "NOLOGY_LIFE\020\004\022\023\n\017TECHNOLOGY_NICD\020\005\022\023\n\017TE" +
      "CHNOLOGY_LIMN\020\006b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.BoolOuterClass.getDescriptor(),
          choreo.FloatOuterClass.getDescriptor(),
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.Int.getDescriptor(),
          choreo.StringOuterClass.getDescriptor(),
        }, assigner);
    internal_static_choreo_BatteryState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_BatteryState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_BatteryState_descriptor,
        new java.lang.String[] { "Status", "Health", "Technology", "Header", "Voltage", "Current", "Charge", "Capacity", "DesignCapacity", "Percentage", "PowerSupplyStatus", "PowerSupplyHealth", "PowerSupplyTechnology", "Present", "CellVoltage", "Location", "SerialNumber", });
    choreo.BoolOuterClass.getDescriptor();
    choreo.FloatOuterClass.getDescriptor();
    choreo.HeaderOuterClass.getDescriptor();
    choreo.Int.getDescriptor();
    choreo.StringOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
