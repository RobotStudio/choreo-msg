// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor/basic.proto

package choreo;

public final class Basic {
  private Basic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FluidPressureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.FluidPressure)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    boolean hasFluidPressure();
    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    choreo.FloatOuterClass.Float64 getFluidPressure();
    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getFluidPressureOrBuilder();

    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    boolean hasVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64 getVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.FluidPressure}
   */
  public  static final class FluidPressure extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.FluidPressure)
      FluidPressureOrBuilder {
    // Use FluidPressure.newBuilder() to construct.
    private FluidPressure(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FluidPressure() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FluidPressure(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (fluidPressure_ != null) {
                subBuilder = fluidPressure_.toBuilder();
              }
              fluidPressure_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fluidPressure_);
                fluidPressure_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (variance_ != null) {
                subBuilder = variance_.toBuilder();
              }
              variance_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variance_);
                variance_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Basic.internal_static_choreo_FluidPressure_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Basic.internal_static_choreo_FluidPressure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Basic.FluidPressure.class, choreo.Basic.FluidPressure.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int FLUID_PRESSURE_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float64 fluidPressure_;
    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    public boolean hasFluidPressure() {
      return fluidPressure_ != null;
    }
    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    public choreo.FloatOuterClass.Float64 getFluidPressure() {
      return fluidPressure_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : fluidPressure_;
    }
    /**
     * <code>.choreo.Float64 fluid_pressure = 2;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getFluidPressureOrBuilder() {
      return getFluidPressure();
    }

    public static final int VARIANCE_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float64 variance_;
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public boolean hasVariance() {
      return variance_ != null;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64 getVariance() {
      return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
      return getVariance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (fluidPressure_ != null) {
        output.writeMessage(2, getFluidPressure());
      }
      if (variance_ != null) {
        output.writeMessage(3, getVariance());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (fluidPressure_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFluidPressure());
      }
      if (variance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVariance());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Basic.FluidPressure)) {
        return super.equals(obj);
      }
      choreo.Basic.FluidPressure other = (choreo.Basic.FluidPressure) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasFluidPressure() == other.hasFluidPressure());
      if (hasFluidPressure()) {
        result = result && getFluidPressure()
            .equals(other.getFluidPressure());
      }
      result = result && (hasVariance() == other.hasVariance());
      if (hasVariance()) {
        result = result && getVariance()
            .equals(other.getVariance());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasFluidPressure()) {
        hash = (37 * hash) + FLUID_PRESSURE_FIELD_NUMBER;
        hash = (53 * hash) + getFluidPressure().hashCode();
      }
      if (hasVariance()) {
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getVariance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Basic.FluidPressure parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.FluidPressure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.FluidPressure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.FluidPressure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Basic.FluidPressure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.FluidPressure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Basic.FluidPressure prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.FluidPressure}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.FluidPressure)
        choreo.Basic.FluidPressureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Basic.internal_static_choreo_FluidPressure_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Basic.internal_static_choreo_FluidPressure_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Basic.FluidPressure.class, choreo.Basic.FluidPressure.Builder.class);
      }

      // Construct using choreo.Basic.FluidPressure.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (fluidPressureBuilder_ == null) {
          fluidPressure_ = null;
        } else {
          fluidPressure_ = null;
          fluidPressureBuilder_ = null;
        }
        if (varianceBuilder_ == null) {
          variance_ = null;
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Basic.internal_static_choreo_FluidPressure_descriptor;
      }

      public choreo.Basic.FluidPressure getDefaultInstanceForType() {
        return choreo.Basic.FluidPressure.getDefaultInstance();
      }

      public choreo.Basic.FluidPressure build() {
        choreo.Basic.FluidPressure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Basic.FluidPressure buildPartial() {
        choreo.Basic.FluidPressure result = new choreo.Basic.FluidPressure(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (fluidPressureBuilder_ == null) {
          result.fluidPressure_ = fluidPressure_;
        } else {
          result.fluidPressure_ = fluidPressureBuilder_.build();
        }
        if (varianceBuilder_ == null) {
          result.variance_ = variance_;
        } else {
          result.variance_ = varianceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Basic.FluidPressure) {
          return mergeFrom((choreo.Basic.FluidPressure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Basic.FluidPressure other) {
        if (other == choreo.Basic.FluidPressure.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasFluidPressure()) {
          mergeFluidPressure(other.getFluidPressure());
        }
        if (other.hasVariance()) {
          mergeVariance(other.getVariance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Basic.FluidPressure parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Basic.FluidPressure) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float64 fluidPressure_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> fluidPressureBuilder_;
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public boolean hasFluidPressure() {
        return fluidPressureBuilder_ != null || fluidPressure_ != null;
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public choreo.FloatOuterClass.Float64 getFluidPressure() {
        if (fluidPressureBuilder_ == null) {
          return fluidPressure_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : fluidPressure_;
        } else {
          return fluidPressureBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public Builder setFluidPressure(choreo.FloatOuterClass.Float64 value) {
        if (fluidPressureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fluidPressure_ = value;
          onChanged();
        } else {
          fluidPressureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public Builder setFluidPressure(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (fluidPressureBuilder_ == null) {
          fluidPressure_ = builderForValue.build();
          onChanged();
        } else {
          fluidPressureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public Builder mergeFluidPressure(choreo.FloatOuterClass.Float64 value) {
        if (fluidPressureBuilder_ == null) {
          if (fluidPressure_ != null) {
            fluidPressure_ =
              choreo.FloatOuterClass.Float64.newBuilder(fluidPressure_).mergeFrom(value).buildPartial();
          } else {
            fluidPressure_ = value;
          }
          onChanged();
        } else {
          fluidPressureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public Builder clearFluidPressure() {
        if (fluidPressureBuilder_ == null) {
          fluidPressure_ = null;
          onChanged();
        } else {
          fluidPressure_ = null;
          fluidPressureBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getFluidPressureBuilder() {
        
        onChanged();
        return getFluidPressureFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getFluidPressureOrBuilder() {
        if (fluidPressureBuilder_ != null) {
          return fluidPressureBuilder_.getMessageOrBuilder();
        } else {
          return fluidPressure_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : fluidPressure_;
        }
      }
      /**
       * <code>.choreo.Float64 fluid_pressure = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getFluidPressureFieldBuilder() {
        if (fluidPressureBuilder_ == null) {
          fluidPressureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getFluidPressure(),
                  getParentForChildren(),
                  isClean());
          fluidPressure_ = null;
        }
        return fluidPressureBuilder_;
      }

      private choreo.FloatOuterClass.Float64 variance_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> varianceBuilder_;
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public boolean hasVariance() {
        return varianceBuilder_ != null || variance_ != null;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64 getVariance() {
        if (varianceBuilder_ == null) {
          return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        } else {
          return varianceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variance_ = value;
          onChanged();
        } else {
          varianceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (varianceBuilder_ == null) {
          variance_ = builderForValue.build();
          onChanged();
        } else {
          varianceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder mergeVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (variance_ != null) {
            variance_ =
              choreo.FloatOuterClass.Float64.newBuilder(variance_).mergeFrom(value).buildPartial();
          } else {
            variance_ = value;
          }
          onChanged();
        } else {
          varianceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder clearVariance() {
        if (varianceBuilder_ == null) {
          variance_ = null;
          onChanged();
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getVarianceBuilder() {
        
        onChanged();
        return getVarianceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
        if (varianceBuilder_ != null) {
          return varianceBuilder_.getMessageOrBuilder();
        } else {
          return variance_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getVarianceFieldBuilder() {
        if (varianceBuilder_ == null) {
          varianceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getVariance(),
                  getParentForChildren(),
                  isClean());
          variance_ = null;
        }
        return varianceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.FluidPressure)
    }

    // @@protoc_insertion_point(class_scope:choreo.FluidPressure)
    private static final choreo.Basic.FluidPressure DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Basic.FluidPressure();
    }

    public static choreo.Basic.FluidPressure getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FluidPressure>
        PARSER = new com.google.protobuf.AbstractParser<FluidPressure>() {
      public FluidPressure parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FluidPressure(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FluidPressure> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FluidPressure> getParserForType() {
      return PARSER;
    }

    public choreo.Basic.FluidPressure getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IlluminanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Illuminance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    boolean hasIlluminance();
    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    choreo.FloatOuterClass.Float64 getIlluminance();
    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getIlluminanceOrBuilder();

    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    boolean hasVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64 getVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Illuminance}
   */
  public  static final class Illuminance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Illuminance)
      IlluminanceOrBuilder {
    // Use Illuminance.newBuilder() to construct.
    private Illuminance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Illuminance() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Illuminance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (illuminance_ != null) {
                subBuilder = illuminance_.toBuilder();
              }
              illuminance_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(illuminance_);
                illuminance_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (variance_ != null) {
                subBuilder = variance_.toBuilder();
              }
              variance_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variance_);
                variance_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Basic.internal_static_choreo_Illuminance_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Basic.internal_static_choreo_Illuminance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Basic.Illuminance.class, choreo.Basic.Illuminance.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ILLUMINANCE_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float64 illuminance_;
    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    public boolean hasIlluminance() {
      return illuminance_ != null;
    }
    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    public choreo.FloatOuterClass.Float64 getIlluminance() {
      return illuminance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : illuminance_;
    }
    /**
     * <code>.choreo.Float64 illuminance = 2;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getIlluminanceOrBuilder() {
      return getIlluminance();
    }

    public static final int VARIANCE_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float64 variance_;
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public boolean hasVariance() {
      return variance_ != null;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64 getVariance() {
      return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
      return getVariance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (illuminance_ != null) {
        output.writeMessage(2, getIlluminance());
      }
      if (variance_ != null) {
        output.writeMessage(3, getVariance());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (illuminance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIlluminance());
      }
      if (variance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVariance());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Basic.Illuminance)) {
        return super.equals(obj);
      }
      choreo.Basic.Illuminance other = (choreo.Basic.Illuminance) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasIlluminance() == other.hasIlluminance());
      if (hasIlluminance()) {
        result = result && getIlluminance()
            .equals(other.getIlluminance());
      }
      result = result && (hasVariance() == other.hasVariance());
      if (hasVariance()) {
        result = result && getVariance()
            .equals(other.getVariance());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasIlluminance()) {
        hash = (37 * hash) + ILLUMINANCE_FIELD_NUMBER;
        hash = (53 * hash) + getIlluminance().hashCode();
      }
      if (hasVariance()) {
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getVariance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Basic.Illuminance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Illuminance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Illuminance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Illuminance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Illuminance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Illuminance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Illuminance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Illuminance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Illuminance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Basic.Illuminance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Illuminance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Illuminance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Basic.Illuminance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Illuminance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Illuminance)
        choreo.Basic.IlluminanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Basic.internal_static_choreo_Illuminance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Basic.internal_static_choreo_Illuminance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Basic.Illuminance.class, choreo.Basic.Illuminance.Builder.class);
      }

      // Construct using choreo.Basic.Illuminance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (illuminanceBuilder_ == null) {
          illuminance_ = null;
        } else {
          illuminance_ = null;
          illuminanceBuilder_ = null;
        }
        if (varianceBuilder_ == null) {
          variance_ = null;
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Basic.internal_static_choreo_Illuminance_descriptor;
      }

      public choreo.Basic.Illuminance getDefaultInstanceForType() {
        return choreo.Basic.Illuminance.getDefaultInstance();
      }

      public choreo.Basic.Illuminance build() {
        choreo.Basic.Illuminance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Basic.Illuminance buildPartial() {
        choreo.Basic.Illuminance result = new choreo.Basic.Illuminance(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (illuminanceBuilder_ == null) {
          result.illuminance_ = illuminance_;
        } else {
          result.illuminance_ = illuminanceBuilder_.build();
        }
        if (varianceBuilder_ == null) {
          result.variance_ = variance_;
        } else {
          result.variance_ = varianceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Basic.Illuminance) {
          return mergeFrom((choreo.Basic.Illuminance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Basic.Illuminance other) {
        if (other == choreo.Basic.Illuminance.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasIlluminance()) {
          mergeIlluminance(other.getIlluminance());
        }
        if (other.hasVariance()) {
          mergeVariance(other.getVariance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Basic.Illuminance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Basic.Illuminance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float64 illuminance_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> illuminanceBuilder_;
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public boolean hasIlluminance() {
        return illuminanceBuilder_ != null || illuminance_ != null;
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64 getIlluminance() {
        if (illuminanceBuilder_ == null) {
          return illuminance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : illuminance_;
        } else {
          return illuminanceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public Builder setIlluminance(choreo.FloatOuterClass.Float64 value) {
        if (illuminanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          illuminance_ = value;
          onChanged();
        } else {
          illuminanceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public Builder setIlluminance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (illuminanceBuilder_ == null) {
          illuminance_ = builderForValue.build();
          onChanged();
        } else {
          illuminanceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public Builder mergeIlluminance(choreo.FloatOuterClass.Float64 value) {
        if (illuminanceBuilder_ == null) {
          if (illuminance_ != null) {
            illuminance_ =
              choreo.FloatOuterClass.Float64.newBuilder(illuminance_).mergeFrom(value).buildPartial();
          } else {
            illuminance_ = value;
          }
          onChanged();
        } else {
          illuminanceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public Builder clearIlluminance() {
        if (illuminanceBuilder_ == null) {
          illuminance_ = null;
          onChanged();
        } else {
          illuminance_ = null;
          illuminanceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getIlluminanceBuilder() {
        
        onChanged();
        return getIlluminanceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getIlluminanceOrBuilder() {
        if (illuminanceBuilder_ != null) {
          return illuminanceBuilder_.getMessageOrBuilder();
        } else {
          return illuminance_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : illuminance_;
        }
      }
      /**
       * <code>.choreo.Float64 illuminance = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getIlluminanceFieldBuilder() {
        if (illuminanceBuilder_ == null) {
          illuminanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getIlluminance(),
                  getParentForChildren(),
                  isClean());
          illuminance_ = null;
        }
        return illuminanceBuilder_;
      }

      private choreo.FloatOuterClass.Float64 variance_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> varianceBuilder_;
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public boolean hasVariance() {
        return varianceBuilder_ != null || variance_ != null;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64 getVariance() {
        if (varianceBuilder_ == null) {
          return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        } else {
          return varianceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variance_ = value;
          onChanged();
        } else {
          varianceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (varianceBuilder_ == null) {
          variance_ = builderForValue.build();
          onChanged();
        } else {
          varianceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder mergeVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (variance_ != null) {
            variance_ =
              choreo.FloatOuterClass.Float64.newBuilder(variance_).mergeFrom(value).buildPartial();
          } else {
            variance_ = value;
          }
          onChanged();
        } else {
          varianceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder clearVariance() {
        if (varianceBuilder_ == null) {
          variance_ = null;
          onChanged();
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getVarianceBuilder() {
        
        onChanged();
        return getVarianceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
        if (varianceBuilder_ != null) {
          return varianceBuilder_.getMessageOrBuilder();
        } else {
          return variance_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getVarianceFieldBuilder() {
        if (varianceBuilder_ == null) {
          varianceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getVariance(),
                  getParentForChildren(),
                  isClean());
          variance_ = null;
        }
        return varianceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Illuminance)
    }

    // @@protoc_insertion_point(class_scope:choreo.Illuminance)
    private static final choreo.Basic.Illuminance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Basic.Illuminance();
    }

    public static choreo.Basic.Illuminance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Illuminance>
        PARSER = new com.google.protobuf.AbstractParser<Illuminance>() {
      public Illuminance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Illuminance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Illuminance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Illuminance> getParserForType() {
      return PARSER;
    }

    public choreo.Basic.Illuminance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HumidityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Humidity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    boolean hasRelativeHumidity();
    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    choreo.FloatOuterClass.Float64 getRelativeHumidity();
    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getRelativeHumidityOrBuilder();

    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    boolean hasVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64 getVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Humidity}
   */
  public  static final class Humidity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Humidity)
      HumidityOrBuilder {
    // Use Humidity.newBuilder() to construct.
    private Humidity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Humidity() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Humidity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (relativeHumidity_ != null) {
                subBuilder = relativeHumidity_.toBuilder();
              }
              relativeHumidity_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(relativeHumidity_);
                relativeHumidity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (variance_ != null) {
                subBuilder = variance_.toBuilder();
              }
              variance_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variance_);
                variance_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Basic.internal_static_choreo_Humidity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Basic.internal_static_choreo_Humidity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Basic.Humidity.class, choreo.Basic.Humidity.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int RELATIVE_HUMIDITY_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float64 relativeHumidity_;
    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    public boolean hasRelativeHumidity() {
      return relativeHumidity_ != null;
    }
    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    public choreo.FloatOuterClass.Float64 getRelativeHumidity() {
      return relativeHumidity_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : relativeHumidity_;
    }
    /**
     * <code>.choreo.Float64 relative_humidity = 2;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getRelativeHumidityOrBuilder() {
      return getRelativeHumidity();
    }

    public static final int VARIANCE_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float64 variance_;
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public boolean hasVariance() {
      return variance_ != null;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64 getVariance() {
      return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
      return getVariance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (relativeHumidity_ != null) {
        output.writeMessage(2, getRelativeHumidity());
      }
      if (variance_ != null) {
        output.writeMessage(3, getVariance());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (relativeHumidity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRelativeHumidity());
      }
      if (variance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVariance());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Basic.Humidity)) {
        return super.equals(obj);
      }
      choreo.Basic.Humidity other = (choreo.Basic.Humidity) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasRelativeHumidity() == other.hasRelativeHumidity());
      if (hasRelativeHumidity()) {
        result = result && getRelativeHumidity()
            .equals(other.getRelativeHumidity());
      }
      result = result && (hasVariance() == other.hasVariance());
      if (hasVariance()) {
        result = result && getVariance()
            .equals(other.getVariance());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasRelativeHumidity()) {
        hash = (37 * hash) + RELATIVE_HUMIDITY_FIELD_NUMBER;
        hash = (53 * hash) + getRelativeHumidity().hashCode();
      }
      if (hasVariance()) {
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getVariance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Basic.Humidity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Humidity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Humidity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Humidity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Humidity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Humidity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Humidity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Humidity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Humidity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Basic.Humidity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Humidity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Humidity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Basic.Humidity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Humidity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Humidity)
        choreo.Basic.HumidityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Basic.internal_static_choreo_Humidity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Basic.internal_static_choreo_Humidity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Basic.Humidity.class, choreo.Basic.Humidity.Builder.class);
      }

      // Construct using choreo.Basic.Humidity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (relativeHumidityBuilder_ == null) {
          relativeHumidity_ = null;
        } else {
          relativeHumidity_ = null;
          relativeHumidityBuilder_ = null;
        }
        if (varianceBuilder_ == null) {
          variance_ = null;
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Basic.internal_static_choreo_Humidity_descriptor;
      }

      public choreo.Basic.Humidity getDefaultInstanceForType() {
        return choreo.Basic.Humidity.getDefaultInstance();
      }

      public choreo.Basic.Humidity build() {
        choreo.Basic.Humidity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Basic.Humidity buildPartial() {
        choreo.Basic.Humidity result = new choreo.Basic.Humidity(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (relativeHumidityBuilder_ == null) {
          result.relativeHumidity_ = relativeHumidity_;
        } else {
          result.relativeHumidity_ = relativeHumidityBuilder_.build();
        }
        if (varianceBuilder_ == null) {
          result.variance_ = variance_;
        } else {
          result.variance_ = varianceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Basic.Humidity) {
          return mergeFrom((choreo.Basic.Humidity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Basic.Humidity other) {
        if (other == choreo.Basic.Humidity.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasRelativeHumidity()) {
          mergeRelativeHumidity(other.getRelativeHumidity());
        }
        if (other.hasVariance()) {
          mergeVariance(other.getVariance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Basic.Humidity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Basic.Humidity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float64 relativeHumidity_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> relativeHumidityBuilder_;
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public boolean hasRelativeHumidity() {
        return relativeHumidityBuilder_ != null || relativeHumidity_ != null;
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public choreo.FloatOuterClass.Float64 getRelativeHumidity() {
        if (relativeHumidityBuilder_ == null) {
          return relativeHumidity_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : relativeHumidity_;
        } else {
          return relativeHumidityBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public Builder setRelativeHumidity(choreo.FloatOuterClass.Float64 value) {
        if (relativeHumidityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relativeHumidity_ = value;
          onChanged();
        } else {
          relativeHumidityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public Builder setRelativeHumidity(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (relativeHumidityBuilder_ == null) {
          relativeHumidity_ = builderForValue.build();
          onChanged();
        } else {
          relativeHumidityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public Builder mergeRelativeHumidity(choreo.FloatOuterClass.Float64 value) {
        if (relativeHumidityBuilder_ == null) {
          if (relativeHumidity_ != null) {
            relativeHumidity_ =
              choreo.FloatOuterClass.Float64.newBuilder(relativeHumidity_).mergeFrom(value).buildPartial();
          } else {
            relativeHumidity_ = value;
          }
          onChanged();
        } else {
          relativeHumidityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public Builder clearRelativeHumidity() {
        if (relativeHumidityBuilder_ == null) {
          relativeHumidity_ = null;
          onChanged();
        } else {
          relativeHumidity_ = null;
          relativeHumidityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getRelativeHumidityBuilder() {
        
        onChanged();
        return getRelativeHumidityFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getRelativeHumidityOrBuilder() {
        if (relativeHumidityBuilder_ != null) {
          return relativeHumidityBuilder_.getMessageOrBuilder();
        } else {
          return relativeHumidity_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : relativeHumidity_;
        }
      }
      /**
       * <code>.choreo.Float64 relative_humidity = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getRelativeHumidityFieldBuilder() {
        if (relativeHumidityBuilder_ == null) {
          relativeHumidityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getRelativeHumidity(),
                  getParentForChildren(),
                  isClean());
          relativeHumidity_ = null;
        }
        return relativeHumidityBuilder_;
      }

      private choreo.FloatOuterClass.Float64 variance_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> varianceBuilder_;
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public boolean hasVariance() {
        return varianceBuilder_ != null || variance_ != null;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64 getVariance() {
        if (varianceBuilder_ == null) {
          return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        } else {
          return varianceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variance_ = value;
          onChanged();
        } else {
          varianceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (varianceBuilder_ == null) {
          variance_ = builderForValue.build();
          onChanged();
        } else {
          varianceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder mergeVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (variance_ != null) {
            variance_ =
              choreo.FloatOuterClass.Float64.newBuilder(variance_).mergeFrom(value).buildPartial();
          } else {
            variance_ = value;
          }
          onChanged();
        } else {
          varianceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder clearVariance() {
        if (varianceBuilder_ == null) {
          variance_ = null;
          onChanged();
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getVarianceBuilder() {
        
        onChanged();
        return getVarianceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
        if (varianceBuilder_ != null) {
          return varianceBuilder_.getMessageOrBuilder();
        } else {
          return variance_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getVarianceFieldBuilder() {
        if (varianceBuilder_ == null) {
          varianceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getVariance(),
                  getParentForChildren(),
                  isClean());
          variance_ = null;
        }
        return varianceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Humidity)
    }

    // @@protoc_insertion_point(class_scope:choreo.Humidity)
    private static final choreo.Basic.Humidity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Basic.Humidity();
    }

    public static choreo.Basic.Humidity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Humidity>
        PARSER = new com.google.protobuf.AbstractParser<Humidity>() {
      public Humidity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Humidity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Humidity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Humidity> getParserForType() {
      return PARSER;
    }

    public choreo.Basic.Humidity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TemperatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Temperature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    boolean hasTemperature();
    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    choreo.FloatOuterClass.Float64 getTemperature();
    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getTemperatureOrBuilder();

    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    boolean hasVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64 getVariance();
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Temperature}
   */
  public  static final class Temperature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Temperature)
      TemperatureOrBuilder {
    // Use Temperature.newBuilder() to construct.
    private Temperature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Temperature() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Temperature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (temperature_ != null) {
                subBuilder = temperature_.toBuilder();
              }
              temperature_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(temperature_);
                temperature_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float64.Builder subBuilder = null;
              if (variance_ != null) {
                subBuilder = variance_.toBuilder();
              }
              variance_ = input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(variance_);
                variance_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Basic.internal_static_choreo_Temperature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Basic.internal_static_choreo_Temperature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Basic.Temperature.class, choreo.Basic.Temperature.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private choreo.FloatOuterClass.Float64 temperature_;
    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    public boolean hasTemperature() {
      return temperature_ != null;
    }
    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    public choreo.FloatOuterClass.Float64 getTemperature() {
      return temperature_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : temperature_;
    }
    /**
     * <code>.choreo.Float64 temperature = 2;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getTemperatureOrBuilder() {
      return getTemperature();
    }

    public static final int VARIANCE_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float64 variance_;
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public boolean hasVariance() {
      return variance_ != null;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64 getVariance() {
      return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
    }
    /**
     * <code>.choreo.Float64 variance = 3;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
      return getVariance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (temperature_ != null) {
        output.writeMessage(2, getTemperature());
      }
      if (variance_ != null) {
        output.writeMessage(3, getVariance());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (temperature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTemperature());
      }
      if (variance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVariance());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Basic.Temperature)) {
        return super.equals(obj);
      }
      choreo.Basic.Temperature other = (choreo.Basic.Temperature) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasTemperature() == other.hasTemperature());
      if (hasTemperature()) {
        result = result && getTemperature()
            .equals(other.getTemperature());
      }
      result = result && (hasVariance() == other.hasVariance());
      if (hasVariance()) {
        result = result && getVariance()
            .equals(other.getVariance());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasTemperature()) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperature().hashCode();
      }
      if (hasVariance()) {
        hash = (37 * hash) + VARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getVariance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Basic.Temperature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Temperature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Temperature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Temperature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Temperature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.Temperature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.Temperature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Temperature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Temperature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Basic.Temperature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.Temperature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.Temperature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Basic.Temperature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Temperature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Temperature)
        choreo.Basic.TemperatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Basic.internal_static_choreo_Temperature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Basic.internal_static_choreo_Temperature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Basic.Temperature.class, choreo.Basic.Temperature.Builder.class);
      }

      // Construct using choreo.Basic.Temperature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (temperatureBuilder_ == null) {
          temperature_ = null;
        } else {
          temperature_ = null;
          temperatureBuilder_ = null;
        }
        if (varianceBuilder_ == null) {
          variance_ = null;
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Basic.internal_static_choreo_Temperature_descriptor;
      }

      public choreo.Basic.Temperature getDefaultInstanceForType() {
        return choreo.Basic.Temperature.getDefaultInstance();
      }

      public choreo.Basic.Temperature build() {
        choreo.Basic.Temperature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Basic.Temperature buildPartial() {
        choreo.Basic.Temperature result = new choreo.Basic.Temperature(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (temperatureBuilder_ == null) {
          result.temperature_ = temperature_;
        } else {
          result.temperature_ = temperatureBuilder_.build();
        }
        if (varianceBuilder_ == null) {
          result.variance_ = variance_;
        } else {
          result.variance_ = varianceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Basic.Temperature) {
          return mergeFrom((choreo.Basic.Temperature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Basic.Temperature other) {
        if (other == choreo.Basic.Temperature.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasTemperature()) {
          mergeTemperature(other.getTemperature());
        }
        if (other.hasVariance()) {
          mergeVariance(other.getVariance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Basic.Temperature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Basic.Temperature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.FloatOuterClass.Float64 temperature_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> temperatureBuilder_;
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public boolean hasTemperature() {
        return temperatureBuilder_ != null || temperature_ != null;
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public choreo.FloatOuterClass.Float64 getTemperature() {
        if (temperatureBuilder_ == null) {
          return temperature_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : temperature_;
        } else {
          return temperatureBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public Builder setTemperature(choreo.FloatOuterClass.Float64 value) {
        if (temperatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          temperature_ = value;
          onChanged();
        } else {
          temperatureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public Builder setTemperature(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (temperatureBuilder_ == null) {
          temperature_ = builderForValue.build();
          onChanged();
        } else {
          temperatureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public Builder mergeTemperature(choreo.FloatOuterClass.Float64 value) {
        if (temperatureBuilder_ == null) {
          if (temperature_ != null) {
            temperature_ =
              choreo.FloatOuterClass.Float64.newBuilder(temperature_).mergeFrom(value).buildPartial();
          } else {
            temperature_ = value;
          }
          onChanged();
        } else {
          temperatureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public Builder clearTemperature() {
        if (temperatureBuilder_ == null) {
          temperature_ = null;
          onChanged();
        } else {
          temperature_ = null;
          temperatureBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getTemperatureBuilder() {
        
        onChanged();
        return getTemperatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getTemperatureOrBuilder() {
        if (temperatureBuilder_ != null) {
          return temperatureBuilder_.getMessageOrBuilder();
        } else {
          return temperature_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : temperature_;
        }
      }
      /**
       * <code>.choreo.Float64 temperature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getTemperatureFieldBuilder() {
        if (temperatureBuilder_ == null) {
          temperatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getTemperature(),
                  getParentForChildren(),
                  isClean());
          temperature_ = null;
        }
        return temperatureBuilder_;
      }

      private choreo.FloatOuterClass.Float64 variance_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> varianceBuilder_;
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public boolean hasVariance() {
        return varianceBuilder_ != null || variance_ != null;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64 getVariance() {
        if (varianceBuilder_ == null) {
          return variance_ == null ? choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        } else {
          return varianceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variance_ = value;
          onChanged();
        } else {
          varianceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder setVariance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (varianceBuilder_ == null) {
          variance_ = builderForValue.build();
          onChanged();
        } else {
          varianceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder mergeVariance(choreo.FloatOuterClass.Float64 value) {
        if (varianceBuilder_ == null) {
          if (variance_ != null) {
            variance_ =
              choreo.FloatOuterClass.Float64.newBuilder(variance_).mergeFrom(value).buildPartial();
          } else {
            variance_ = value;
          }
          onChanged();
        } else {
          varianceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public Builder clearVariance() {
        if (varianceBuilder_ == null) {
          variance_ = null;
          onChanged();
        } else {
          variance_ = null;
          varianceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getVarianceBuilder() {
        
        onChanged();
        return getVarianceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getVarianceOrBuilder() {
        if (varianceBuilder_ != null) {
          return varianceBuilder_.getMessageOrBuilder();
        } else {
          return variance_ == null ?
              choreo.FloatOuterClass.Float64.getDefaultInstance() : variance_;
        }
      }
      /**
       * <code>.choreo.Float64 variance = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getVarianceFieldBuilder() {
        if (varianceBuilder_ == null) {
          varianceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  getVariance(),
                  getParentForChildren(),
                  isClean());
          variance_ = null;
        }
        return varianceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Temperature)
    }

    // @@protoc_insertion_point(class_scope:choreo.Temperature)
    private static final choreo.Basic.Temperature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Basic.Temperature();
    }

    public static choreo.Basic.Temperature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Temperature>
        PARSER = new com.google.protobuf.AbstractParser<Temperature>() {
      public Temperature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Temperature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Temperature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Temperature> getParserForType() {
      return PARSER;
    }

    public choreo.Basic.Temperature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.TimeReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    boolean hasTimeRef();
    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    com.google.protobuf.Timestamp getTimeRef();
    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimeRefOrBuilder();

    /**
     * <code>.choreo.String source = 3;</code>
     */
    boolean hasSource();
    /**
     * <code>.choreo.String source = 3;</code>
     */
    choreo.StringOuterClass.String getSource();
    /**
     * <code>.choreo.String source = 3;</code>
     */
    choreo.StringOuterClass.StringOrBuilder getSourceOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.TimeReference}
   */
  public  static final class TimeReference extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.TimeReference)
      TimeReferenceOrBuilder {
    // Use TimeReference.newBuilder() to construct.
    private TimeReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeReference() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TimeReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timeRef_ != null) {
                subBuilder = timeRef_.toBuilder();
              }
              timeRef_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeRef_);
                timeRef_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.StringOuterClass.String.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(choreo.StringOuterClass.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Basic.internal_static_choreo_TimeReference_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Basic.internal_static_choreo_TimeReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Basic.TimeReference.class, choreo.Basic.TimeReference.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int TIME_REF_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp timeRef_;
    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    public boolean hasTimeRef() {
      return timeRef_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    public com.google.protobuf.Timestamp getTimeRef() {
      return timeRef_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timeRef_;
    }
    /**
     * <code>.google.protobuf.Timestamp time_ref = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimeRefOrBuilder() {
      return getTimeRef();
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private choreo.StringOuterClass.String source_;
    /**
     * <code>.choreo.String source = 3;</code>
     */
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <code>.choreo.String source = 3;</code>
     */
    public choreo.StringOuterClass.String getSource() {
      return source_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : source_;
    }
    /**
     * <code>.choreo.String source = 3;</code>
     */
    public choreo.StringOuterClass.StringOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (timeRef_ != null) {
        output.writeMessage(2, getTimeRef());
      }
      if (source_ != null) {
        output.writeMessage(3, getSource());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (timeRef_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTimeRef());
      }
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSource());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Basic.TimeReference)) {
        return super.equals(obj);
      }
      choreo.Basic.TimeReference other = (choreo.Basic.TimeReference) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasTimeRef() == other.hasTimeRef());
      if (hasTimeRef()) {
        result = result && getTimeRef()
            .equals(other.getTimeRef());
      }
      result = result && (hasSource() == other.hasSource());
      if (hasSource()) {
        result = result && getSource()
            .equals(other.getSource());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasTimeRef()) {
        hash = (37 * hash) + TIME_REF_FIELD_NUMBER;
        hash = (53 * hash) + getTimeRef().hashCode();
      }
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Basic.TimeReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.TimeReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.TimeReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.TimeReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.TimeReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Basic.TimeReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Basic.TimeReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.TimeReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.TimeReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Basic.TimeReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Basic.TimeReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Basic.TimeReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Basic.TimeReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.TimeReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.TimeReference)
        choreo.Basic.TimeReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Basic.internal_static_choreo_TimeReference_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Basic.internal_static_choreo_TimeReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Basic.TimeReference.class, choreo.Basic.TimeReference.Builder.class);
      }

      // Construct using choreo.Basic.TimeReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (timeRefBuilder_ == null) {
          timeRef_ = null;
        } else {
          timeRef_ = null;
          timeRefBuilder_ = null;
        }
        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Basic.internal_static_choreo_TimeReference_descriptor;
      }

      public choreo.Basic.TimeReference getDefaultInstanceForType() {
        return choreo.Basic.TimeReference.getDefaultInstance();
      }

      public choreo.Basic.TimeReference build() {
        choreo.Basic.TimeReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Basic.TimeReference buildPartial() {
        choreo.Basic.TimeReference result = new choreo.Basic.TimeReference(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (timeRefBuilder_ == null) {
          result.timeRef_ = timeRef_;
        } else {
          result.timeRef_ = timeRefBuilder_.build();
        }
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Basic.TimeReference) {
          return mergeFrom((choreo.Basic.TimeReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Basic.TimeReference other) {
        if (other == choreo.Basic.TimeReference.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasTimeRef()) {
          mergeTimeRef(other.getTimeRef());
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Basic.TimeReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Basic.TimeReference) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private com.google.protobuf.Timestamp timeRef_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timeRefBuilder_;
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public boolean hasTimeRef() {
        return timeRefBuilder_ != null || timeRef_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public com.google.protobuf.Timestamp getTimeRef() {
        if (timeRefBuilder_ == null) {
          return timeRef_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timeRef_;
        } else {
          return timeRefBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public Builder setTimeRef(com.google.protobuf.Timestamp value) {
        if (timeRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeRef_ = value;
          onChanged();
        } else {
          timeRefBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public Builder setTimeRef(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timeRefBuilder_ == null) {
          timeRef_ = builderForValue.build();
          onChanged();
        } else {
          timeRefBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public Builder mergeTimeRef(com.google.protobuf.Timestamp value) {
        if (timeRefBuilder_ == null) {
          if (timeRef_ != null) {
            timeRef_ =
              com.google.protobuf.Timestamp.newBuilder(timeRef_).mergeFrom(value).buildPartial();
          } else {
            timeRef_ = value;
          }
          onChanged();
        } else {
          timeRefBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public Builder clearTimeRef() {
        if (timeRefBuilder_ == null) {
          timeRef_ = null;
          onChanged();
        } else {
          timeRef_ = null;
          timeRefBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimeRefBuilder() {
        
        onChanged();
        return getTimeRefFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimeRefOrBuilder() {
        if (timeRefBuilder_ != null) {
          return timeRefBuilder_.getMessageOrBuilder();
        } else {
          return timeRef_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timeRef_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp time_ref = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimeRefFieldBuilder() {
        if (timeRefBuilder_ == null) {
          timeRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimeRef(),
                  getParentForChildren(),
                  isClean());
          timeRef_ = null;
        }
        return timeRefBuilder_;
      }

      private choreo.StringOuterClass.String source_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> sourceBuilder_;
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public choreo.StringOuterClass.String getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? choreo.StringOuterClass.String.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public Builder setSource(choreo.StringOuterClass.String value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public Builder setSource(
          choreo.StringOuterClass.String.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public Builder mergeSource(choreo.StringOuterClass.String value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              choreo.StringOuterClass.String.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public choreo.StringOuterClass.String.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      public choreo.StringOuterClass.StringOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              choreo.StringOuterClass.String.getDefaultInstance() : source_;
        }
      }
      /**
       * <code>.choreo.String source = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.TimeReference)
    }

    // @@protoc_insertion_point(class_scope:choreo.TimeReference)
    private static final choreo.Basic.TimeReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Basic.TimeReference();
    }

    public static choreo.Basic.TimeReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimeReference>
        PARSER = new com.google.protobuf.AbstractParser<TimeReference>() {
      public TimeReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimeReference(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeReference> getParserForType() {
      return PARSER;
    }

    public choreo.Basic.TimeReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_FluidPressure_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_FluidPressure_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Illuminance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Illuminance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Humidity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Humidity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Temperature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Temperature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_TimeReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_TimeReference_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022sensor/basic.proto\022\006choreo\032\037google/pro" +
      "tobuf/timestamp.proto\032\025primitive/float.p" +
      "roto\032\026primitive/header.proto\032\026primitive/" +
      "string.proto\"{\n\rFluidPressure\022\036\n\006header\030" +
      "\001 \001(\0132\016.choreo.Header\022\'\n\016fluid_pressure\030" +
      "\002 \001(\0132\017.choreo.Float64\022!\n\010variance\030\003 \001(\013" +
      "2\017.choreo.Float64\"v\n\013Illuminance\022\036\n\006head" +
      "er\030\001 \001(\0132\016.choreo.Header\022$\n\013illuminance\030" +
      "\002 \001(\0132\017.choreo.Float64\022!\n\010variance\030\003 \001(\013" +
      "2\017.choreo.Float64\"y\n\010Humidity\022\036\n\006header\030",
      "\001 \001(\0132\016.choreo.Header\022*\n\021relative_humidi" +
      "ty\030\002 \001(\0132\017.choreo.Float64\022!\n\010variance\030\003 " +
      "\001(\0132\017.choreo.Float64\"v\n\013Temperature\022\036\n\006h" +
      "eader\030\001 \001(\0132\016.choreo.Header\022$\n\013temperatu" +
      "re\030\002 \001(\0132\017.choreo.Float64\022!\n\010variance\030\003 " +
      "\001(\0132\017.choreo.Float64\"}\n\rTimeReference\022\036\n" +
      "\006header\030\001 \001(\0132\016.choreo.Header\022,\n\010time_re" +
      "f\030\002 \001(\0132\032.google.protobuf.Timestamp\022\036\n\006s" +
      "ource\030\003 \001(\0132\016.choreo.Stringb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          choreo.FloatOuterClass.getDescriptor(),
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.StringOuterClass.getDescriptor(),
        }, assigner);
    internal_static_choreo_FluidPressure_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_FluidPressure_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_FluidPressure_descriptor,
        new java.lang.String[] { "Header", "FluidPressure", "Variance", });
    internal_static_choreo_Illuminance_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_Illuminance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Illuminance_descriptor,
        new java.lang.String[] { "Header", "Illuminance", "Variance", });
    internal_static_choreo_Humidity_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_choreo_Humidity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Humidity_descriptor,
        new java.lang.String[] { "Header", "RelativeHumidity", "Variance", });
    internal_static_choreo_Temperature_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_choreo_Temperature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Temperature_descriptor,
        new java.lang.String[] { "Header", "Temperature", "Variance", });
    internal_static_choreo_TimeReference_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_choreo_TimeReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_TimeReference_descriptor,
        new java.lang.String[] { "Header", "TimeRef", "Source", });
    com.google.protobuf.TimestampProto.getDescriptor();
    choreo.FloatOuterClass.getDescriptor();
    choreo.HeaderOuterClass.getDescriptor();
    choreo.StringOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
