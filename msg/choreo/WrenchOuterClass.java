// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geometric/wrench.proto

package choreo;

public final class WrenchOuterClass {
  private WrenchOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WrenchStampedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.WrenchStamped)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    boolean hasWrench();
    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    choreo.WrenchOuterClass.Wrench getWrench();
    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    choreo.WrenchOuterClass.WrenchOrBuilder getWrenchOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.WrenchStamped}
   */
  public  static final class WrenchStamped extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.WrenchStamped)
      WrenchStampedOrBuilder {
    // Use WrenchStamped.newBuilder() to construct.
    private WrenchStamped(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WrenchStamped() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private WrenchStamped(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.WrenchOuterClass.Wrench.Builder subBuilder = null;
              if (wrench_ != null) {
                subBuilder = wrench_.toBuilder();
              }
              wrench_ = input.readMessage(choreo.WrenchOuterClass.Wrench.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wrench_);
                wrench_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.WrenchOuterClass.internal_static_choreo_WrenchStamped_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.WrenchOuterClass.internal_static_choreo_WrenchStamped_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.WrenchOuterClass.WrenchStamped.class, choreo.WrenchOuterClass.WrenchStamped.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int WRENCH_FIELD_NUMBER = 2;
    private choreo.WrenchOuterClass.Wrench wrench_;
    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    public boolean hasWrench() {
      return wrench_ != null;
    }
    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    public choreo.WrenchOuterClass.Wrench getWrench() {
      return wrench_ == null ? choreo.WrenchOuterClass.Wrench.getDefaultInstance() : wrench_;
    }
    /**
     * <code>.choreo.Wrench wrench = 2;</code>
     */
    public choreo.WrenchOuterClass.WrenchOrBuilder getWrenchOrBuilder() {
      return getWrench();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (wrench_ != null) {
        output.writeMessage(2, getWrench());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (wrench_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWrench());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.WrenchOuterClass.WrenchStamped)) {
        return super.equals(obj);
      }
      choreo.WrenchOuterClass.WrenchStamped other = (choreo.WrenchOuterClass.WrenchStamped) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasWrench() == other.hasWrench());
      if (hasWrench()) {
        result = result && getWrench()
            .equals(other.getWrench());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasWrench()) {
        hash = (37 * hash) + WRENCH_FIELD_NUMBER;
        hash = (53 * hash) + getWrench().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.WrenchStamped parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.WrenchOuterClass.WrenchStamped prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.WrenchStamped}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.WrenchStamped)
        choreo.WrenchOuterClass.WrenchStampedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.WrenchOuterClass.internal_static_choreo_WrenchStamped_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.WrenchOuterClass.internal_static_choreo_WrenchStamped_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.WrenchOuterClass.WrenchStamped.class, choreo.WrenchOuterClass.WrenchStamped.Builder.class);
      }

      // Construct using choreo.WrenchOuterClass.WrenchStamped.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (wrenchBuilder_ == null) {
          wrench_ = null;
        } else {
          wrench_ = null;
          wrenchBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.WrenchOuterClass.internal_static_choreo_WrenchStamped_descriptor;
      }

      public choreo.WrenchOuterClass.WrenchStamped getDefaultInstanceForType() {
        return choreo.WrenchOuterClass.WrenchStamped.getDefaultInstance();
      }

      public choreo.WrenchOuterClass.WrenchStamped build() {
        choreo.WrenchOuterClass.WrenchStamped result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.WrenchOuterClass.WrenchStamped buildPartial() {
        choreo.WrenchOuterClass.WrenchStamped result = new choreo.WrenchOuterClass.WrenchStamped(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (wrenchBuilder_ == null) {
          result.wrench_ = wrench_;
        } else {
          result.wrench_ = wrenchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.WrenchOuterClass.WrenchStamped) {
          return mergeFrom((choreo.WrenchOuterClass.WrenchStamped)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.WrenchOuterClass.WrenchStamped other) {
        if (other == choreo.WrenchOuterClass.WrenchStamped.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasWrench()) {
          mergeWrench(other.getWrench());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.WrenchOuterClass.WrenchStamped parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.WrenchOuterClass.WrenchStamped) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.WrenchOuterClass.Wrench wrench_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder> wrenchBuilder_;
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public boolean hasWrench() {
        return wrenchBuilder_ != null || wrench_ != null;
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public choreo.WrenchOuterClass.Wrench getWrench() {
        if (wrenchBuilder_ == null) {
          return wrench_ == null ? choreo.WrenchOuterClass.Wrench.getDefaultInstance() : wrench_;
        } else {
          return wrenchBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public Builder setWrench(choreo.WrenchOuterClass.Wrench value) {
        if (wrenchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wrench_ = value;
          onChanged();
        } else {
          wrenchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public Builder setWrench(
          choreo.WrenchOuterClass.Wrench.Builder builderForValue) {
        if (wrenchBuilder_ == null) {
          wrench_ = builderForValue.build();
          onChanged();
        } else {
          wrenchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public Builder mergeWrench(choreo.WrenchOuterClass.Wrench value) {
        if (wrenchBuilder_ == null) {
          if (wrench_ != null) {
            wrench_ =
              choreo.WrenchOuterClass.Wrench.newBuilder(wrench_).mergeFrom(value).buildPartial();
          } else {
            wrench_ = value;
          }
          onChanged();
        } else {
          wrenchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public Builder clearWrench() {
        if (wrenchBuilder_ == null) {
          wrench_ = null;
          onChanged();
        } else {
          wrench_ = null;
          wrenchBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public choreo.WrenchOuterClass.Wrench.Builder getWrenchBuilder() {
        
        onChanged();
        return getWrenchFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      public choreo.WrenchOuterClass.WrenchOrBuilder getWrenchOrBuilder() {
        if (wrenchBuilder_ != null) {
          return wrenchBuilder_.getMessageOrBuilder();
        } else {
          return wrench_ == null ?
              choreo.WrenchOuterClass.Wrench.getDefaultInstance() : wrench_;
        }
      }
      /**
       * <code>.choreo.Wrench wrench = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder> 
          getWrenchFieldBuilder() {
        if (wrenchBuilder_ == null) {
          wrenchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder>(
                  getWrench(),
                  getParentForChildren(),
                  isClean());
          wrench_ = null;
        }
        return wrenchBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.WrenchStamped)
    }

    // @@protoc_insertion_point(class_scope:choreo.WrenchStamped)
    private static final choreo.WrenchOuterClass.WrenchStamped DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.WrenchOuterClass.WrenchStamped();
    }

    public static choreo.WrenchOuterClass.WrenchStamped getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WrenchStamped>
        PARSER = new com.google.protobuf.AbstractParser<WrenchStamped>() {
      public WrenchStamped parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new WrenchStamped(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WrenchStamped> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WrenchStamped> getParserForType() {
      return PARSER;
    }

    public choreo.WrenchOuterClass.WrenchStamped getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WrenchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Wrench)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    boolean hasForce();
    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    choreo.Vector.Vector3 getForce();
    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    choreo.Vector.Vector3OrBuilder getForceOrBuilder();

    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    boolean hasTorque();
    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    choreo.Vector.Vector3 getTorque();
    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    choreo.Vector.Vector3OrBuilder getTorqueOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Wrench}
   */
  public  static final class Wrench extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Wrench)
      WrenchOrBuilder {
    // Use Wrench.newBuilder() to construct.
    private Wrench(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Wrench() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Wrench(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.Vector.Vector3.Builder subBuilder = null;
              if (force_ != null) {
                subBuilder = force_.toBuilder();
              }
              force_ = input.readMessage(choreo.Vector.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(force_);
                force_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.Vector.Vector3.Builder subBuilder = null;
              if (torque_ != null) {
                subBuilder = torque_.toBuilder();
              }
              torque_ = input.readMessage(choreo.Vector.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(torque_);
                torque_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.WrenchOuterClass.internal_static_choreo_Wrench_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.WrenchOuterClass.internal_static_choreo_Wrench_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.WrenchOuterClass.Wrench.class, choreo.WrenchOuterClass.Wrench.Builder.class);
    }

    public static final int FORCE_FIELD_NUMBER = 1;
    private choreo.Vector.Vector3 force_;
    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    public boolean hasForce() {
      return force_ != null;
    }
    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    public choreo.Vector.Vector3 getForce() {
      return force_ == null ? choreo.Vector.Vector3.getDefaultInstance() : force_;
    }
    /**
     * <code>.choreo.Vector3 force = 1;</code>
     */
    public choreo.Vector.Vector3OrBuilder getForceOrBuilder() {
      return getForce();
    }

    public static final int TORQUE_FIELD_NUMBER = 2;
    private choreo.Vector.Vector3 torque_;
    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    public boolean hasTorque() {
      return torque_ != null;
    }
    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    public choreo.Vector.Vector3 getTorque() {
      return torque_ == null ? choreo.Vector.Vector3.getDefaultInstance() : torque_;
    }
    /**
     * <code>.choreo.Vector3 torque = 2;</code>
     */
    public choreo.Vector.Vector3OrBuilder getTorqueOrBuilder() {
      return getTorque();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (force_ != null) {
        output.writeMessage(1, getForce());
      }
      if (torque_ != null) {
        output.writeMessage(2, getTorque());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (force_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getForce());
      }
      if (torque_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTorque());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.WrenchOuterClass.Wrench)) {
        return super.equals(obj);
      }
      choreo.WrenchOuterClass.Wrench other = (choreo.WrenchOuterClass.Wrench) obj;

      boolean result = true;
      result = result && (hasForce() == other.hasForce());
      if (hasForce()) {
        result = result && getForce()
            .equals(other.getForce());
      }
      result = result && (hasTorque() == other.hasTorque());
      if (hasTorque()) {
        result = result && getTorque()
            .equals(other.getTorque());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasForce()) {
        hash = (37 * hash) + FORCE_FIELD_NUMBER;
        hash = (53 * hash) + getForce().hashCode();
      }
      if (hasTorque()) {
        hash = (37 * hash) + TORQUE_FIELD_NUMBER;
        hash = (53 * hash) + getTorque().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.WrenchOuterClass.Wrench parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.Wrench parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.Wrench parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.WrenchOuterClass.Wrench parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.WrenchOuterClass.Wrench prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Wrench}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Wrench)
        choreo.WrenchOuterClass.WrenchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.WrenchOuterClass.internal_static_choreo_Wrench_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.WrenchOuterClass.internal_static_choreo_Wrench_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.WrenchOuterClass.Wrench.class, choreo.WrenchOuterClass.Wrench.Builder.class);
      }

      // Construct using choreo.WrenchOuterClass.Wrench.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (forceBuilder_ == null) {
          force_ = null;
        } else {
          force_ = null;
          forceBuilder_ = null;
        }
        if (torqueBuilder_ == null) {
          torque_ = null;
        } else {
          torque_ = null;
          torqueBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.WrenchOuterClass.internal_static_choreo_Wrench_descriptor;
      }

      public choreo.WrenchOuterClass.Wrench getDefaultInstanceForType() {
        return choreo.WrenchOuterClass.Wrench.getDefaultInstance();
      }

      public choreo.WrenchOuterClass.Wrench build() {
        choreo.WrenchOuterClass.Wrench result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.WrenchOuterClass.Wrench buildPartial() {
        choreo.WrenchOuterClass.Wrench result = new choreo.WrenchOuterClass.Wrench(this);
        if (forceBuilder_ == null) {
          result.force_ = force_;
        } else {
          result.force_ = forceBuilder_.build();
        }
        if (torqueBuilder_ == null) {
          result.torque_ = torque_;
        } else {
          result.torque_ = torqueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.WrenchOuterClass.Wrench) {
          return mergeFrom((choreo.WrenchOuterClass.Wrench)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.WrenchOuterClass.Wrench other) {
        if (other == choreo.WrenchOuterClass.Wrench.getDefaultInstance()) return this;
        if (other.hasForce()) {
          mergeForce(other.getForce());
        }
        if (other.hasTorque()) {
          mergeTorque(other.getTorque());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.WrenchOuterClass.Wrench parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.WrenchOuterClass.Wrench) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.Vector.Vector3 force_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> forceBuilder_;
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public boolean hasForce() {
        return forceBuilder_ != null || force_ != null;
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public choreo.Vector.Vector3 getForce() {
        if (forceBuilder_ == null) {
          return force_ == null ? choreo.Vector.Vector3.getDefaultInstance() : force_;
        } else {
          return forceBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public Builder setForce(choreo.Vector.Vector3 value) {
        if (forceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          force_ = value;
          onChanged();
        } else {
          forceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public Builder setForce(
          choreo.Vector.Vector3.Builder builderForValue) {
        if (forceBuilder_ == null) {
          force_ = builderForValue.build();
          onChanged();
        } else {
          forceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public Builder mergeForce(choreo.Vector.Vector3 value) {
        if (forceBuilder_ == null) {
          if (force_ != null) {
            force_ =
              choreo.Vector.Vector3.newBuilder(force_).mergeFrom(value).buildPartial();
          } else {
            force_ = value;
          }
          onChanged();
        } else {
          forceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public Builder clearForce() {
        if (forceBuilder_ == null) {
          force_ = null;
          onChanged();
        } else {
          force_ = null;
          forceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public choreo.Vector.Vector3.Builder getForceBuilder() {
        
        onChanged();
        return getForceFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      public choreo.Vector.Vector3OrBuilder getForceOrBuilder() {
        if (forceBuilder_ != null) {
          return forceBuilder_.getMessageOrBuilder();
        } else {
          return force_ == null ?
              choreo.Vector.Vector3.getDefaultInstance() : force_;
        }
      }
      /**
       * <code>.choreo.Vector3 force = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> 
          getForceFieldBuilder() {
        if (forceBuilder_ == null) {
          forceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder>(
                  getForce(),
                  getParentForChildren(),
                  isClean());
          force_ = null;
        }
        return forceBuilder_;
      }

      private choreo.Vector.Vector3 torque_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> torqueBuilder_;
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public boolean hasTorque() {
        return torqueBuilder_ != null || torque_ != null;
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public choreo.Vector.Vector3 getTorque() {
        if (torqueBuilder_ == null) {
          return torque_ == null ? choreo.Vector.Vector3.getDefaultInstance() : torque_;
        } else {
          return torqueBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public Builder setTorque(choreo.Vector.Vector3 value) {
        if (torqueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          torque_ = value;
          onChanged();
        } else {
          torqueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public Builder setTorque(
          choreo.Vector.Vector3.Builder builderForValue) {
        if (torqueBuilder_ == null) {
          torque_ = builderForValue.build();
          onChanged();
        } else {
          torqueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public Builder mergeTorque(choreo.Vector.Vector3 value) {
        if (torqueBuilder_ == null) {
          if (torque_ != null) {
            torque_ =
              choreo.Vector.Vector3.newBuilder(torque_).mergeFrom(value).buildPartial();
          } else {
            torque_ = value;
          }
          onChanged();
        } else {
          torqueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public Builder clearTorque() {
        if (torqueBuilder_ == null) {
          torque_ = null;
          onChanged();
        } else {
          torque_ = null;
          torqueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public choreo.Vector.Vector3.Builder getTorqueBuilder() {
        
        onChanged();
        return getTorqueFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      public choreo.Vector.Vector3OrBuilder getTorqueOrBuilder() {
        if (torqueBuilder_ != null) {
          return torqueBuilder_.getMessageOrBuilder();
        } else {
          return torque_ == null ?
              choreo.Vector.Vector3.getDefaultInstance() : torque_;
        }
      }
      /**
       * <code>.choreo.Vector3 torque = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> 
          getTorqueFieldBuilder() {
        if (torqueBuilder_ == null) {
          torqueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder>(
                  getTorque(),
                  getParentForChildren(),
                  isClean());
          torque_ = null;
        }
        return torqueBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Wrench)
    }

    // @@protoc_insertion_point(class_scope:choreo.Wrench)
    private static final choreo.WrenchOuterClass.Wrench DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.WrenchOuterClass.Wrench();
    }

    public static choreo.WrenchOuterClass.Wrench getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Wrench>
        PARSER = new com.google.protobuf.AbstractParser<Wrench>() {
      public Wrench parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Wrench(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Wrench> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Wrench> getParserForType() {
      return PARSER;
    }

    public choreo.WrenchOuterClass.Wrench getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_WrenchStamped_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_WrenchStamped_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Wrench_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Wrench_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026geometric/wrench.proto\022\006choreo\032\026primit" +
      "ive/header.proto\032\026geometric/vector.proto" +
      "\"O\n\rWrenchStamped\022\036\n\006header\030\001 \001(\0132\016.chor" +
      "eo.Header\022\036\n\006wrench\030\002 \001(\0132\016.choreo.Wrenc" +
      "h\"I\n\006Wrench\022\036\n\005force\030\001 \001(\0132\017.choreo.Vect" +
      "or3\022\037\n\006torque\030\002 \001(\0132\017.choreo.Vector3B+Z)" +
      "github.com/RobotStudio/choreo-msg/msg;ms" +
      "gb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.Vector.getDescriptor(),
        }, assigner);
    internal_static_choreo_WrenchStamped_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_WrenchStamped_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_WrenchStamped_descriptor,
        new java.lang.String[] { "Header", "Wrench", });
    internal_static_choreo_Wrench_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_Wrench_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Wrench_descriptor,
        new java.lang.String[] { "Force", "Torque", });
    choreo.HeaderOuterClass.getDescriptor();
    choreo.Vector.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
