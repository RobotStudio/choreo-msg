// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor/joint.proto

package choreo;

public final class Joint {
  private Joint() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JointStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.JointState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    java.util.List<choreo.StringOuterClass.String> 
        getNamesList();
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    choreo.StringOuterClass.String getNames(int index);
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    int getNamesCount();
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    java.util.List<? extends choreo.StringOuterClass.StringOrBuilder> 
        getNamesOrBuilderList();
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    choreo.StringOuterClass.StringOrBuilder getNamesOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float64> 
        getPositionsList();
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    choreo.FloatOuterClass.Float64 getPositions(int index);
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    int getPositionsCount();
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getPositionsOrBuilderList();
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getPositionsOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float64> 
        getVelocitiesList();
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    choreo.FloatOuterClass.Float64 getVelocities(int index);
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    int getVelocitiesCount();
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getVelocitiesOrBuilderList();
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getVelocitiesOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float64> 
        getEffortsList();
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    choreo.FloatOuterClass.Float64 getEfforts(int index);
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    int getEffortsCount();
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getEffortsOrBuilderList();
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getEffortsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.JointState}
   */
  public  static final class JointState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.JointState)
      JointStateOrBuilder {
    // Use JointState.newBuilder() to construct.
    private JointState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JointState() {
      names_ = java.util.Collections.emptyList();
      positions_ = java.util.Collections.emptyList();
      velocities_ = java.util.Collections.emptyList();
      efforts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private JointState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                names_ = new java.util.ArrayList<choreo.StringOuterClass.String>();
                mutable_bitField0_ |= 0x00000002;
              }
              names_.add(
                  input.readMessage(choreo.StringOuterClass.String.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                positions_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>();
                mutable_bitField0_ |= 0x00000004;
              }
              positions_.add(
                  input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                velocities_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>();
                mutable_bitField0_ |= 0x00000008;
              }
              velocities_.add(
                  input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                efforts_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>();
                mutable_bitField0_ |= 0x00000010;
              }
              efforts_.add(
                  input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          names_ = java.util.Collections.unmodifiableList(names_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          positions_ = java.util.Collections.unmodifiableList(positions_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          velocities_ = java.util.Collections.unmodifiableList(velocities_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          efforts_ = java.util.Collections.unmodifiableList(efforts_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Joint.internal_static_choreo_JointState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Joint.internal_static_choreo_JointState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Joint.JointState.class, choreo.Joint.JointState.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int NAMES_FIELD_NUMBER = 2;
    private java.util.List<choreo.StringOuterClass.String> names_;
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    public java.util.List<choreo.StringOuterClass.String> getNamesList() {
      return names_;
    }
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    public java.util.List<? extends choreo.StringOuterClass.StringOrBuilder> 
        getNamesOrBuilderList() {
      return names_;
    }
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    public int getNamesCount() {
      return names_.size();
    }
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    public choreo.StringOuterClass.String getNames(int index) {
      return names_.get(index);
    }
    /**
     * <code>repeated .choreo.String names = 2;</code>
     */
    public choreo.StringOuterClass.StringOrBuilder getNamesOrBuilder(
        int index) {
      return names_.get(index);
    }

    public static final int POSITIONS_FIELD_NUMBER = 3;
    private java.util.List<choreo.FloatOuterClass.Float64> positions_;
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float64> getPositionsList() {
      return positions_;
    }
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getPositionsOrBuilderList() {
      return positions_;
    }
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    public int getPositionsCount() {
      return positions_.size();
    }
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    public choreo.FloatOuterClass.Float64 getPositions(int index) {
      return positions_.get(index);
    }
    /**
     * <code>repeated .choreo.Float64 positions = 3;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getPositionsOrBuilder(
        int index) {
      return positions_.get(index);
    }

    public static final int VELOCITIES_FIELD_NUMBER = 4;
    private java.util.List<choreo.FloatOuterClass.Float64> velocities_;
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float64> getVelocitiesList() {
      return velocities_;
    }
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getVelocitiesOrBuilderList() {
      return velocities_;
    }
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    public int getVelocitiesCount() {
      return velocities_.size();
    }
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    public choreo.FloatOuterClass.Float64 getVelocities(int index) {
      return velocities_.get(index);
    }
    /**
     * <code>repeated .choreo.Float64 velocities = 4;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getVelocitiesOrBuilder(
        int index) {
      return velocities_.get(index);
    }

    public static final int EFFORTS_FIELD_NUMBER = 5;
    private java.util.List<choreo.FloatOuterClass.Float64> efforts_;
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float64> getEffortsList() {
      return efforts_;
    }
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getEffortsOrBuilderList() {
      return efforts_;
    }
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    public int getEffortsCount() {
      return efforts_.size();
    }
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    public choreo.FloatOuterClass.Float64 getEfforts(int index) {
      return efforts_.get(index);
    }
    /**
     * <code>repeated .choreo.Float64 efforts = 5;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getEffortsOrBuilder(
        int index) {
      return efforts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < names_.size(); i++) {
        output.writeMessage(2, names_.get(i));
      }
      for (int i = 0; i < positions_.size(); i++) {
        output.writeMessage(3, positions_.get(i));
      }
      for (int i = 0; i < velocities_.size(); i++) {
        output.writeMessage(4, velocities_.get(i));
      }
      for (int i = 0; i < efforts_.size(); i++) {
        output.writeMessage(5, efforts_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < names_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, names_.get(i));
      }
      for (int i = 0; i < positions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, positions_.get(i));
      }
      for (int i = 0; i < velocities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, velocities_.get(i));
      }
      for (int i = 0; i < efforts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, efforts_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Joint.JointState)) {
        return super.equals(obj);
      }
      choreo.Joint.JointState other = (choreo.Joint.JointState) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && getNamesList()
          .equals(other.getNamesList());
      result = result && getPositionsList()
          .equals(other.getPositionsList());
      result = result && getVelocitiesList()
          .equals(other.getVelocitiesList());
      result = result && getEffortsList()
          .equals(other.getEffortsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getNamesCount() > 0) {
        hash = (37 * hash) + NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getNamesList().hashCode();
      }
      if (getPositionsCount() > 0) {
        hash = (37 * hash) + POSITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPositionsList().hashCode();
      }
      if (getVelocitiesCount() > 0) {
        hash = (37 * hash) + VELOCITIES_FIELD_NUMBER;
        hash = (53 * hash) + getVelocitiesList().hashCode();
      }
      if (getEffortsCount() > 0) {
        hash = (37 * hash) + EFFORTS_FIELD_NUMBER;
        hash = (53 * hash) + getEffortsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Joint.JointState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.JointState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.JointState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.JointState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.JointState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.JointState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.JointState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joint.JointState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joint.JointState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Joint.JointState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joint.JointState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joint.JointState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Joint.JointState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.JointState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.JointState)
        choreo.Joint.JointStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Joint.internal_static_choreo_JointState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Joint.internal_static_choreo_JointState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Joint.JointState.class, choreo.Joint.JointState.Builder.class);
      }

      // Construct using choreo.Joint.JointState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNamesFieldBuilder();
          getPositionsFieldBuilder();
          getVelocitiesFieldBuilder();
          getEffortsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (namesBuilder_ == null) {
          names_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          namesBuilder_.clear();
        }
        if (positionsBuilder_ == null) {
          positions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          positionsBuilder_.clear();
        }
        if (velocitiesBuilder_ == null) {
          velocities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          velocitiesBuilder_.clear();
        }
        if (effortsBuilder_ == null) {
          efforts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          effortsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Joint.internal_static_choreo_JointState_descriptor;
      }

      public choreo.Joint.JointState getDefaultInstanceForType() {
        return choreo.Joint.JointState.getDefaultInstance();
      }

      public choreo.Joint.JointState build() {
        choreo.Joint.JointState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Joint.JointState buildPartial() {
        choreo.Joint.JointState result = new choreo.Joint.JointState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (namesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            names_ = java.util.Collections.unmodifiableList(names_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.names_ = names_;
        } else {
          result.names_ = namesBuilder_.build();
        }
        if (positionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            positions_ = java.util.Collections.unmodifiableList(positions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.positions_ = positions_;
        } else {
          result.positions_ = positionsBuilder_.build();
        }
        if (velocitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            velocities_ = java.util.Collections.unmodifiableList(velocities_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.velocities_ = velocities_;
        } else {
          result.velocities_ = velocitiesBuilder_.build();
        }
        if (effortsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            efforts_ = java.util.Collections.unmodifiableList(efforts_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.efforts_ = efforts_;
        } else {
          result.efforts_ = effortsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Joint.JointState) {
          return mergeFrom((choreo.Joint.JointState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Joint.JointState other) {
        if (other == choreo.Joint.JointState.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (namesBuilder_ == null) {
          if (!other.names_.isEmpty()) {
            if (names_.isEmpty()) {
              names_ = other.names_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNamesIsMutable();
              names_.addAll(other.names_);
            }
            onChanged();
          }
        } else {
          if (!other.names_.isEmpty()) {
            if (namesBuilder_.isEmpty()) {
              namesBuilder_.dispose();
              namesBuilder_ = null;
              names_ = other.names_;
              bitField0_ = (bitField0_ & ~0x00000002);
              namesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNamesFieldBuilder() : null;
            } else {
              namesBuilder_.addAllMessages(other.names_);
            }
          }
        }
        if (positionsBuilder_ == null) {
          if (!other.positions_.isEmpty()) {
            if (positions_.isEmpty()) {
              positions_ = other.positions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePositionsIsMutable();
              positions_.addAll(other.positions_);
            }
            onChanged();
          }
        } else {
          if (!other.positions_.isEmpty()) {
            if (positionsBuilder_.isEmpty()) {
              positionsBuilder_.dispose();
              positionsBuilder_ = null;
              positions_ = other.positions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              positionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPositionsFieldBuilder() : null;
            } else {
              positionsBuilder_.addAllMessages(other.positions_);
            }
          }
        }
        if (velocitiesBuilder_ == null) {
          if (!other.velocities_.isEmpty()) {
            if (velocities_.isEmpty()) {
              velocities_ = other.velocities_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureVelocitiesIsMutable();
              velocities_.addAll(other.velocities_);
            }
            onChanged();
          }
        } else {
          if (!other.velocities_.isEmpty()) {
            if (velocitiesBuilder_.isEmpty()) {
              velocitiesBuilder_.dispose();
              velocitiesBuilder_ = null;
              velocities_ = other.velocities_;
              bitField0_ = (bitField0_ & ~0x00000008);
              velocitiesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVelocitiesFieldBuilder() : null;
            } else {
              velocitiesBuilder_.addAllMessages(other.velocities_);
            }
          }
        }
        if (effortsBuilder_ == null) {
          if (!other.efforts_.isEmpty()) {
            if (efforts_.isEmpty()) {
              efforts_ = other.efforts_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureEffortsIsMutable();
              efforts_.addAll(other.efforts_);
            }
            onChanged();
          }
        } else {
          if (!other.efforts_.isEmpty()) {
            if (effortsBuilder_.isEmpty()) {
              effortsBuilder_.dispose();
              effortsBuilder_ = null;
              efforts_ = other.efforts_;
              bitField0_ = (bitField0_ & ~0x00000010);
              effortsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEffortsFieldBuilder() : null;
            } else {
              effortsBuilder_.addAllMessages(other.efforts_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Joint.JointState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Joint.JointState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<choreo.StringOuterClass.String> names_ =
        java.util.Collections.emptyList();
      private void ensureNamesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          names_ = new java.util.ArrayList<choreo.StringOuterClass.String>(names_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> namesBuilder_;

      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public java.util.List<choreo.StringOuterClass.String> getNamesList() {
        if (namesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(names_);
        } else {
          return namesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public int getNamesCount() {
        if (namesBuilder_ == null) {
          return names_.size();
        } else {
          return namesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public choreo.StringOuterClass.String getNames(int index) {
        if (namesBuilder_ == null) {
          return names_.get(index);
        } else {
          return namesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder setNames(
          int index, choreo.StringOuterClass.String value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamesIsMutable();
          names_.set(index, value);
          onChanged();
        } else {
          namesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder setNames(
          int index, choreo.StringOuterClass.String.Builder builderForValue) {
        if (namesBuilder_ == null) {
          ensureNamesIsMutable();
          names_.set(index, builderForValue.build());
          onChanged();
        } else {
          namesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder addNames(choreo.StringOuterClass.String value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamesIsMutable();
          names_.add(value);
          onChanged();
        } else {
          namesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder addNames(
          int index, choreo.StringOuterClass.String value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamesIsMutable();
          names_.add(index, value);
          onChanged();
        } else {
          namesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder addNames(
          choreo.StringOuterClass.String.Builder builderForValue) {
        if (namesBuilder_ == null) {
          ensureNamesIsMutable();
          names_.add(builderForValue.build());
          onChanged();
        } else {
          namesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder addNames(
          int index, choreo.StringOuterClass.String.Builder builderForValue) {
        if (namesBuilder_ == null) {
          ensureNamesIsMutable();
          names_.add(index, builderForValue.build());
          onChanged();
        } else {
          namesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder addAllNames(
          java.lang.Iterable<? extends choreo.StringOuterClass.String> values) {
        if (namesBuilder_ == null) {
          ensureNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, names_);
          onChanged();
        } else {
          namesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder clearNames() {
        if (namesBuilder_ == null) {
          names_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          namesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public Builder removeNames(int index) {
        if (namesBuilder_ == null) {
          ensureNamesIsMutable();
          names_.remove(index);
          onChanged();
        } else {
          namesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public choreo.StringOuterClass.String.Builder getNamesBuilder(
          int index) {
        return getNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public choreo.StringOuterClass.StringOrBuilder getNamesOrBuilder(
          int index) {
        if (namesBuilder_ == null) {
          return names_.get(index);  } else {
          return namesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public java.util.List<? extends choreo.StringOuterClass.StringOrBuilder> 
           getNamesOrBuilderList() {
        if (namesBuilder_ != null) {
          return namesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(names_);
        }
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public choreo.StringOuterClass.String.Builder addNamesBuilder() {
        return getNamesFieldBuilder().addBuilder(
            choreo.StringOuterClass.String.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public choreo.StringOuterClass.String.Builder addNamesBuilder(
          int index) {
        return getNamesFieldBuilder().addBuilder(
            index, choreo.StringOuterClass.String.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.String names = 2;</code>
       */
      public java.util.List<choreo.StringOuterClass.String.Builder> 
           getNamesBuilderList() {
        return getNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder> 
          getNamesFieldBuilder() {
        if (namesBuilder_ == null) {
          namesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.StringOuterClass.String, choreo.StringOuterClass.String.Builder, choreo.StringOuterClass.StringOrBuilder>(
                  names_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          names_ = null;
        }
        return namesBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float64> positions_ =
        java.util.Collections.emptyList();
      private void ensurePositionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          positions_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>(positions_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> positionsBuilder_;

      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64> getPositionsList() {
        if (positionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positions_);
        } else {
          return positionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public int getPositionsCount() {
        if (positionsBuilder_ == null) {
          return positions_.size();
        } else {
          return positionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public choreo.FloatOuterClass.Float64 getPositions(int index) {
        if (positionsBuilder_ == null) {
          return positions_.get(index);
        } else {
          return positionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder setPositions(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.set(index, value);
          onChanged();
        } else {
          positionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder setPositions(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder addPositions(choreo.FloatOuterClass.Float64 value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.add(value);
          onChanged();
        } else {
          positionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder addPositions(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (positionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionsIsMutable();
          positions_.add(index, value);
          onChanged();
        } else {
          positionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder addPositions(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.add(builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder addPositions(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder addAllPositions(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float64> values) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positions_);
          onChanged();
        } else {
          positionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder clearPositions() {
        if (positionsBuilder_ == null) {
          positions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          positionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public Builder removePositions(int index) {
        if (positionsBuilder_ == null) {
          ensurePositionsIsMutable();
          positions_.remove(index);
          onChanged();
        } else {
          positionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getPositionsBuilder(
          int index) {
        return getPositionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getPositionsOrBuilder(
          int index) {
        if (positionsBuilder_ == null) {
          return positions_.get(index);  } else {
          return positionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
           getPositionsOrBuilderList() {
        if (positionsBuilder_ != null) {
          return positionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positions_);
        }
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addPositionsBuilder() {
        return getPositionsFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addPositionsBuilder(
          int index) {
        return getPositionsFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 positions = 3;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64.Builder> 
           getPositionsBuilderList() {
        return getPositionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getPositionsFieldBuilder() {
        if (positionsBuilder_ == null) {
          positionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  positions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          positions_ = null;
        }
        return positionsBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float64> velocities_ =
        java.util.Collections.emptyList();
      private void ensureVelocitiesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          velocities_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>(velocities_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> velocitiesBuilder_;

      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64> getVelocitiesList() {
        if (velocitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(velocities_);
        } else {
          return velocitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public int getVelocitiesCount() {
        if (velocitiesBuilder_ == null) {
          return velocities_.size();
        } else {
          return velocitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public choreo.FloatOuterClass.Float64 getVelocities(int index) {
        if (velocitiesBuilder_ == null) {
          return velocities_.get(index);
        } else {
          return velocitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder setVelocities(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (velocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVelocitiesIsMutable();
          velocities_.set(index, value);
          onChanged();
        } else {
          velocitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder setVelocities(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (velocitiesBuilder_ == null) {
          ensureVelocitiesIsMutable();
          velocities_.set(index, builderForValue.build());
          onChanged();
        } else {
          velocitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder addVelocities(choreo.FloatOuterClass.Float64 value) {
        if (velocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVelocitiesIsMutable();
          velocities_.add(value);
          onChanged();
        } else {
          velocitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder addVelocities(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (velocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVelocitiesIsMutable();
          velocities_.add(index, value);
          onChanged();
        } else {
          velocitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder addVelocities(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (velocitiesBuilder_ == null) {
          ensureVelocitiesIsMutable();
          velocities_.add(builderForValue.build());
          onChanged();
        } else {
          velocitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder addVelocities(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (velocitiesBuilder_ == null) {
          ensureVelocitiesIsMutable();
          velocities_.add(index, builderForValue.build());
          onChanged();
        } else {
          velocitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder addAllVelocities(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float64> values) {
        if (velocitiesBuilder_ == null) {
          ensureVelocitiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, velocities_);
          onChanged();
        } else {
          velocitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder clearVelocities() {
        if (velocitiesBuilder_ == null) {
          velocities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          velocitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public Builder removeVelocities(int index) {
        if (velocitiesBuilder_ == null) {
          ensureVelocitiesIsMutable();
          velocities_.remove(index);
          onChanged();
        } else {
          velocitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getVelocitiesBuilder(
          int index) {
        return getVelocitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getVelocitiesOrBuilder(
          int index) {
        if (velocitiesBuilder_ == null) {
          return velocities_.get(index);  } else {
          return velocitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
           getVelocitiesOrBuilderList() {
        if (velocitiesBuilder_ != null) {
          return velocitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(velocities_);
        }
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addVelocitiesBuilder() {
        return getVelocitiesFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addVelocitiesBuilder(
          int index) {
        return getVelocitiesFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 velocities = 4;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64.Builder> 
           getVelocitiesBuilderList() {
        return getVelocitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getVelocitiesFieldBuilder() {
        if (velocitiesBuilder_ == null) {
          velocitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  velocities_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          velocities_ = null;
        }
        return velocitiesBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float64> efforts_ =
        java.util.Collections.emptyList();
      private void ensureEffortsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          efforts_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>(efforts_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> effortsBuilder_;

      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64> getEffortsList() {
        if (effortsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(efforts_);
        } else {
          return effortsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public int getEffortsCount() {
        if (effortsBuilder_ == null) {
          return efforts_.size();
        } else {
          return effortsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public choreo.FloatOuterClass.Float64 getEfforts(int index) {
        if (effortsBuilder_ == null) {
          return efforts_.get(index);
        } else {
          return effortsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder setEfforts(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (effortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffortsIsMutable();
          efforts_.set(index, value);
          onChanged();
        } else {
          effortsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder setEfforts(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (effortsBuilder_ == null) {
          ensureEffortsIsMutable();
          efforts_.set(index, builderForValue.build());
          onChanged();
        } else {
          effortsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder addEfforts(choreo.FloatOuterClass.Float64 value) {
        if (effortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffortsIsMutable();
          efforts_.add(value);
          onChanged();
        } else {
          effortsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder addEfforts(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (effortsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEffortsIsMutable();
          efforts_.add(index, value);
          onChanged();
        } else {
          effortsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder addEfforts(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (effortsBuilder_ == null) {
          ensureEffortsIsMutable();
          efforts_.add(builderForValue.build());
          onChanged();
        } else {
          effortsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder addEfforts(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (effortsBuilder_ == null) {
          ensureEffortsIsMutable();
          efforts_.add(index, builderForValue.build());
          onChanged();
        } else {
          effortsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder addAllEfforts(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float64> values) {
        if (effortsBuilder_ == null) {
          ensureEffortsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, efforts_);
          onChanged();
        } else {
          effortsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder clearEfforts() {
        if (effortsBuilder_ == null) {
          efforts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          effortsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public Builder removeEfforts(int index) {
        if (effortsBuilder_ == null) {
          ensureEffortsIsMutable();
          efforts_.remove(index);
          onChanged();
        } else {
          effortsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getEffortsBuilder(
          int index) {
        return getEffortsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getEffortsOrBuilder(
          int index) {
        if (effortsBuilder_ == null) {
          return efforts_.get(index);  } else {
          return effortsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
           getEffortsOrBuilderList() {
        if (effortsBuilder_ != null) {
          return effortsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(efforts_);
        }
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addEffortsBuilder() {
        return getEffortsFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addEffortsBuilder(
          int index) {
        return getEffortsFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 efforts = 5;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64.Builder> 
           getEffortsBuilderList() {
        return getEffortsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getEffortsFieldBuilder() {
        if (effortsBuilder_ == null) {
          effortsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  efforts_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          efforts_ = null;
        }
        return effortsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.JointState)
    }

    // @@protoc_insertion_point(class_scope:choreo.JointState)
    private static final choreo.Joint.JointState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Joint.JointState();
    }

    public static choreo.Joint.JointState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JointState>
        PARSER = new com.google.protobuf.AbstractParser<JointState>() {
      public JointState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new JointState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JointState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JointState> getParserForType() {
      return PARSER;
    }

    public choreo.Joint.JointState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiDOFJointStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.MultiDOFJointState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    java.util.List<choreo.TransformOuterClass.Transform> 
        getTransformsList();
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    choreo.TransformOuterClass.Transform getTransforms(int index);
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    int getTransformsCount();
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    java.util.List<? extends choreo.TransformOuterClass.TransformOrBuilder> 
        getTransformsOrBuilderList();
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    choreo.TransformOuterClass.TransformOrBuilder getTransformsOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    java.util.List<choreo.TwistOuterClass.Twist> 
        getTwistsList();
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    choreo.TwistOuterClass.Twist getTwists(int index);
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    int getTwistsCount();
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    java.util.List<? extends choreo.TwistOuterClass.TwistOrBuilder> 
        getTwistsOrBuilderList();
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    choreo.TwistOuterClass.TwistOrBuilder getTwistsOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    java.util.List<choreo.WrenchOuterClass.Wrench> 
        getWrenchesList();
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    choreo.WrenchOuterClass.Wrench getWrenches(int index);
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    int getWrenchesCount();
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    java.util.List<? extends choreo.WrenchOuterClass.WrenchOrBuilder> 
        getWrenchesOrBuilderList();
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    choreo.WrenchOuterClass.WrenchOrBuilder getWrenchesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.MultiDOFJointState}
   */
  public  static final class MultiDOFJointState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.MultiDOFJointState)
      MultiDOFJointStateOrBuilder {
    // Use MultiDOFJointState.newBuilder() to construct.
    private MultiDOFJointState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiDOFJointState() {
      transforms_ = java.util.Collections.emptyList();
      twists_ = java.util.Collections.emptyList();
      wrenches_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MultiDOFJointState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                transforms_ = new java.util.ArrayList<choreo.TransformOuterClass.Transform>();
                mutable_bitField0_ |= 0x00000002;
              }
              transforms_.add(
                  input.readMessage(choreo.TransformOuterClass.Transform.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                twists_ = new java.util.ArrayList<choreo.TwistOuterClass.Twist>();
                mutable_bitField0_ |= 0x00000004;
              }
              twists_.add(
                  input.readMessage(choreo.TwistOuterClass.Twist.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                wrenches_ = new java.util.ArrayList<choreo.WrenchOuterClass.Wrench>();
                mutable_bitField0_ |= 0x00000008;
              }
              wrenches_.add(
                  input.readMessage(choreo.WrenchOuterClass.Wrench.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          transforms_ = java.util.Collections.unmodifiableList(transforms_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          twists_ = java.util.Collections.unmodifiableList(twists_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          wrenches_ = java.util.Collections.unmodifiableList(wrenches_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Joint.internal_static_choreo_MultiDOFJointState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Joint.internal_static_choreo_MultiDOFJointState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Joint.MultiDOFJointState.class, choreo.Joint.MultiDOFJointState.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int TRANSFORMS_FIELD_NUMBER = 2;
    private java.util.List<choreo.TransformOuterClass.Transform> transforms_;
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    public java.util.List<choreo.TransformOuterClass.Transform> getTransformsList() {
      return transforms_;
    }
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    public java.util.List<? extends choreo.TransformOuterClass.TransformOrBuilder> 
        getTransformsOrBuilderList() {
      return transforms_;
    }
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    public int getTransformsCount() {
      return transforms_.size();
    }
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    public choreo.TransformOuterClass.Transform getTransforms(int index) {
      return transforms_.get(index);
    }
    /**
     * <code>repeated .choreo.Transform transforms = 2;</code>
     */
    public choreo.TransformOuterClass.TransformOrBuilder getTransformsOrBuilder(
        int index) {
      return transforms_.get(index);
    }

    public static final int TWISTS_FIELD_NUMBER = 3;
    private java.util.List<choreo.TwistOuterClass.Twist> twists_;
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    public java.util.List<choreo.TwistOuterClass.Twist> getTwistsList() {
      return twists_;
    }
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    public java.util.List<? extends choreo.TwistOuterClass.TwistOrBuilder> 
        getTwistsOrBuilderList() {
      return twists_;
    }
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    public int getTwistsCount() {
      return twists_.size();
    }
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    public choreo.TwistOuterClass.Twist getTwists(int index) {
      return twists_.get(index);
    }
    /**
     * <code>repeated .choreo.Twist twists = 3;</code>
     */
    public choreo.TwistOuterClass.TwistOrBuilder getTwistsOrBuilder(
        int index) {
      return twists_.get(index);
    }

    public static final int WRENCHES_FIELD_NUMBER = 4;
    private java.util.List<choreo.WrenchOuterClass.Wrench> wrenches_;
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    public java.util.List<choreo.WrenchOuterClass.Wrench> getWrenchesList() {
      return wrenches_;
    }
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    public java.util.List<? extends choreo.WrenchOuterClass.WrenchOrBuilder> 
        getWrenchesOrBuilderList() {
      return wrenches_;
    }
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    public int getWrenchesCount() {
      return wrenches_.size();
    }
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    public choreo.WrenchOuterClass.Wrench getWrenches(int index) {
      return wrenches_.get(index);
    }
    /**
     * <code>repeated .choreo.Wrench wrenches = 4;</code>
     */
    public choreo.WrenchOuterClass.WrenchOrBuilder getWrenchesOrBuilder(
        int index) {
      return wrenches_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < transforms_.size(); i++) {
        output.writeMessage(2, transforms_.get(i));
      }
      for (int i = 0; i < twists_.size(); i++) {
        output.writeMessage(3, twists_.get(i));
      }
      for (int i = 0; i < wrenches_.size(); i++) {
        output.writeMessage(4, wrenches_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < transforms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, transforms_.get(i));
      }
      for (int i = 0; i < twists_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, twists_.get(i));
      }
      for (int i = 0; i < wrenches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, wrenches_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Joint.MultiDOFJointState)) {
        return super.equals(obj);
      }
      choreo.Joint.MultiDOFJointState other = (choreo.Joint.MultiDOFJointState) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && getTransformsList()
          .equals(other.getTransformsList());
      result = result && getTwistsList()
          .equals(other.getTwistsList());
      result = result && getWrenchesList()
          .equals(other.getWrenchesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getTransformsCount() > 0) {
        hash = (37 * hash) + TRANSFORMS_FIELD_NUMBER;
        hash = (53 * hash) + getTransformsList().hashCode();
      }
      if (getTwistsCount() > 0) {
        hash = (37 * hash) + TWISTS_FIELD_NUMBER;
        hash = (53 * hash) + getTwistsList().hashCode();
      }
      if (getWrenchesCount() > 0) {
        hash = (37 * hash) + WRENCHES_FIELD_NUMBER;
        hash = (53 * hash) + getWrenchesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Joint.MultiDOFJointState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joint.MultiDOFJointState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Joint.MultiDOFJointState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joint.MultiDOFJointState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Joint.MultiDOFJointState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.MultiDOFJointState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.MultiDOFJointState)
        choreo.Joint.MultiDOFJointStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Joint.internal_static_choreo_MultiDOFJointState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Joint.internal_static_choreo_MultiDOFJointState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Joint.MultiDOFJointState.class, choreo.Joint.MultiDOFJointState.Builder.class);
      }

      // Construct using choreo.Joint.MultiDOFJointState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTransformsFieldBuilder();
          getTwistsFieldBuilder();
          getWrenchesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (transformsBuilder_ == null) {
          transforms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          transformsBuilder_.clear();
        }
        if (twistsBuilder_ == null) {
          twists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          twistsBuilder_.clear();
        }
        if (wrenchesBuilder_ == null) {
          wrenches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          wrenchesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Joint.internal_static_choreo_MultiDOFJointState_descriptor;
      }

      public choreo.Joint.MultiDOFJointState getDefaultInstanceForType() {
        return choreo.Joint.MultiDOFJointState.getDefaultInstance();
      }

      public choreo.Joint.MultiDOFJointState build() {
        choreo.Joint.MultiDOFJointState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Joint.MultiDOFJointState buildPartial() {
        choreo.Joint.MultiDOFJointState result = new choreo.Joint.MultiDOFJointState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (transformsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            transforms_ = java.util.Collections.unmodifiableList(transforms_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.transforms_ = transforms_;
        } else {
          result.transforms_ = transformsBuilder_.build();
        }
        if (twistsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            twists_ = java.util.Collections.unmodifiableList(twists_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.twists_ = twists_;
        } else {
          result.twists_ = twistsBuilder_.build();
        }
        if (wrenchesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            wrenches_ = java.util.Collections.unmodifiableList(wrenches_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.wrenches_ = wrenches_;
        } else {
          result.wrenches_ = wrenchesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Joint.MultiDOFJointState) {
          return mergeFrom((choreo.Joint.MultiDOFJointState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Joint.MultiDOFJointState other) {
        if (other == choreo.Joint.MultiDOFJointState.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (transformsBuilder_ == null) {
          if (!other.transforms_.isEmpty()) {
            if (transforms_.isEmpty()) {
              transforms_ = other.transforms_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTransformsIsMutable();
              transforms_.addAll(other.transforms_);
            }
            onChanged();
          }
        } else {
          if (!other.transforms_.isEmpty()) {
            if (transformsBuilder_.isEmpty()) {
              transformsBuilder_.dispose();
              transformsBuilder_ = null;
              transforms_ = other.transforms_;
              bitField0_ = (bitField0_ & ~0x00000002);
              transformsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTransformsFieldBuilder() : null;
            } else {
              transformsBuilder_.addAllMessages(other.transforms_);
            }
          }
        }
        if (twistsBuilder_ == null) {
          if (!other.twists_.isEmpty()) {
            if (twists_.isEmpty()) {
              twists_ = other.twists_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTwistsIsMutable();
              twists_.addAll(other.twists_);
            }
            onChanged();
          }
        } else {
          if (!other.twists_.isEmpty()) {
            if (twistsBuilder_.isEmpty()) {
              twistsBuilder_.dispose();
              twistsBuilder_ = null;
              twists_ = other.twists_;
              bitField0_ = (bitField0_ & ~0x00000004);
              twistsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTwistsFieldBuilder() : null;
            } else {
              twistsBuilder_.addAllMessages(other.twists_);
            }
          }
        }
        if (wrenchesBuilder_ == null) {
          if (!other.wrenches_.isEmpty()) {
            if (wrenches_.isEmpty()) {
              wrenches_ = other.wrenches_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureWrenchesIsMutable();
              wrenches_.addAll(other.wrenches_);
            }
            onChanged();
          }
        } else {
          if (!other.wrenches_.isEmpty()) {
            if (wrenchesBuilder_.isEmpty()) {
              wrenchesBuilder_.dispose();
              wrenchesBuilder_ = null;
              wrenches_ = other.wrenches_;
              bitField0_ = (bitField0_ & ~0x00000008);
              wrenchesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWrenchesFieldBuilder() : null;
            } else {
              wrenchesBuilder_.addAllMessages(other.wrenches_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Joint.MultiDOFJointState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Joint.MultiDOFJointState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<choreo.TransformOuterClass.Transform> transforms_ =
        java.util.Collections.emptyList();
      private void ensureTransformsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          transforms_ = new java.util.ArrayList<choreo.TransformOuterClass.Transform>(transforms_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.TransformOuterClass.Transform, choreo.TransformOuterClass.Transform.Builder, choreo.TransformOuterClass.TransformOrBuilder> transformsBuilder_;

      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public java.util.List<choreo.TransformOuterClass.Transform> getTransformsList() {
        if (transformsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transforms_);
        } else {
          return transformsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public int getTransformsCount() {
        if (transformsBuilder_ == null) {
          return transforms_.size();
        } else {
          return transformsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public choreo.TransformOuterClass.Transform getTransforms(int index) {
        if (transformsBuilder_ == null) {
          return transforms_.get(index);
        } else {
          return transformsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder setTransforms(
          int index, choreo.TransformOuterClass.Transform value) {
        if (transformsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformsIsMutable();
          transforms_.set(index, value);
          onChanged();
        } else {
          transformsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder setTransforms(
          int index, choreo.TransformOuterClass.Transform.Builder builderForValue) {
        if (transformsBuilder_ == null) {
          ensureTransformsIsMutable();
          transforms_.set(index, builderForValue.build());
          onChanged();
        } else {
          transformsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder addTransforms(choreo.TransformOuterClass.Transform value) {
        if (transformsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformsIsMutable();
          transforms_.add(value);
          onChanged();
        } else {
          transformsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder addTransforms(
          int index, choreo.TransformOuterClass.Transform value) {
        if (transformsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformsIsMutable();
          transforms_.add(index, value);
          onChanged();
        } else {
          transformsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder addTransforms(
          choreo.TransformOuterClass.Transform.Builder builderForValue) {
        if (transformsBuilder_ == null) {
          ensureTransformsIsMutable();
          transforms_.add(builderForValue.build());
          onChanged();
        } else {
          transformsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder addTransforms(
          int index, choreo.TransformOuterClass.Transform.Builder builderForValue) {
        if (transformsBuilder_ == null) {
          ensureTransformsIsMutable();
          transforms_.add(index, builderForValue.build());
          onChanged();
        } else {
          transformsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder addAllTransforms(
          java.lang.Iterable<? extends choreo.TransformOuterClass.Transform> values) {
        if (transformsBuilder_ == null) {
          ensureTransformsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transforms_);
          onChanged();
        } else {
          transformsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder clearTransforms() {
        if (transformsBuilder_ == null) {
          transforms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          transformsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public Builder removeTransforms(int index) {
        if (transformsBuilder_ == null) {
          ensureTransformsIsMutable();
          transforms_.remove(index);
          onChanged();
        } else {
          transformsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public choreo.TransformOuterClass.Transform.Builder getTransformsBuilder(
          int index) {
        return getTransformsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public choreo.TransformOuterClass.TransformOrBuilder getTransformsOrBuilder(
          int index) {
        if (transformsBuilder_ == null) {
          return transforms_.get(index);  } else {
          return transformsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public java.util.List<? extends choreo.TransformOuterClass.TransformOrBuilder> 
           getTransformsOrBuilderList() {
        if (transformsBuilder_ != null) {
          return transformsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transforms_);
        }
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public choreo.TransformOuterClass.Transform.Builder addTransformsBuilder() {
        return getTransformsFieldBuilder().addBuilder(
            choreo.TransformOuterClass.Transform.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public choreo.TransformOuterClass.Transform.Builder addTransformsBuilder(
          int index) {
        return getTransformsFieldBuilder().addBuilder(
            index, choreo.TransformOuterClass.Transform.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Transform transforms = 2;</code>
       */
      public java.util.List<choreo.TransformOuterClass.Transform.Builder> 
           getTransformsBuilderList() {
        return getTransformsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.TransformOuterClass.Transform, choreo.TransformOuterClass.Transform.Builder, choreo.TransformOuterClass.TransformOrBuilder> 
          getTransformsFieldBuilder() {
        if (transformsBuilder_ == null) {
          transformsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.TransformOuterClass.Transform, choreo.TransformOuterClass.Transform.Builder, choreo.TransformOuterClass.TransformOrBuilder>(
                  transforms_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          transforms_ = null;
        }
        return transformsBuilder_;
      }

      private java.util.List<choreo.TwistOuterClass.Twist> twists_ =
        java.util.Collections.emptyList();
      private void ensureTwistsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          twists_ = new java.util.ArrayList<choreo.TwistOuterClass.Twist>(twists_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.TwistOuterClass.Twist, choreo.TwistOuterClass.Twist.Builder, choreo.TwistOuterClass.TwistOrBuilder> twistsBuilder_;

      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public java.util.List<choreo.TwistOuterClass.Twist> getTwistsList() {
        if (twistsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(twists_);
        } else {
          return twistsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public int getTwistsCount() {
        if (twistsBuilder_ == null) {
          return twists_.size();
        } else {
          return twistsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public choreo.TwistOuterClass.Twist getTwists(int index) {
        if (twistsBuilder_ == null) {
          return twists_.get(index);
        } else {
          return twistsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder setTwists(
          int index, choreo.TwistOuterClass.Twist value) {
        if (twistsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTwistsIsMutable();
          twists_.set(index, value);
          onChanged();
        } else {
          twistsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder setTwists(
          int index, choreo.TwistOuterClass.Twist.Builder builderForValue) {
        if (twistsBuilder_ == null) {
          ensureTwistsIsMutable();
          twists_.set(index, builderForValue.build());
          onChanged();
        } else {
          twistsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder addTwists(choreo.TwistOuterClass.Twist value) {
        if (twistsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTwistsIsMutable();
          twists_.add(value);
          onChanged();
        } else {
          twistsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder addTwists(
          int index, choreo.TwistOuterClass.Twist value) {
        if (twistsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTwistsIsMutable();
          twists_.add(index, value);
          onChanged();
        } else {
          twistsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder addTwists(
          choreo.TwistOuterClass.Twist.Builder builderForValue) {
        if (twistsBuilder_ == null) {
          ensureTwistsIsMutable();
          twists_.add(builderForValue.build());
          onChanged();
        } else {
          twistsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder addTwists(
          int index, choreo.TwistOuterClass.Twist.Builder builderForValue) {
        if (twistsBuilder_ == null) {
          ensureTwistsIsMutable();
          twists_.add(index, builderForValue.build());
          onChanged();
        } else {
          twistsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder addAllTwists(
          java.lang.Iterable<? extends choreo.TwistOuterClass.Twist> values) {
        if (twistsBuilder_ == null) {
          ensureTwistsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, twists_);
          onChanged();
        } else {
          twistsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder clearTwists() {
        if (twistsBuilder_ == null) {
          twists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          twistsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public Builder removeTwists(int index) {
        if (twistsBuilder_ == null) {
          ensureTwistsIsMutable();
          twists_.remove(index);
          onChanged();
        } else {
          twistsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public choreo.TwistOuterClass.Twist.Builder getTwistsBuilder(
          int index) {
        return getTwistsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public choreo.TwistOuterClass.TwistOrBuilder getTwistsOrBuilder(
          int index) {
        if (twistsBuilder_ == null) {
          return twists_.get(index);  } else {
          return twistsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public java.util.List<? extends choreo.TwistOuterClass.TwistOrBuilder> 
           getTwistsOrBuilderList() {
        if (twistsBuilder_ != null) {
          return twistsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(twists_);
        }
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public choreo.TwistOuterClass.Twist.Builder addTwistsBuilder() {
        return getTwistsFieldBuilder().addBuilder(
            choreo.TwistOuterClass.Twist.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public choreo.TwistOuterClass.Twist.Builder addTwistsBuilder(
          int index) {
        return getTwistsFieldBuilder().addBuilder(
            index, choreo.TwistOuterClass.Twist.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Twist twists = 3;</code>
       */
      public java.util.List<choreo.TwistOuterClass.Twist.Builder> 
           getTwistsBuilderList() {
        return getTwistsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.TwistOuterClass.Twist, choreo.TwistOuterClass.Twist.Builder, choreo.TwistOuterClass.TwistOrBuilder> 
          getTwistsFieldBuilder() {
        if (twistsBuilder_ == null) {
          twistsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.TwistOuterClass.Twist, choreo.TwistOuterClass.Twist.Builder, choreo.TwistOuterClass.TwistOrBuilder>(
                  twists_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          twists_ = null;
        }
        return twistsBuilder_;
      }

      private java.util.List<choreo.WrenchOuterClass.Wrench> wrenches_ =
        java.util.Collections.emptyList();
      private void ensureWrenchesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          wrenches_ = new java.util.ArrayList<choreo.WrenchOuterClass.Wrench>(wrenches_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder> wrenchesBuilder_;

      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public java.util.List<choreo.WrenchOuterClass.Wrench> getWrenchesList() {
        if (wrenchesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wrenches_);
        } else {
          return wrenchesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public int getWrenchesCount() {
        if (wrenchesBuilder_ == null) {
          return wrenches_.size();
        } else {
          return wrenchesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public choreo.WrenchOuterClass.Wrench getWrenches(int index) {
        if (wrenchesBuilder_ == null) {
          return wrenches_.get(index);
        } else {
          return wrenchesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder setWrenches(
          int index, choreo.WrenchOuterClass.Wrench value) {
        if (wrenchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWrenchesIsMutable();
          wrenches_.set(index, value);
          onChanged();
        } else {
          wrenchesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder setWrenches(
          int index, choreo.WrenchOuterClass.Wrench.Builder builderForValue) {
        if (wrenchesBuilder_ == null) {
          ensureWrenchesIsMutable();
          wrenches_.set(index, builderForValue.build());
          onChanged();
        } else {
          wrenchesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder addWrenches(choreo.WrenchOuterClass.Wrench value) {
        if (wrenchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWrenchesIsMutable();
          wrenches_.add(value);
          onChanged();
        } else {
          wrenchesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder addWrenches(
          int index, choreo.WrenchOuterClass.Wrench value) {
        if (wrenchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWrenchesIsMutable();
          wrenches_.add(index, value);
          onChanged();
        } else {
          wrenchesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder addWrenches(
          choreo.WrenchOuterClass.Wrench.Builder builderForValue) {
        if (wrenchesBuilder_ == null) {
          ensureWrenchesIsMutable();
          wrenches_.add(builderForValue.build());
          onChanged();
        } else {
          wrenchesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder addWrenches(
          int index, choreo.WrenchOuterClass.Wrench.Builder builderForValue) {
        if (wrenchesBuilder_ == null) {
          ensureWrenchesIsMutable();
          wrenches_.add(index, builderForValue.build());
          onChanged();
        } else {
          wrenchesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder addAllWrenches(
          java.lang.Iterable<? extends choreo.WrenchOuterClass.Wrench> values) {
        if (wrenchesBuilder_ == null) {
          ensureWrenchesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, wrenches_);
          onChanged();
        } else {
          wrenchesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder clearWrenches() {
        if (wrenchesBuilder_ == null) {
          wrenches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          wrenchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public Builder removeWrenches(int index) {
        if (wrenchesBuilder_ == null) {
          ensureWrenchesIsMutable();
          wrenches_.remove(index);
          onChanged();
        } else {
          wrenchesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public choreo.WrenchOuterClass.Wrench.Builder getWrenchesBuilder(
          int index) {
        return getWrenchesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public choreo.WrenchOuterClass.WrenchOrBuilder getWrenchesOrBuilder(
          int index) {
        if (wrenchesBuilder_ == null) {
          return wrenches_.get(index);  } else {
          return wrenchesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public java.util.List<? extends choreo.WrenchOuterClass.WrenchOrBuilder> 
           getWrenchesOrBuilderList() {
        if (wrenchesBuilder_ != null) {
          return wrenchesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wrenches_);
        }
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public choreo.WrenchOuterClass.Wrench.Builder addWrenchesBuilder() {
        return getWrenchesFieldBuilder().addBuilder(
            choreo.WrenchOuterClass.Wrench.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public choreo.WrenchOuterClass.Wrench.Builder addWrenchesBuilder(
          int index) {
        return getWrenchesFieldBuilder().addBuilder(
            index, choreo.WrenchOuterClass.Wrench.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Wrench wrenches = 4;</code>
       */
      public java.util.List<choreo.WrenchOuterClass.Wrench.Builder> 
           getWrenchesBuilderList() {
        return getWrenchesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder> 
          getWrenchesFieldBuilder() {
        if (wrenchesBuilder_ == null) {
          wrenchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.WrenchOuterClass.Wrench, choreo.WrenchOuterClass.Wrench.Builder, choreo.WrenchOuterClass.WrenchOrBuilder>(
                  wrenches_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          wrenches_ = null;
        }
        return wrenchesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.MultiDOFJointState)
    }

    // @@protoc_insertion_point(class_scope:choreo.MultiDOFJointState)
    private static final choreo.Joint.MultiDOFJointState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Joint.MultiDOFJointState();
    }

    public static choreo.Joint.MultiDOFJointState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiDOFJointState>
        PARSER = new com.google.protobuf.AbstractParser<MultiDOFJointState>() {
      public MultiDOFJointState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultiDOFJointState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiDOFJointState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiDOFJointState> getParserForType() {
      return PARSER;
    }

    public choreo.Joint.MultiDOFJointState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_JointState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_JointState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_MultiDOFJointState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_MultiDOFJointState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022sensor/joint.proto\022\006choreo\032\025primitive/" +
      "float.proto\032\026primitive/header.proto\032\026pri" +
      "mitive/string.proto\032\031geometric/transform" +
      ".proto\032\025geometric/twist.proto\032\026geometric" +
      "/wrench.proto\"\266\001\n\nJointState\022\036\n\006header\030\001" +
      " \001(\0132\016.choreo.Header\022\035\n\005names\030\002 \003(\0132\016.ch" +
      "oreo.String\022\"\n\tpositions\030\003 \003(\0132\017.choreo." +
      "Float64\022#\n\nvelocities\030\004 \003(\0132\017.choreo.Flo" +
      "at64\022 \n\007efforts\030\005 \003(\0132\017.choreo.Float64\"\234" +
      "\001\n\022MultiDOFJointState\022\036\n\006header\030\001 \001(\0132\016.",
      "choreo.Header\022%\n\ntransforms\030\002 \003(\0132\021.chor" +
      "eo.Transform\022\035\n\006twists\030\003 \003(\0132\r.choreo.Tw" +
      "ist\022 \n\010wrenches\030\004 \003(\0132\016.choreo.WrenchBCZ" +
      "Agithub.com/RobotStudio/choreo-msg/msg/s" +
      "ensor;rs.choreo.msg.sensorb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.FloatOuterClass.getDescriptor(),
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.StringOuterClass.getDescriptor(),
          choreo.TransformOuterClass.getDescriptor(),
          choreo.TwistOuterClass.getDescriptor(),
          choreo.WrenchOuterClass.getDescriptor(),
        }, assigner);
    internal_static_choreo_JointState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_JointState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_JointState_descriptor,
        new java.lang.String[] { "Header", "Names", "Positions", "Velocities", "Efforts", });
    internal_static_choreo_MultiDOFJointState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_MultiDOFJointState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_MultiDOFJointState_descriptor,
        new java.lang.String[] { "Header", "Transforms", "Twists", "Wrenches", });
    choreo.FloatOuterClass.getDescriptor();
    choreo.HeaderOuterClass.getDescriptor();
    choreo.StringOuterClass.getDescriptor();
    choreo.TransformOuterClass.getDescriptor();
    choreo.TwistOuterClass.getDescriptor();
    choreo.WrenchOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
