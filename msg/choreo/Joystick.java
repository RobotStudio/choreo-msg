// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor/joystick.proto

package choreo;

public final class Joystick {
  private Joystick() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JoyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Joy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float32> 
        getAxesList();
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    choreo.FloatOuterClass.Float32 getAxes(int index);
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    int getAxesCount();
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getAxesOrBuilderList();
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getAxesOrBuilder(
        int index);

    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    java.util.List<choreo.Int.Int32> 
        getButtonsList();
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    choreo.Int.Int32 getButtons(int index);
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    int getButtonsCount();
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    java.util.List<? extends choreo.Int.Int32OrBuilder> 
        getButtonsOrBuilderList();
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    choreo.Int.Int32OrBuilder getButtonsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.Joy}
   */
  public  static final class Joy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Joy)
      JoyOrBuilder {
    // Use Joy.newBuilder() to construct.
    private Joy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Joy() {
      axes_ = java.util.Collections.emptyList();
      buttons_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Joy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                axes_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>();
                mutable_bitField0_ |= 0x00000002;
              }
              axes_.add(
                  input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                buttons_ = new java.util.ArrayList<choreo.Int.Int32>();
                mutable_bitField0_ |= 0x00000004;
              }
              buttons_.add(
                  input.readMessage(choreo.Int.Int32.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          axes_ = java.util.Collections.unmodifiableList(axes_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          buttons_ = java.util.Collections.unmodifiableList(buttons_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Joystick.internal_static_choreo_Joy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Joystick.internal_static_choreo_Joy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Joystick.Joy.class, choreo.Joystick.Joy.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int AXES_FIELD_NUMBER = 2;
    private java.util.List<choreo.FloatOuterClass.Float32> axes_;
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float32> getAxesList() {
      return axes_;
    }
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
        getAxesOrBuilderList() {
      return axes_;
    }
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    public int getAxesCount() {
      return axes_.size();
    }
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    public choreo.FloatOuterClass.Float32 getAxes(int index) {
      return axes_.get(index);
    }
    /**
     * <code>repeated .choreo.Float32 axes = 2;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getAxesOrBuilder(
        int index) {
      return axes_.get(index);
    }

    public static final int BUTTONS_FIELD_NUMBER = 3;
    private java.util.List<choreo.Int.Int32> buttons_;
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    public java.util.List<choreo.Int.Int32> getButtonsList() {
      return buttons_;
    }
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    public java.util.List<? extends choreo.Int.Int32OrBuilder> 
        getButtonsOrBuilderList() {
      return buttons_;
    }
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    public int getButtonsCount() {
      return buttons_.size();
    }
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    public choreo.Int.Int32 getButtons(int index) {
      return buttons_.get(index);
    }
    /**
     * <code>repeated .choreo.Int32 buttons = 3;</code>
     */
    public choreo.Int.Int32OrBuilder getButtonsOrBuilder(
        int index) {
      return buttons_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      for (int i = 0; i < axes_.size(); i++) {
        output.writeMessage(2, axes_.get(i));
      }
      for (int i = 0; i < buttons_.size(); i++) {
        output.writeMessage(3, buttons_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      for (int i = 0; i < axes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, axes_.get(i));
      }
      for (int i = 0; i < buttons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, buttons_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Joystick.Joy)) {
        return super.equals(obj);
      }
      choreo.Joystick.Joy other = (choreo.Joystick.Joy) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && getAxesList()
          .equals(other.getAxesList());
      result = result && getButtonsList()
          .equals(other.getButtonsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getAxesCount() > 0) {
        hash = (37 * hash) + AXES_FIELD_NUMBER;
        hash = (53 * hash) + getAxesList().hashCode();
      }
      if (getButtonsCount() > 0) {
        hash = (37 * hash) + BUTTONS_FIELD_NUMBER;
        hash = (53 * hash) + getButtonsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Joystick.Joy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.Joy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.Joy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.Joy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.Joy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.Joy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.Joy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.Joy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.Joy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Joystick.Joy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.Joy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.Joy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Joystick.Joy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Joy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Joy)
        choreo.Joystick.JoyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Joystick.internal_static_choreo_Joy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Joystick.internal_static_choreo_Joy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Joystick.Joy.class, choreo.Joystick.Joy.Builder.class);
      }

      // Construct using choreo.Joystick.Joy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAxesFieldBuilder();
          getButtonsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (axesBuilder_ == null) {
          axes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          axesBuilder_.clear();
        }
        if (buttonsBuilder_ == null) {
          buttons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          buttonsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Joystick.internal_static_choreo_Joy_descriptor;
      }

      public choreo.Joystick.Joy getDefaultInstanceForType() {
        return choreo.Joystick.Joy.getDefaultInstance();
      }

      public choreo.Joystick.Joy build() {
        choreo.Joystick.Joy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Joystick.Joy buildPartial() {
        choreo.Joystick.Joy result = new choreo.Joystick.Joy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (axesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            axes_ = java.util.Collections.unmodifiableList(axes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.axes_ = axes_;
        } else {
          result.axes_ = axesBuilder_.build();
        }
        if (buttonsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            buttons_ = java.util.Collections.unmodifiableList(buttons_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.buttons_ = buttons_;
        } else {
          result.buttons_ = buttonsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Joystick.Joy) {
          return mergeFrom((choreo.Joystick.Joy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Joystick.Joy other) {
        if (other == choreo.Joystick.Joy.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (axesBuilder_ == null) {
          if (!other.axes_.isEmpty()) {
            if (axes_.isEmpty()) {
              axes_ = other.axes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAxesIsMutable();
              axes_.addAll(other.axes_);
            }
            onChanged();
          }
        } else {
          if (!other.axes_.isEmpty()) {
            if (axesBuilder_.isEmpty()) {
              axesBuilder_.dispose();
              axesBuilder_ = null;
              axes_ = other.axes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              axesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAxesFieldBuilder() : null;
            } else {
              axesBuilder_.addAllMessages(other.axes_);
            }
          }
        }
        if (buttonsBuilder_ == null) {
          if (!other.buttons_.isEmpty()) {
            if (buttons_.isEmpty()) {
              buttons_ = other.buttons_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureButtonsIsMutable();
              buttons_.addAll(other.buttons_);
            }
            onChanged();
          }
        } else {
          if (!other.buttons_.isEmpty()) {
            if (buttonsBuilder_.isEmpty()) {
              buttonsBuilder_.dispose();
              buttonsBuilder_ = null;
              buttons_ = other.buttons_;
              bitField0_ = (bitField0_ & ~0x00000004);
              buttonsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getButtonsFieldBuilder() : null;
            } else {
              buttonsBuilder_.addAllMessages(other.buttons_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Joystick.Joy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Joystick.Joy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float32> axes_ =
        java.util.Collections.emptyList();
      private void ensureAxesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          axes_ = new java.util.ArrayList<choreo.FloatOuterClass.Float32>(axes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> axesBuilder_;

      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32> getAxesList() {
        if (axesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(axes_);
        } else {
          return axesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public int getAxesCount() {
        if (axesBuilder_ == null) {
          return axes_.size();
        } else {
          return axesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public choreo.FloatOuterClass.Float32 getAxes(int index) {
        if (axesBuilder_ == null) {
          return axes_.get(index);
        } else {
          return axesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder setAxes(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (axesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxesIsMutable();
          axes_.set(index, value);
          onChanged();
        } else {
          axesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder setAxes(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (axesBuilder_ == null) {
          ensureAxesIsMutable();
          axes_.set(index, builderForValue.build());
          onChanged();
        } else {
          axesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder addAxes(choreo.FloatOuterClass.Float32 value) {
        if (axesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxesIsMutable();
          axes_.add(value);
          onChanged();
        } else {
          axesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder addAxes(
          int index, choreo.FloatOuterClass.Float32 value) {
        if (axesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAxesIsMutable();
          axes_.add(index, value);
          onChanged();
        } else {
          axesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder addAxes(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (axesBuilder_ == null) {
          ensureAxesIsMutable();
          axes_.add(builderForValue.build());
          onChanged();
        } else {
          axesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder addAxes(
          int index, choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (axesBuilder_ == null) {
          ensureAxesIsMutable();
          axes_.add(index, builderForValue.build());
          onChanged();
        } else {
          axesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder addAllAxes(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float32> values) {
        if (axesBuilder_ == null) {
          ensureAxesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, axes_);
          onChanged();
        } else {
          axesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder clearAxes() {
        if (axesBuilder_ == null) {
          axes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          axesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public Builder removeAxes(int index) {
        if (axesBuilder_ == null) {
          ensureAxesIsMutable();
          axes_.remove(index);
          onChanged();
        } else {
          axesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getAxesBuilder(
          int index) {
        return getAxesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getAxesOrBuilder(
          int index) {
        if (axesBuilder_ == null) {
          return axes_.get(index);  } else {
          return axesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float32OrBuilder> 
           getAxesOrBuilderList() {
        if (axesBuilder_ != null) {
          return axesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(axes_);
        }
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addAxesBuilder() {
        return getAxesFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder addAxesBuilder(
          int index) {
        return getAxesFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float32 axes = 2;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float32.Builder> 
           getAxesBuilderList() {
        return getAxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getAxesFieldBuilder() {
        if (axesBuilder_ == null) {
          axesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  axes_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          axes_ = null;
        }
        return axesBuilder_;
      }

      private java.util.List<choreo.Int.Int32> buttons_ =
        java.util.Collections.emptyList();
      private void ensureButtonsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          buttons_ = new java.util.ArrayList<choreo.Int.Int32>(buttons_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Int.Int32, choreo.Int.Int32.Builder, choreo.Int.Int32OrBuilder> buttonsBuilder_;

      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public java.util.List<choreo.Int.Int32> getButtonsList() {
        if (buttonsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buttons_);
        } else {
          return buttonsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public int getButtonsCount() {
        if (buttonsBuilder_ == null) {
          return buttons_.size();
        } else {
          return buttonsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public choreo.Int.Int32 getButtons(int index) {
        if (buttonsBuilder_ == null) {
          return buttons_.get(index);
        } else {
          return buttonsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder setButtons(
          int index, choreo.Int.Int32 value) {
        if (buttonsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureButtonsIsMutable();
          buttons_.set(index, value);
          onChanged();
        } else {
          buttonsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder setButtons(
          int index, choreo.Int.Int32.Builder builderForValue) {
        if (buttonsBuilder_ == null) {
          ensureButtonsIsMutable();
          buttons_.set(index, builderForValue.build());
          onChanged();
        } else {
          buttonsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder addButtons(choreo.Int.Int32 value) {
        if (buttonsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureButtonsIsMutable();
          buttons_.add(value);
          onChanged();
        } else {
          buttonsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder addButtons(
          int index, choreo.Int.Int32 value) {
        if (buttonsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureButtonsIsMutable();
          buttons_.add(index, value);
          onChanged();
        } else {
          buttonsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder addButtons(
          choreo.Int.Int32.Builder builderForValue) {
        if (buttonsBuilder_ == null) {
          ensureButtonsIsMutable();
          buttons_.add(builderForValue.build());
          onChanged();
        } else {
          buttonsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder addButtons(
          int index, choreo.Int.Int32.Builder builderForValue) {
        if (buttonsBuilder_ == null) {
          ensureButtonsIsMutable();
          buttons_.add(index, builderForValue.build());
          onChanged();
        } else {
          buttonsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder addAllButtons(
          java.lang.Iterable<? extends choreo.Int.Int32> values) {
        if (buttonsBuilder_ == null) {
          ensureButtonsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buttons_);
          onChanged();
        } else {
          buttonsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder clearButtons() {
        if (buttonsBuilder_ == null) {
          buttons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          buttonsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public Builder removeButtons(int index) {
        if (buttonsBuilder_ == null) {
          ensureButtonsIsMutable();
          buttons_.remove(index);
          onChanged();
        } else {
          buttonsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public choreo.Int.Int32.Builder getButtonsBuilder(
          int index) {
        return getButtonsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public choreo.Int.Int32OrBuilder getButtonsOrBuilder(
          int index) {
        if (buttonsBuilder_ == null) {
          return buttons_.get(index);  } else {
          return buttonsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public java.util.List<? extends choreo.Int.Int32OrBuilder> 
           getButtonsOrBuilderList() {
        if (buttonsBuilder_ != null) {
          return buttonsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buttons_);
        }
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public choreo.Int.Int32.Builder addButtonsBuilder() {
        return getButtonsFieldBuilder().addBuilder(
            choreo.Int.Int32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public choreo.Int.Int32.Builder addButtonsBuilder(
          int index) {
        return getButtonsFieldBuilder().addBuilder(
            index, choreo.Int.Int32.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Int32 buttons = 3;</code>
       */
      public java.util.List<choreo.Int.Int32.Builder> 
           getButtonsBuilderList() {
        return getButtonsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Int.Int32, choreo.Int.Int32.Builder, choreo.Int.Int32OrBuilder> 
          getButtonsFieldBuilder() {
        if (buttonsBuilder_ == null) {
          buttonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Int.Int32, choreo.Int.Int32.Builder, choreo.Int.Int32OrBuilder>(
                  buttons_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          buttons_ = null;
        }
        return buttonsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Joy)
    }

    // @@protoc_insertion_point(class_scope:choreo.Joy)
    private static final choreo.Joystick.Joy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Joystick.Joy();
    }

    public static choreo.Joystick.Joy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Joy>
        PARSER = new com.google.protobuf.AbstractParser<Joy>() {
      public Joy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Joy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Joy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Joy> getParserForType() {
      return PARSER;
    }

    public choreo.Joystick.Joy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoyFeedbackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.JoyFeedback)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
     */
    choreo.Joystick.JoyFeedback.FeedbackType getType();

    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    choreo.Int.UInt32 getId();
    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    choreo.Int.UInt32OrBuilder getIdOrBuilder();

    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    boolean hasIntensity();
    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    choreo.FloatOuterClass.Float32 getIntensity();
    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    choreo.FloatOuterClass.Float32OrBuilder getIntensityOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.JoyFeedback}
   */
  public  static final class JoyFeedback extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.JoyFeedback)
      JoyFeedbackOrBuilder {
    // Use JoyFeedback.newBuilder() to construct.
    private JoyFeedback(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JoyFeedback() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private JoyFeedback(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              choreo.Int.UInt32.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(choreo.Int.UInt32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              choreo.FloatOuterClass.Float32.Builder subBuilder = null;
              if (intensity_ != null) {
                subBuilder = intensity_.toBuilder();
              }
              intensity_ = input.readMessage(choreo.FloatOuterClass.Float32.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(intensity_);
                intensity_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Joystick.internal_static_choreo_JoyFeedback_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Joystick.internal_static_choreo_JoyFeedback_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Joystick.JoyFeedback.class, choreo.Joystick.JoyFeedback.Builder.class);
    }

    /**
     * Protobuf enum {@code choreo.JoyFeedback.FeedbackType}
     */
    public enum FeedbackType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LED = 0;</code>
       */
      LED(0),
      /**
       * <code>RUMBLE = 1;</code>
       */
      RUMBLE(1),
      /**
       * <code>BUZZER = 2;</code>
       */
      BUZZER(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LED = 0;</code>
       */
      public static final int LED_VALUE = 0;
      /**
       * <code>RUMBLE = 1;</code>
       */
      public static final int RUMBLE_VALUE = 1;
      /**
       * <code>BUZZER = 2;</code>
       */
      public static final int BUZZER_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FeedbackType valueOf(int value) {
        return forNumber(value);
      }

      public static FeedbackType forNumber(int value) {
        switch (value) {
          case 0: return LED;
          case 1: return RUMBLE;
          case 2: return BUZZER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FeedbackType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FeedbackType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FeedbackType>() {
              public FeedbackType findValueByNumber(int number) {
                return FeedbackType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return choreo.Joystick.JoyFeedback.getDescriptor().getEnumTypes().get(0);
      }

      private static final FeedbackType[] VALUES = values();

      public static FeedbackType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FeedbackType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:choreo.JoyFeedback.FeedbackType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
     */
    public choreo.Joystick.JoyFeedback.FeedbackType getType() {
      choreo.Joystick.JoyFeedback.FeedbackType result = choreo.Joystick.JoyFeedback.FeedbackType.valueOf(type_);
      return result == null ? choreo.Joystick.JoyFeedback.FeedbackType.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private choreo.Int.UInt32 id_;
    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    public choreo.Int.UInt32 getId() {
      return id_ == null ? choreo.Int.UInt32.getDefaultInstance() : id_;
    }
    /**
     * <code>.choreo.UInt32 id = 2;</code>
     */
    public choreo.Int.UInt32OrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int INTENSITY_FIELD_NUMBER = 3;
    private choreo.FloatOuterClass.Float32 intensity_;
    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    public boolean hasIntensity() {
      return intensity_ != null;
    }
    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    public choreo.FloatOuterClass.Float32 getIntensity() {
      return intensity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : intensity_;
    }
    /**
     * <code>.choreo.Float32 intensity = 3;</code>
     */
    public choreo.FloatOuterClass.Float32OrBuilder getIntensityOrBuilder() {
      return getIntensity();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != choreo.Joystick.JoyFeedback.FeedbackType.LED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (id_ != null) {
        output.writeMessage(2, getId());
      }
      if (intensity_ != null) {
        output.writeMessage(3, getIntensity());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != choreo.Joystick.JoyFeedback.FeedbackType.LED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getId());
      }
      if (intensity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getIntensity());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Joystick.JoyFeedback)) {
        return super.equals(obj);
      }
      choreo.Joystick.JoyFeedback other = (choreo.Joystick.JoyFeedback) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && getId()
            .equals(other.getId());
      }
      result = result && (hasIntensity() == other.hasIntensity());
      if (hasIntensity()) {
        result = result && getIntensity()
            .equals(other.getIntensity());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasIntensity()) {
        hash = (37 * hash) + INTENSITY_FIELD_NUMBER;
        hash = (53 * hash) + getIntensity().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Joystick.JoyFeedback parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedback parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedback parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedback parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Joystick.JoyFeedback prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.JoyFeedback}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.JoyFeedback)
        choreo.Joystick.JoyFeedbackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Joystick.internal_static_choreo_JoyFeedback_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Joystick.internal_static_choreo_JoyFeedback_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Joystick.JoyFeedback.class, choreo.Joystick.JoyFeedback.Builder.class);
      }

      // Construct using choreo.Joystick.JoyFeedback.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        if (intensityBuilder_ == null) {
          intensity_ = null;
        } else {
          intensity_ = null;
          intensityBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Joystick.internal_static_choreo_JoyFeedback_descriptor;
      }

      public choreo.Joystick.JoyFeedback getDefaultInstanceForType() {
        return choreo.Joystick.JoyFeedback.getDefaultInstance();
      }

      public choreo.Joystick.JoyFeedback build() {
        choreo.Joystick.JoyFeedback result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Joystick.JoyFeedback buildPartial() {
        choreo.Joystick.JoyFeedback result = new choreo.Joystick.JoyFeedback(this);
        result.type_ = type_;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (intensityBuilder_ == null) {
          result.intensity_ = intensity_;
        } else {
          result.intensity_ = intensityBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Joystick.JoyFeedback) {
          return mergeFrom((choreo.Joystick.JoyFeedback)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Joystick.JoyFeedback other) {
        if (other == choreo.Joystick.JoyFeedback.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasIntensity()) {
          mergeIntensity(other.getIntensity());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Joystick.JoyFeedback parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Joystick.JoyFeedback) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
       */
      public choreo.Joystick.JoyFeedback.FeedbackType getType() {
        choreo.Joystick.JoyFeedback.FeedbackType result = choreo.Joystick.JoyFeedback.FeedbackType.valueOf(type_);
        return result == null ? choreo.Joystick.JoyFeedback.FeedbackType.UNRECOGNIZED : result;
      }
      /**
       * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
       */
      public Builder setType(choreo.Joystick.JoyFeedback.FeedbackType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.choreo.JoyFeedback.FeedbackType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private choreo.Int.UInt32 id_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> idBuilder_;
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public choreo.Int.UInt32 getId() {
        if (idBuilder_ == null) {
          return id_ == null ? choreo.Int.UInt32.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public Builder setId(choreo.Int.UInt32 value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public Builder setId(
          choreo.Int.UInt32.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public Builder mergeId(choreo.Int.UInt32 value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              choreo.Int.UInt32.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public choreo.Int.UInt32.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      public choreo.Int.UInt32OrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              choreo.Int.UInt32.getDefaultInstance() : id_;
        }
      }
      /**
       * <code>.choreo.UInt32 id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Int.UInt32, choreo.Int.UInt32.Builder, choreo.Int.UInt32OrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private choreo.FloatOuterClass.Float32 intensity_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> intensityBuilder_;
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public boolean hasIntensity() {
        return intensityBuilder_ != null || intensity_ != null;
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public choreo.FloatOuterClass.Float32 getIntensity() {
        if (intensityBuilder_ == null) {
          return intensity_ == null ? choreo.FloatOuterClass.Float32.getDefaultInstance() : intensity_;
        } else {
          return intensityBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public Builder setIntensity(choreo.FloatOuterClass.Float32 value) {
        if (intensityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          intensity_ = value;
          onChanged();
        } else {
          intensityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public Builder setIntensity(
          choreo.FloatOuterClass.Float32.Builder builderForValue) {
        if (intensityBuilder_ == null) {
          intensity_ = builderForValue.build();
          onChanged();
        } else {
          intensityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public Builder mergeIntensity(choreo.FloatOuterClass.Float32 value) {
        if (intensityBuilder_ == null) {
          if (intensity_ != null) {
            intensity_ =
              choreo.FloatOuterClass.Float32.newBuilder(intensity_).mergeFrom(value).buildPartial();
          } else {
            intensity_ = value;
          }
          onChanged();
        } else {
          intensityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public Builder clearIntensity() {
        if (intensityBuilder_ == null) {
          intensity_ = null;
          onChanged();
        } else {
          intensity_ = null;
          intensityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public choreo.FloatOuterClass.Float32.Builder getIntensityBuilder() {
        
        onChanged();
        return getIntensityFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      public choreo.FloatOuterClass.Float32OrBuilder getIntensityOrBuilder() {
        if (intensityBuilder_ != null) {
          return intensityBuilder_.getMessageOrBuilder();
        } else {
          return intensity_ == null ?
              choreo.FloatOuterClass.Float32.getDefaultInstance() : intensity_;
        }
      }
      /**
       * <code>.choreo.Float32 intensity = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder> 
          getIntensityFieldBuilder() {
        if (intensityBuilder_ == null) {
          intensityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.FloatOuterClass.Float32, choreo.FloatOuterClass.Float32.Builder, choreo.FloatOuterClass.Float32OrBuilder>(
                  getIntensity(),
                  getParentForChildren(),
                  isClean());
          intensity_ = null;
        }
        return intensityBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.JoyFeedback)
    }

    // @@protoc_insertion_point(class_scope:choreo.JoyFeedback)
    private static final choreo.Joystick.JoyFeedback DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Joystick.JoyFeedback();
    }

    public static choreo.Joystick.JoyFeedback getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JoyFeedback>
        PARSER = new com.google.protobuf.AbstractParser<JoyFeedback>() {
      public JoyFeedback parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new JoyFeedback(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JoyFeedback> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JoyFeedback> getParserForType() {
      return PARSER;
    }

    public choreo.Joystick.JoyFeedback getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoyFeedbackArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.JoyFeedbackArray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    java.util.List<choreo.Joystick.JoyFeedback> 
        getArrayList();
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    choreo.Joystick.JoyFeedback getArray(int index);
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    int getArrayCount();
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    java.util.List<? extends choreo.Joystick.JoyFeedbackOrBuilder> 
        getArrayOrBuilderList();
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    choreo.Joystick.JoyFeedbackOrBuilder getArrayOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.JoyFeedbackArray}
   */
  public  static final class JoyFeedbackArray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.JoyFeedbackArray)
      JoyFeedbackArrayOrBuilder {
    // Use JoyFeedbackArray.newBuilder() to construct.
    private JoyFeedbackArray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JoyFeedbackArray() {
      array_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private JoyFeedbackArray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                array_ = new java.util.ArrayList<choreo.Joystick.JoyFeedback>();
                mutable_bitField0_ |= 0x00000001;
              }
              array_.add(
                  input.readMessage(choreo.Joystick.JoyFeedback.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          array_ = java.util.Collections.unmodifiableList(array_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.Joystick.internal_static_choreo_JoyFeedbackArray_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.Joystick.internal_static_choreo_JoyFeedbackArray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.Joystick.JoyFeedbackArray.class, choreo.Joystick.JoyFeedbackArray.Builder.class);
    }

    public static final int ARRAY_FIELD_NUMBER = 1;
    private java.util.List<choreo.Joystick.JoyFeedback> array_;
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    public java.util.List<choreo.Joystick.JoyFeedback> getArrayList() {
      return array_;
    }
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    public java.util.List<? extends choreo.Joystick.JoyFeedbackOrBuilder> 
        getArrayOrBuilderList() {
      return array_;
    }
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    public int getArrayCount() {
      return array_.size();
    }
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    public choreo.Joystick.JoyFeedback getArray(int index) {
      return array_.get(index);
    }
    /**
     * <code>repeated .choreo.JoyFeedback array = 1;</code>
     */
    public choreo.Joystick.JoyFeedbackOrBuilder getArrayOrBuilder(
        int index) {
      return array_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < array_.size(); i++) {
        output.writeMessage(1, array_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < array_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, array_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.Joystick.JoyFeedbackArray)) {
        return super.equals(obj);
      }
      choreo.Joystick.JoyFeedbackArray other = (choreo.Joystick.JoyFeedbackArray) obj;

      boolean result = true;
      result = result && getArrayList()
          .equals(other.getArrayList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArrayCount() > 0) {
        hash = (37 * hash) + ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getArrayList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedbackArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedbackArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.Joystick.JoyFeedbackArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.Joystick.JoyFeedbackArray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.JoyFeedbackArray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.JoyFeedbackArray)
        choreo.Joystick.JoyFeedbackArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.Joystick.internal_static_choreo_JoyFeedbackArray_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.Joystick.internal_static_choreo_JoyFeedbackArray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.Joystick.JoyFeedbackArray.class, choreo.Joystick.JoyFeedbackArray.Builder.class);
      }

      // Construct using choreo.Joystick.JoyFeedbackArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getArrayFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (arrayBuilder_ == null) {
          array_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          arrayBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.Joystick.internal_static_choreo_JoyFeedbackArray_descriptor;
      }

      public choreo.Joystick.JoyFeedbackArray getDefaultInstanceForType() {
        return choreo.Joystick.JoyFeedbackArray.getDefaultInstance();
      }

      public choreo.Joystick.JoyFeedbackArray build() {
        choreo.Joystick.JoyFeedbackArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.Joystick.JoyFeedbackArray buildPartial() {
        choreo.Joystick.JoyFeedbackArray result = new choreo.Joystick.JoyFeedbackArray(this);
        int from_bitField0_ = bitField0_;
        if (arrayBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            array_ = java.util.Collections.unmodifiableList(array_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.array_ = array_;
        } else {
          result.array_ = arrayBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.Joystick.JoyFeedbackArray) {
          return mergeFrom((choreo.Joystick.JoyFeedbackArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.Joystick.JoyFeedbackArray other) {
        if (other == choreo.Joystick.JoyFeedbackArray.getDefaultInstance()) return this;
        if (arrayBuilder_ == null) {
          if (!other.array_.isEmpty()) {
            if (array_.isEmpty()) {
              array_ = other.array_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArrayIsMutable();
              array_.addAll(other.array_);
            }
            onChanged();
          }
        } else {
          if (!other.array_.isEmpty()) {
            if (arrayBuilder_.isEmpty()) {
              arrayBuilder_.dispose();
              arrayBuilder_ = null;
              array_ = other.array_;
              bitField0_ = (bitField0_ & ~0x00000001);
              arrayBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getArrayFieldBuilder() : null;
            } else {
              arrayBuilder_.addAllMessages(other.array_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.Joystick.JoyFeedbackArray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.Joystick.JoyFeedbackArray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<choreo.Joystick.JoyFeedback> array_ =
        java.util.Collections.emptyList();
      private void ensureArrayIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          array_ = new java.util.ArrayList<choreo.Joystick.JoyFeedback>(array_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Joystick.JoyFeedback, choreo.Joystick.JoyFeedback.Builder, choreo.Joystick.JoyFeedbackOrBuilder> arrayBuilder_;

      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public java.util.List<choreo.Joystick.JoyFeedback> getArrayList() {
        if (arrayBuilder_ == null) {
          return java.util.Collections.unmodifiableList(array_);
        } else {
          return arrayBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public int getArrayCount() {
        if (arrayBuilder_ == null) {
          return array_.size();
        } else {
          return arrayBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public choreo.Joystick.JoyFeedback getArray(int index) {
        if (arrayBuilder_ == null) {
          return array_.get(index);
        } else {
          return arrayBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder setArray(
          int index, choreo.Joystick.JoyFeedback value) {
        if (arrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArrayIsMutable();
          array_.set(index, value);
          onChanged();
        } else {
          arrayBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder setArray(
          int index, choreo.Joystick.JoyFeedback.Builder builderForValue) {
        if (arrayBuilder_ == null) {
          ensureArrayIsMutable();
          array_.set(index, builderForValue.build());
          onChanged();
        } else {
          arrayBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder addArray(choreo.Joystick.JoyFeedback value) {
        if (arrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArrayIsMutable();
          array_.add(value);
          onChanged();
        } else {
          arrayBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder addArray(
          int index, choreo.Joystick.JoyFeedback value) {
        if (arrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArrayIsMutable();
          array_.add(index, value);
          onChanged();
        } else {
          arrayBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder addArray(
          choreo.Joystick.JoyFeedback.Builder builderForValue) {
        if (arrayBuilder_ == null) {
          ensureArrayIsMutable();
          array_.add(builderForValue.build());
          onChanged();
        } else {
          arrayBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder addArray(
          int index, choreo.Joystick.JoyFeedback.Builder builderForValue) {
        if (arrayBuilder_ == null) {
          ensureArrayIsMutable();
          array_.add(index, builderForValue.build());
          onChanged();
        } else {
          arrayBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder addAllArray(
          java.lang.Iterable<? extends choreo.Joystick.JoyFeedback> values) {
        if (arrayBuilder_ == null) {
          ensureArrayIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, array_);
          onChanged();
        } else {
          arrayBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder clearArray() {
        if (arrayBuilder_ == null) {
          array_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          arrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public Builder removeArray(int index) {
        if (arrayBuilder_ == null) {
          ensureArrayIsMutable();
          array_.remove(index);
          onChanged();
        } else {
          arrayBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public choreo.Joystick.JoyFeedback.Builder getArrayBuilder(
          int index) {
        return getArrayFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public choreo.Joystick.JoyFeedbackOrBuilder getArrayOrBuilder(
          int index) {
        if (arrayBuilder_ == null) {
          return array_.get(index);  } else {
          return arrayBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public java.util.List<? extends choreo.Joystick.JoyFeedbackOrBuilder> 
           getArrayOrBuilderList() {
        if (arrayBuilder_ != null) {
          return arrayBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(array_);
        }
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public choreo.Joystick.JoyFeedback.Builder addArrayBuilder() {
        return getArrayFieldBuilder().addBuilder(
            choreo.Joystick.JoyFeedback.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public choreo.Joystick.JoyFeedback.Builder addArrayBuilder(
          int index) {
        return getArrayFieldBuilder().addBuilder(
            index, choreo.Joystick.JoyFeedback.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.JoyFeedback array = 1;</code>
       */
      public java.util.List<choreo.Joystick.JoyFeedback.Builder> 
           getArrayBuilderList() {
        return getArrayFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.Joystick.JoyFeedback, choreo.Joystick.JoyFeedback.Builder, choreo.Joystick.JoyFeedbackOrBuilder> 
          getArrayFieldBuilder() {
        if (arrayBuilder_ == null) {
          arrayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.Joystick.JoyFeedback, choreo.Joystick.JoyFeedback.Builder, choreo.Joystick.JoyFeedbackOrBuilder>(
                  array_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          array_ = null;
        }
        return arrayBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.JoyFeedbackArray)
    }

    // @@protoc_insertion_point(class_scope:choreo.JoyFeedbackArray)
    private static final choreo.Joystick.JoyFeedbackArray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.Joystick.JoyFeedbackArray();
    }

    public static choreo.Joystick.JoyFeedbackArray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JoyFeedbackArray>
        PARSER = new com.google.protobuf.AbstractParser<JoyFeedbackArray>() {
      public JoyFeedbackArray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new JoyFeedbackArray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JoyFeedbackArray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JoyFeedbackArray> getParserForType() {
      return PARSER;
    }

    public choreo.Joystick.JoyFeedbackArray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Joy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Joy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_JoyFeedback_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_JoyFeedback_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_JoyFeedbackArray_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_JoyFeedbackArray_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025sensor/joystick.proto\022\006choreo\032\025primiti" +
      "ve/float.proto\032\026primitive/header.proto\032\023" +
      "primitive/int.proto\"d\n\003Joy\022\036\n\006header\030\001 \001" +
      "(\0132\016.choreo.Header\022\035\n\004axes\030\002 \003(\0132\017.chore" +
      "o.Float32\022\036\n\007buttons\030\003 \003(\0132\r.choreo.Int3" +
      "2\"\256\001\n\013JoyFeedback\022.\n\004type\030\001 \001(\0162 .choreo" +
      ".JoyFeedback.FeedbackType\022\032\n\002id\030\002 \001(\0132\016." +
      "choreo.UInt32\022\"\n\tintensity\030\003 \001(\0132\017.chore" +
      "o.Float32\"/\n\014FeedbackType\022\007\n\003LED\020\000\022\n\n\006RU" +
      "MBLE\020\001\022\n\n\006BUZZER\020\002\"6\n\020JoyFeedbackArray\022\"",
      "\n\005array\030\001 \003(\0132\023.choreo.JoyFeedbackB.Z,gi" +
      "thub.com/RobotStudio/choreo-msg/msg/sens" +
      "orb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.FloatOuterClass.getDescriptor(),
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.Int.getDescriptor(),
        }, assigner);
    internal_static_choreo_Joy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_Joy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Joy_descriptor,
        new java.lang.String[] { "Header", "Axes", "Buttons", });
    internal_static_choreo_JoyFeedback_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_JoyFeedback_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_JoyFeedback_descriptor,
        new java.lang.String[] { "Type", "Id", "Intensity", });
    internal_static_choreo_JoyFeedbackArray_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_choreo_JoyFeedbackArray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_JoyFeedbackArray_descriptor,
        new java.lang.String[] { "Array", });
    choreo.FloatOuterClass.getDescriptor();
    choreo.HeaderOuterClass.getDescriptor();
    choreo.Int.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
