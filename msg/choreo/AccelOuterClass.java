// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geometric/accel.proto

package choreo;

public final class AccelOuterClass {
  private AccelOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AccelStampedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.AccelStamped)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    boolean hasAccel();
    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    choreo.AccelOuterClass.Accel getAccel();
    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.AccelStamped}
   */
  public  static final class AccelStamped extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.AccelStamped)
      AccelStampedOrBuilder {
    // Use AccelStamped.newBuilder() to construct.
    private AccelStamped(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccelStamped() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AccelStamped(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.AccelOuterClass.Accel.Builder subBuilder = null;
              if (accel_ != null) {
                subBuilder = accel_.toBuilder();
              }
              accel_ = input.readMessage(choreo.AccelOuterClass.Accel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accel_);
                accel_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelStamped_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelStamped_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.AccelOuterClass.AccelStamped.class, choreo.AccelOuterClass.AccelStamped.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ACCEL_FIELD_NUMBER = 2;
    private choreo.AccelOuterClass.Accel accel_;
    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    public boolean hasAccel() {
      return accel_ != null;
    }
    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    public choreo.AccelOuterClass.Accel getAccel() {
      return accel_ == null ? choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
    }
    /**
     * <code>.choreo.Accel accel = 2;</code>
     */
    public choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder() {
      return getAccel();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (accel_ != null) {
        output.writeMessage(2, getAccel());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (accel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAccel());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.AccelOuterClass.AccelStamped)) {
        return super.equals(obj);
      }
      choreo.AccelOuterClass.AccelStamped other = (choreo.AccelOuterClass.AccelStamped) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasAccel() == other.hasAccel());
      if (hasAccel()) {
        result = result && getAccel()
            .equals(other.getAccel());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasAccel()) {
        hash = (37 * hash) + ACCEL_FIELD_NUMBER;
        hash = (53 * hash) + getAccel().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelStamped parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelStamped parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelStamped parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.AccelOuterClass.AccelStamped prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.AccelStamped}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.AccelStamped)
        choreo.AccelOuterClass.AccelStampedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelStamped_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelStamped_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.AccelOuterClass.AccelStamped.class, choreo.AccelOuterClass.AccelStamped.Builder.class);
      }

      // Construct using choreo.AccelOuterClass.AccelStamped.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (accelBuilder_ == null) {
          accel_ = null;
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelStamped_descriptor;
      }

      public choreo.AccelOuterClass.AccelStamped getDefaultInstanceForType() {
        return choreo.AccelOuterClass.AccelStamped.getDefaultInstance();
      }

      public choreo.AccelOuterClass.AccelStamped build() {
        choreo.AccelOuterClass.AccelStamped result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.AccelOuterClass.AccelStamped buildPartial() {
        choreo.AccelOuterClass.AccelStamped result = new choreo.AccelOuterClass.AccelStamped(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (accelBuilder_ == null) {
          result.accel_ = accel_;
        } else {
          result.accel_ = accelBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.AccelOuterClass.AccelStamped) {
          return mergeFrom((choreo.AccelOuterClass.AccelStamped)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.AccelOuterClass.AccelStamped other) {
        if (other == choreo.AccelOuterClass.AccelStamped.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasAccel()) {
          mergeAccel(other.getAccel());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.AccelOuterClass.AccelStamped parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.AccelOuterClass.AccelStamped) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.AccelOuterClass.Accel accel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder> accelBuilder_;
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public boolean hasAccel() {
        return accelBuilder_ != null || accel_ != null;
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public choreo.AccelOuterClass.Accel getAccel() {
        if (accelBuilder_ == null) {
          return accel_ == null ? choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
        } else {
          return accelBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public Builder setAccel(choreo.AccelOuterClass.Accel value) {
        if (accelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accel_ = value;
          onChanged();
        } else {
          accelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public Builder setAccel(
          choreo.AccelOuterClass.Accel.Builder builderForValue) {
        if (accelBuilder_ == null) {
          accel_ = builderForValue.build();
          onChanged();
        } else {
          accelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public Builder mergeAccel(choreo.AccelOuterClass.Accel value) {
        if (accelBuilder_ == null) {
          if (accel_ != null) {
            accel_ =
              choreo.AccelOuterClass.Accel.newBuilder(accel_).mergeFrom(value).buildPartial();
          } else {
            accel_ = value;
          }
          onChanged();
        } else {
          accelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public Builder clearAccel() {
        if (accelBuilder_ == null) {
          accel_ = null;
          onChanged();
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public choreo.AccelOuterClass.Accel.Builder getAccelBuilder() {
        
        onChanged();
        return getAccelFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      public choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder() {
        if (accelBuilder_ != null) {
          return accelBuilder_.getMessageOrBuilder();
        } else {
          return accel_ == null ?
              choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
        }
      }
      /**
       * <code>.choreo.Accel accel = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder> 
          getAccelFieldBuilder() {
        if (accelBuilder_ == null) {
          accelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder>(
                  getAccel(),
                  getParentForChildren(),
                  isClean());
          accel_ = null;
        }
        return accelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.AccelStamped)
    }

    // @@protoc_insertion_point(class_scope:choreo.AccelStamped)
    private static final choreo.AccelOuterClass.AccelStamped DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.AccelOuterClass.AccelStamped();
    }

    public static choreo.AccelOuterClass.AccelStamped getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccelStamped>
        PARSER = new com.google.protobuf.AbstractParser<AccelStamped>() {
      public AccelStamped parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccelStamped(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccelStamped> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccelStamped> getParserForType() {
      return PARSER;
    }

    public choreo.AccelOuterClass.AccelStamped getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccelWithCovarianceStampedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.AccelWithCovarianceStamped)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.Header getHeader();
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    boolean hasAccel();
    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    choreo.AccelOuterClass.AccelWithCovariance getAccel();
    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    choreo.AccelOuterClass.AccelWithCovarianceOrBuilder getAccelOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.AccelWithCovarianceStamped}
   */
  public  static final class AccelWithCovarianceStamped extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.AccelWithCovarianceStamped)
      AccelWithCovarianceStampedOrBuilder {
    // Use AccelWithCovarianceStamped.newBuilder() to construct.
    private AccelWithCovarianceStamped(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccelWithCovarianceStamped() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AccelWithCovarianceStamped(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.HeaderOuterClass.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(choreo.HeaderOuterClass.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.AccelOuterClass.AccelWithCovariance.Builder subBuilder = null;
              if (accel_ != null) {
                subBuilder = accel_.toBuilder();
              }
              accel_ = input.readMessage(choreo.AccelOuterClass.AccelWithCovariance.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accel_);
                accel_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovarianceStamped_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovarianceStamped_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.AccelOuterClass.AccelWithCovarianceStamped.class, choreo.AccelOuterClass.AccelWithCovarianceStamped.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private choreo.HeaderOuterClass.Header header_;
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.Header getHeader() {
      return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.choreo.Header header = 1;</code>
     */
    public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int ACCEL_FIELD_NUMBER = 2;
    private choreo.AccelOuterClass.AccelWithCovariance accel_;
    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    public boolean hasAccel() {
      return accel_ != null;
    }
    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    public choreo.AccelOuterClass.AccelWithCovariance getAccel() {
      return accel_ == null ? choreo.AccelOuterClass.AccelWithCovariance.getDefaultInstance() : accel_;
    }
    /**
     * <code>.choreo.AccelWithCovariance accel = 2;</code>
     */
    public choreo.AccelOuterClass.AccelWithCovarianceOrBuilder getAccelOrBuilder() {
      return getAccel();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (accel_ != null) {
        output.writeMessage(2, getAccel());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (accel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAccel());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.AccelOuterClass.AccelWithCovarianceStamped)) {
        return super.equals(obj);
      }
      choreo.AccelOuterClass.AccelWithCovarianceStamped other = (choreo.AccelOuterClass.AccelWithCovarianceStamped) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && (hasAccel() == other.hasAccel());
      if (hasAccel()) {
        result = result && getAccel()
            .equals(other.getAccel());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasAccel()) {
        hash = (37 * hash) + ACCEL_FIELD_NUMBER;
        hash = (53 * hash) + getAccel().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovarianceStamped parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.AccelOuterClass.AccelWithCovarianceStamped prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.AccelWithCovarianceStamped}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.AccelWithCovarianceStamped)
        choreo.AccelOuterClass.AccelWithCovarianceStampedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovarianceStamped_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovarianceStamped_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.AccelOuterClass.AccelWithCovarianceStamped.class, choreo.AccelOuterClass.AccelWithCovarianceStamped.Builder.class);
      }

      // Construct using choreo.AccelOuterClass.AccelWithCovarianceStamped.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (accelBuilder_ == null) {
          accel_ = null;
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovarianceStamped_descriptor;
      }

      public choreo.AccelOuterClass.AccelWithCovarianceStamped getDefaultInstanceForType() {
        return choreo.AccelOuterClass.AccelWithCovarianceStamped.getDefaultInstance();
      }

      public choreo.AccelOuterClass.AccelWithCovarianceStamped build() {
        choreo.AccelOuterClass.AccelWithCovarianceStamped result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.AccelOuterClass.AccelWithCovarianceStamped buildPartial() {
        choreo.AccelOuterClass.AccelWithCovarianceStamped result = new choreo.AccelOuterClass.AccelWithCovarianceStamped(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (accelBuilder_ == null) {
          result.accel_ = accel_;
        } else {
          result.accel_ = accelBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.AccelOuterClass.AccelWithCovarianceStamped) {
          return mergeFrom((choreo.AccelOuterClass.AccelWithCovarianceStamped)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.AccelOuterClass.AccelWithCovarianceStamped other) {
        if (other == choreo.AccelOuterClass.AccelWithCovarianceStamped.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasAccel()) {
          mergeAccel(other.getAccel());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.AccelOuterClass.AccelWithCovarianceStamped parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.AccelOuterClass.AccelWithCovarianceStamped) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.HeaderOuterClass.Header header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder setHeader(
          choreo.HeaderOuterClass.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder mergeHeader(choreo.HeaderOuterClass.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              choreo.HeaderOuterClass.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      public choreo.HeaderOuterClass.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              choreo.HeaderOuterClass.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.choreo.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.HeaderOuterClass.Header, choreo.HeaderOuterClass.Header.Builder, choreo.HeaderOuterClass.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private choreo.AccelOuterClass.AccelWithCovariance accel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.AccelWithCovariance, choreo.AccelOuterClass.AccelWithCovariance.Builder, choreo.AccelOuterClass.AccelWithCovarianceOrBuilder> accelBuilder_;
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public boolean hasAccel() {
        return accelBuilder_ != null || accel_ != null;
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public choreo.AccelOuterClass.AccelWithCovariance getAccel() {
        if (accelBuilder_ == null) {
          return accel_ == null ? choreo.AccelOuterClass.AccelWithCovariance.getDefaultInstance() : accel_;
        } else {
          return accelBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public Builder setAccel(choreo.AccelOuterClass.AccelWithCovariance value) {
        if (accelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accel_ = value;
          onChanged();
        } else {
          accelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public Builder setAccel(
          choreo.AccelOuterClass.AccelWithCovariance.Builder builderForValue) {
        if (accelBuilder_ == null) {
          accel_ = builderForValue.build();
          onChanged();
        } else {
          accelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public Builder mergeAccel(choreo.AccelOuterClass.AccelWithCovariance value) {
        if (accelBuilder_ == null) {
          if (accel_ != null) {
            accel_ =
              choreo.AccelOuterClass.AccelWithCovariance.newBuilder(accel_).mergeFrom(value).buildPartial();
          } else {
            accel_ = value;
          }
          onChanged();
        } else {
          accelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public Builder clearAccel() {
        if (accelBuilder_ == null) {
          accel_ = null;
          onChanged();
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public choreo.AccelOuterClass.AccelWithCovariance.Builder getAccelBuilder() {
        
        onChanged();
        return getAccelFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      public choreo.AccelOuterClass.AccelWithCovarianceOrBuilder getAccelOrBuilder() {
        if (accelBuilder_ != null) {
          return accelBuilder_.getMessageOrBuilder();
        } else {
          return accel_ == null ?
              choreo.AccelOuterClass.AccelWithCovariance.getDefaultInstance() : accel_;
        }
      }
      /**
       * <code>.choreo.AccelWithCovariance accel = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.AccelWithCovariance, choreo.AccelOuterClass.AccelWithCovariance.Builder, choreo.AccelOuterClass.AccelWithCovarianceOrBuilder> 
          getAccelFieldBuilder() {
        if (accelBuilder_ == null) {
          accelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.AccelOuterClass.AccelWithCovariance, choreo.AccelOuterClass.AccelWithCovariance.Builder, choreo.AccelOuterClass.AccelWithCovarianceOrBuilder>(
                  getAccel(),
                  getParentForChildren(),
                  isClean());
          accel_ = null;
        }
        return accelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.AccelWithCovarianceStamped)
    }

    // @@protoc_insertion_point(class_scope:choreo.AccelWithCovarianceStamped)
    private static final choreo.AccelOuterClass.AccelWithCovarianceStamped DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.AccelOuterClass.AccelWithCovarianceStamped();
    }

    public static choreo.AccelOuterClass.AccelWithCovarianceStamped getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccelWithCovarianceStamped>
        PARSER = new com.google.protobuf.AbstractParser<AccelWithCovarianceStamped>() {
      public AccelWithCovarianceStamped parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccelWithCovarianceStamped(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccelWithCovarianceStamped> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccelWithCovarianceStamped> getParserForType() {
      return PARSER;
    }

    public choreo.AccelOuterClass.AccelWithCovarianceStamped getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccelWithCovarianceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.AccelWithCovariance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    boolean hasAccel();
    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    choreo.AccelOuterClass.Accel getAccel();
    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder();

    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    java.util.List<choreo.FloatOuterClass.Float64> 
        getCovarianceList();
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    choreo.FloatOuterClass.Float64 getCovariance(int index);
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    int getCovarianceCount();
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getCovarianceOrBuilderList();
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    choreo.FloatOuterClass.Float64OrBuilder getCovarianceOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code choreo.AccelWithCovariance}
   */
  public  static final class AccelWithCovariance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.AccelWithCovariance)
      AccelWithCovarianceOrBuilder {
    // Use AccelWithCovariance.newBuilder() to construct.
    private AccelWithCovariance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccelWithCovariance() {
      covariance_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AccelWithCovariance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.AccelOuterClass.Accel.Builder subBuilder = null;
              if (accel_ != null) {
                subBuilder = accel_.toBuilder();
              }
              accel_ = input.readMessage(choreo.AccelOuterClass.Accel.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accel_);
                accel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                covariance_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>();
                mutable_bitField0_ |= 0x00000002;
              }
              covariance_.add(
                  input.readMessage(choreo.FloatOuterClass.Float64.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          covariance_ = java.util.Collections.unmodifiableList(covariance_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovariance_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovariance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.AccelOuterClass.AccelWithCovariance.class, choreo.AccelOuterClass.AccelWithCovariance.Builder.class);
    }

    private int bitField0_;
    public static final int ACCEL_FIELD_NUMBER = 1;
    private choreo.AccelOuterClass.Accel accel_;
    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    public boolean hasAccel() {
      return accel_ != null;
    }
    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    public choreo.AccelOuterClass.Accel getAccel() {
      return accel_ == null ? choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
    }
    /**
     * <code>.choreo.Accel accel = 1;</code>
     */
    public choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder() {
      return getAccel();
    }

    public static final int COVARIANCE_FIELD_NUMBER = 2;
    private java.util.List<choreo.FloatOuterClass.Float64> covariance_;
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    public java.util.List<choreo.FloatOuterClass.Float64> getCovarianceList() {
      return covariance_;
    }
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
        getCovarianceOrBuilderList() {
      return covariance_;
    }
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    public int getCovarianceCount() {
      return covariance_.size();
    }
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    public choreo.FloatOuterClass.Float64 getCovariance(int index) {
      return covariance_.get(index);
    }
    /**
     * <code>repeated .choreo.Float64 covariance = 2;</code>
     */
    public choreo.FloatOuterClass.Float64OrBuilder getCovarianceOrBuilder(
        int index) {
      return covariance_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (accel_ != null) {
        output.writeMessage(1, getAccel());
      }
      for (int i = 0; i < covariance_.size(); i++) {
        output.writeMessage(2, covariance_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (accel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAccel());
      }
      for (int i = 0; i < covariance_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, covariance_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.AccelOuterClass.AccelWithCovariance)) {
        return super.equals(obj);
      }
      choreo.AccelOuterClass.AccelWithCovariance other = (choreo.AccelOuterClass.AccelWithCovariance) obj;

      boolean result = true;
      result = result && (hasAccel() == other.hasAccel());
      if (hasAccel()) {
        result = result && getAccel()
            .equals(other.getAccel());
      }
      result = result && getCovarianceList()
          .equals(other.getCovarianceList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccel()) {
        hash = (37 * hash) + ACCEL_FIELD_NUMBER;
        hash = (53 * hash) + getAccel().hashCode();
      }
      if (getCovarianceCount() > 0) {
        hash = (37 * hash) + COVARIANCE_FIELD_NUMBER;
        hash = (53 * hash) + getCovarianceList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.AccelWithCovariance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.AccelOuterClass.AccelWithCovariance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.AccelWithCovariance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.AccelWithCovariance)
        choreo.AccelOuterClass.AccelWithCovarianceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovariance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovariance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.AccelOuterClass.AccelWithCovariance.class, choreo.AccelOuterClass.AccelWithCovariance.Builder.class);
      }

      // Construct using choreo.AccelOuterClass.AccelWithCovariance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCovarianceFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (accelBuilder_ == null) {
          accel_ = null;
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }
        if (covarianceBuilder_ == null) {
          covariance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          covarianceBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.AccelOuterClass.internal_static_choreo_AccelWithCovariance_descriptor;
      }

      public choreo.AccelOuterClass.AccelWithCovariance getDefaultInstanceForType() {
        return choreo.AccelOuterClass.AccelWithCovariance.getDefaultInstance();
      }

      public choreo.AccelOuterClass.AccelWithCovariance build() {
        choreo.AccelOuterClass.AccelWithCovariance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.AccelOuterClass.AccelWithCovariance buildPartial() {
        choreo.AccelOuterClass.AccelWithCovariance result = new choreo.AccelOuterClass.AccelWithCovariance(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (accelBuilder_ == null) {
          result.accel_ = accel_;
        } else {
          result.accel_ = accelBuilder_.build();
        }
        if (covarianceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            covariance_ = java.util.Collections.unmodifiableList(covariance_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.covariance_ = covariance_;
        } else {
          result.covariance_ = covarianceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.AccelOuterClass.AccelWithCovariance) {
          return mergeFrom((choreo.AccelOuterClass.AccelWithCovariance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.AccelOuterClass.AccelWithCovariance other) {
        if (other == choreo.AccelOuterClass.AccelWithCovariance.getDefaultInstance()) return this;
        if (other.hasAccel()) {
          mergeAccel(other.getAccel());
        }
        if (covarianceBuilder_ == null) {
          if (!other.covariance_.isEmpty()) {
            if (covariance_.isEmpty()) {
              covariance_ = other.covariance_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCovarianceIsMutable();
              covariance_.addAll(other.covariance_);
            }
            onChanged();
          }
        } else {
          if (!other.covariance_.isEmpty()) {
            if (covarianceBuilder_.isEmpty()) {
              covarianceBuilder_.dispose();
              covarianceBuilder_ = null;
              covariance_ = other.covariance_;
              bitField0_ = (bitField0_ & ~0x00000002);
              covarianceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCovarianceFieldBuilder() : null;
            } else {
              covarianceBuilder_.addAllMessages(other.covariance_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.AccelOuterClass.AccelWithCovariance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.AccelOuterClass.AccelWithCovariance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private choreo.AccelOuterClass.Accel accel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder> accelBuilder_;
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public boolean hasAccel() {
        return accelBuilder_ != null || accel_ != null;
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public choreo.AccelOuterClass.Accel getAccel() {
        if (accelBuilder_ == null) {
          return accel_ == null ? choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
        } else {
          return accelBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public Builder setAccel(choreo.AccelOuterClass.Accel value) {
        if (accelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accel_ = value;
          onChanged();
        } else {
          accelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public Builder setAccel(
          choreo.AccelOuterClass.Accel.Builder builderForValue) {
        if (accelBuilder_ == null) {
          accel_ = builderForValue.build();
          onChanged();
        } else {
          accelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public Builder mergeAccel(choreo.AccelOuterClass.Accel value) {
        if (accelBuilder_ == null) {
          if (accel_ != null) {
            accel_ =
              choreo.AccelOuterClass.Accel.newBuilder(accel_).mergeFrom(value).buildPartial();
          } else {
            accel_ = value;
          }
          onChanged();
        } else {
          accelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public Builder clearAccel() {
        if (accelBuilder_ == null) {
          accel_ = null;
          onChanged();
        } else {
          accel_ = null;
          accelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public choreo.AccelOuterClass.Accel.Builder getAccelBuilder() {
        
        onChanged();
        return getAccelFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      public choreo.AccelOuterClass.AccelOrBuilder getAccelOrBuilder() {
        if (accelBuilder_ != null) {
          return accelBuilder_.getMessageOrBuilder();
        } else {
          return accel_ == null ?
              choreo.AccelOuterClass.Accel.getDefaultInstance() : accel_;
        }
      }
      /**
       * <code>.choreo.Accel accel = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder> 
          getAccelFieldBuilder() {
        if (accelBuilder_ == null) {
          accelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.AccelOuterClass.Accel, choreo.AccelOuterClass.Accel.Builder, choreo.AccelOuterClass.AccelOrBuilder>(
                  getAccel(),
                  getParentForChildren(),
                  isClean());
          accel_ = null;
        }
        return accelBuilder_;
      }

      private java.util.List<choreo.FloatOuterClass.Float64> covariance_ =
        java.util.Collections.emptyList();
      private void ensureCovarianceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          covariance_ = new java.util.ArrayList<choreo.FloatOuterClass.Float64>(covariance_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> covarianceBuilder_;

      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64> getCovarianceList() {
        if (covarianceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(covariance_);
        } else {
          return covarianceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public int getCovarianceCount() {
        if (covarianceBuilder_ == null) {
          return covariance_.size();
        } else {
          return covarianceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64 getCovariance(int index) {
        if (covarianceBuilder_ == null) {
          return covariance_.get(index);
        } else {
          return covarianceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder setCovariance(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (covarianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCovarianceIsMutable();
          covariance_.set(index, value);
          onChanged();
        } else {
          covarianceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder setCovariance(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (covarianceBuilder_ == null) {
          ensureCovarianceIsMutable();
          covariance_.set(index, builderForValue.build());
          onChanged();
        } else {
          covarianceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder addCovariance(choreo.FloatOuterClass.Float64 value) {
        if (covarianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCovarianceIsMutable();
          covariance_.add(value);
          onChanged();
        } else {
          covarianceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder addCovariance(
          int index, choreo.FloatOuterClass.Float64 value) {
        if (covarianceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCovarianceIsMutable();
          covariance_.add(index, value);
          onChanged();
        } else {
          covarianceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder addCovariance(
          choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (covarianceBuilder_ == null) {
          ensureCovarianceIsMutable();
          covariance_.add(builderForValue.build());
          onChanged();
        } else {
          covarianceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder addCovariance(
          int index, choreo.FloatOuterClass.Float64.Builder builderForValue) {
        if (covarianceBuilder_ == null) {
          ensureCovarianceIsMutable();
          covariance_.add(index, builderForValue.build());
          onChanged();
        } else {
          covarianceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder addAllCovariance(
          java.lang.Iterable<? extends choreo.FloatOuterClass.Float64> values) {
        if (covarianceBuilder_ == null) {
          ensureCovarianceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, covariance_);
          onChanged();
        } else {
          covarianceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder clearCovariance() {
        if (covarianceBuilder_ == null) {
          covariance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          covarianceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public Builder removeCovariance(int index) {
        if (covarianceBuilder_ == null) {
          ensureCovarianceIsMutable();
          covariance_.remove(index);
          onChanged();
        } else {
          covarianceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder getCovarianceBuilder(
          int index) {
        return getCovarianceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64OrBuilder getCovarianceOrBuilder(
          int index) {
        if (covarianceBuilder_ == null) {
          return covariance_.get(index);  } else {
          return covarianceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public java.util.List<? extends choreo.FloatOuterClass.Float64OrBuilder> 
           getCovarianceOrBuilderList() {
        if (covarianceBuilder_ != null) {
          return covarianceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(covariance_);
        }
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addCovarianceBuilder() {
        return getCovarianceFieldBuilder().addBuilder(
            choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public choreo.FloatOuterClass.Float64.Builder addCovarianceBuilder(
          int index) {
        return getCovarianceFieldBuilder().addBuilder(
            index, choreo.FloatOuterClass.Float64.getDefaultInstance());
      }
      /**
       * <code>repeated .choreo.Float64 covariance = 2;</code>
       */
      public java.util.List<choreo.FloatOuterClass.Float64.Builder> 
           getCovarianceBuilderList() {
        return getCovarianceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder> 
          getCovarianceFieldBuilder() {
        if (covarianceBuilder_ == null) {
          covarianceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              choreo.FloatOuterClass.Float64, choreo.FloatOuterClass.Float64.Builder, choreo.FloatOuterClass.Float64OrBuilder>(
                  covariance_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          covariance_ = null;
        }
        return covarianceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.AccelWithCovariance)
    }

    // @@protoc_insertion_point(class_scope:choreo.AccelWithCovariance)
    private static final choreo.AccelOuterClass.AccelWithCovariance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.AccelOuterClass.AccelWithCovariance();
    }

    public static choreo.AccelOuterClass.AccelWithCovariance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccelWithCovariance>
        PARSER = new com.google.protobuf.AbstractParser<AccelWithCovariance>() {
      public AccelWithCovariance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccelWithCovariance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccelWithCovariance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccelWithCovariance> getParserForType() {
      return PARSER;
    }

    public choreo.AccelOuterClass.AccelWithCovariance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:choreo.Accel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    boolean hasLinear();
    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    choreo.Vector.Vector3 getLinear();
    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    choreo.Vector.Vector3OrBuilder getLinearOrBuilder();

    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    boolean hasAngular();
    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    choreo.Vector.Vector3 getAngular();
    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    choreo.Vector.Vector3OrBuilder getAngularOrBuilder();
  }
  /**
   * Protobuf type {@code choreo.Accel}
   */
  public  static final class Accel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:choreo.Accel)
      AccelOrBuilder {
    // Use Accel.newBuilder() to construct.
    private Accel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Accel() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Accel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              choreo.Vector.Vector3.Builder subBuilder = null;
              if (linear_ != null) {
                subBuilder = linear_.toBuilder();
              }
              linear_ = input.readMessage(choreo.Vector.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(linear_);
                linear_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              choreo.Vector.Vector3.Builder subBuilder = null;
              if (angular_ != null) {
                subBuilder = angular_.toBuilder();
              }
              angular_ = input.readMessage(choreo.Vector.Vector3.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angular_);
                angular_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return choreo.AccelOuterClass.internal_static_choreo_Accel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return choreo.AccelOuterClass.internal_static_choreo_Accel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              choreo.AccelOuterClass.Accel.class, choreo.AccelOuterClass.Accel.Builder.class);
    }

    public static final int LINEAR_FIELD_NUMBER = 1;
    private choreo.Vector.Vector3 linear_;
    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    public boolean hasLinear() {
      return linear_ != null;
    }
    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    public choreo.Vector.Vector3 getLinear() {
      return linear_ == null ? choreo.Vector.Vector3.getDefaultInstance() : linear_;
    }
    /**
     * <code>.choreo.Vector3 linear = 1;</code>
     */
    public choreo.Vector.Vector3OrBuilder getLinearOrBuilder() {
      return getLinear();
    }

    public static final int ANGULAR_FIELD_NUMBER = 2;
    private choreo.Vector.Vector3 angular_;
    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    public boolean hasAngular() {
      return angular_ != null;
    }
    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    public choreo.Vector.Vector3 getAngular() {
      return angular_ == null ? choreo.Vector.Vector3.getDefaultInstance() : angular_;
    }
    /**
     * <code>.choreo.Vector3 angular = 2;</code>
     */
    public choreo.Vector.Vector3OrBuilder getAngularOrBuilder() {
      return getAngular();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (linear_ != null) {
        output.writeMessage(1, getLinear());
      }
      if (angular_ != null) {
        output.writeMessage(2, getAngular());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (linear_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLinear());
      }
      if (angular_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAngular());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof choreo.AccelOuterClass.Accel)) {
        return super.equals(obj);
      }
      choreo.AccelOuterClass.Accel other = (choreo.AccelOuterClass.Accel) obj;

      boolean result = true;
      result = result && (hasLinear() == other.hasLinear());
      if (hasLinear()) {
        result = result && getLinear()
            .equals(other.getLinear());
      }
      result = result && (hasAngular() == other.hasAngular());
      if (hasAngular()) {
        result = result && getAngular()
            .equals(other.getAngular());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLinear()) {
        hash = (37 * hash) + LINEAR_FIELD_NUMBER;
        hash = (53 * hash) + getLinear().hashCode();
      }
      if (hasAngular()) {
        hash = (37 * hash) + ANGULAR_FIELD_NUMBER;
        hash = (53 * hash) + getAngular().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static choreo.AccelOuterClass.Accel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.Accel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.Accel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static choreo.AccelOuterClass.Accel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(choreo.AccelOuterClass.Accel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code choreo.Accel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:choreo.Accel)
        choreo.AccelOuterClass.AccelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return choreo.AccelOuterClass.internal_static_choreo_Accel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return choreo.AccelOuterClass.internal_static_choreo_Accel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                choreo.AccelOuterClass.Accel.class, choreo.AccelOuterClass.Accel.Builder.class);
      }

      // Construct using choreo.AccelOuterClass.Accel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (linearBuilder_ == null) {
          linear_ = null;
        } else {
          linear_ = null;
          linearBuilder_ = null;
        }
        if (angularBuilder_ == null) {
          angular_ = null;
        } else {
          angular_ = null;
          angularBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return choreo.AccelOuterClass.internal_static_choreo_Accel_descriptor;
      }

      public choreo.AccelOuterClass.Accel getDefaultInstanceForType() {
        return choreo.AccelOuterClass.Accel.getDefaultInstance();
      }

      public choreo.AccelOuterClass.Accel build() {
        choreo.AccelOuterClass.Accel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public choreo.AccelOuterClass.Accel buildPartial() {
        choreo.AccelOuterClass.Accel result = new choreo.AccelOuterClass.Accel(this);
        if (linearBuilder_ == null) {
          result.linear_ = linear_;
        } else {
          result.linear_ = linearBuilder_.build();
        }
        if (angularBuilder_ == null) {
          result.angular_ = angular_;
        } else {
          result.angular_ = angularBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof choreo.AccelOuterClass.Accel) {
          return mergeFrom((choreo.AccelOuterClass.Accel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(choreo.AccelOuterClass.Accel other) {
        if (other == choreo.AccelOuterClass.Accel.getDefaultInstance()) return this;
        if (other.hasLinear()) {
          mergeLinear(other.getLinear());
        }
        if (other.hasAngular()) {
          mergeAngular(other.getAngular());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        choreo.AccelOuterClass.Accel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (choreo.AccelOuterClass.Accel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private choreo.Vector.Vector3 linear_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> linearBuilder_;
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public boolean hasLinear() {
        return linearBuilder_ != null || linear_ != null;
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public choreo.Vector.Vector3 getLinear() {
        if (linearBuilder_ == null) {
          return linear_ == null ? choreo.Vector.Vector3.getDefaultInstance() : linear_;
        } else {
          return linearBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public Builder setLinear(choreo.Vector.Vector3 value) {
        if (linearBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          linear_ = value;
          onChanged();
        } else {
          linearBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public Builder setLinear(
          choreo.Vector.Vector3.Builder builderForValue) {
        if (linearBuilder_ == null) {
          linear_ = builderForValue.build();
          onChanged();
        } else {
          linearBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public Builder mergeLinear(choreo.Vector.Vector3 value) {
        if (linearBuilder_ == null) {
          if (linear_ != null) {
            linear_ =
              choreo.Vector.Vector3.newBuilder(linear_).mergeFrom(value).buildPartial();
          } else {
            linear_ = value;
          }
          onChanged();
        } else {
          linearBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public Builder clearLinear() {
        if (linearBuilder_ == null) {
          linear_ = null;
          onChanged();
        } else {
          linear_ = null;
          linearBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public choreo.Vector.Vector3.Builder getLinearBuilder() {
        
        onChanged();
        return getLinearFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      public choreo.Vector.Vector3OrBuilder getLinearOrBuilder() {
        if (linearBuilder_ != null) {
          return linearBuilder_.getMessageOrBuilder();
        } else {
          return linear_ == null ?
              choreo.Vector.Vector3.getDefaultInstance() : linear_;
        }
      }
      /**
       * <code>.choreo.Vector3 linear = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> 
          getLinearFieldBuilder() {
        if (linearBuilder_ == null) {
          linearBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder>(
                  getLinear(),
                  getParentForChildren(),
                  isClean());
          linear_ = null;
        }
        return linearBuilder_;
      }

      private choreo.Vector.Vector3 angular_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> angularBuilder_;
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public boolean hasAngular() {
        return angularBuilder_ != null || angular_ != null;
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public choreo.Vector.Vector3 getAngular() {
        if (angularBuilder_ == null) {
          return angular_ == null ? choreo.Vector.Vector3.getDefaultInstance() : angular_;
        } else {
          return angularBuilder_.getMessage();
        }
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public Builder setAngular(choreo.Vector.Vector3 value) {
        if (angularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angular_ = value;
          onChanged();
        } else {
          angularBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public Builder setAngular(
          choreo.Vector.Vector3.Builder builderForValue) {
        if (angularBuilder_ == null) {
          angular_ = builderForValue.build();
          onChanged();
        } else {
          angularBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public Builder mergeAngular(choreo.Vector.Vector3 value) {
        if (angularBuilder_ == null) {
          if (angular_ != null) {
            angular_ =
              choreo.Vector.Vector3.newBuilder(angular_).mergeFrom(value).buildPartial();
          } else {
            angular_ = value;
          }
          onChanged();
        } else {
          angularBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public Builder clearAngular() {
        if (angularBuilder_ == null) {
          angular_ = null;
          onChanged();
        } else {
          angular_ = null;
          angularBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public choreo.Vector.Vector3.Builder getAngularBuilder() {
        
        onChanged();
        return getAngularFieldBuilder().getBuilder();
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      public choreo.Vector.Vector3OrBuilder getAngularOrBuilder() {
        if (angularBuilder_ != null) {
          return angularBuilder_.getMessageOrBuilder();
        } else {
          return angular_ == null ?
              choreo.Vector.Vector3.getDefaultInstance() : angular_;
        }
      }
      /**
       * <code>.choreo.Vector3 angular = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder> 
          getAngularFieldBuilder() {
        if (angularBuilder_ == null) {
          angularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              choreo.Vector.Vector3, choreo.Vector.Vector3.Builder, choreo.Vector.Vector3OrBuilder>(
                  getAngular(),
                  getParentForChildren(),
                  isClean());
          angular_ = null;
        }
        return angularBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:choreo.Accel)
    }

    // @@protoc_insertion_point(class_scope:choreo.Accel)
    private static final choreo.AccelOuterClass.Accel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new choreo.AccelOuterClass.Accel();
    }

    public static choreo.AccelOuterClass.Accel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Accel>
        PARSER = new com.google.protobuf.AbstractParser<Accel>() {
      public Accel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Accel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Accel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Accel> getParserForType() {
      return PARSER;
    }

    public choreo.AccelOuterClass.Accel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_AccelStamped_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_AccelStamped_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_AccelWithCovarianceStamped_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_AccelWithCovarianceStamped_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_AccelWithCovariance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_AccelWithCovariance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_choreo_Accel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_choreo_Accel_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025geometric/accel.proto\022\006choreo\032\026primiti" +
      "ve/header.proto\032\025primitive/float.proto\032\026" +
      "geometric/vector.proto\"L\n\014AccelStamped\022\036" +
      "\n\006header\030\001 \001(\0132\016.choreo.Header\022\034\n\005accel\030" +
      "\002 \001(\0132\r.choreo.Accel\"h\n\032AccelWithCovaria" +
      "nceStamped\022\036\n\006header\030\001 \001(\0132\016.choreo.Head" +
      "er\022*\n\005accel\030\002 \001(\0132\033.choreo.AccelWithCova" +
      "riance\"X\n\023AccelWithCovariance\022\034\n\005accel\030\001" +
      " \001(\0132\r.choreo.Accel\022#\n\ncovariance\030\002 \003(\0132" +
      "\017.choreo.Float64\"J\n\005Accel\022\037\n\006linear\030\001 \001(",
      "\0132\017.choreo.Vector3\022 \n\007angular\030\002 \001(\0132\017.ch" +
      "oreo.Vector3B1Z/github.com/RobotStudio/c" +
      "horeo-msg/msg/geometricb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          choreo.HeaderOuterClass.getDescriptor(),
          choreo.FloatOuterClass.getDescriptor(),
          choreo.Vector.getDescriptor(),
        }, assigner);
    internal_static_choreo_AccelStamped_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_choreo_AccelStamped_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_AccelStamped_descriptor,
        new java.lang.String[] { "Header", "Accel", });
    internal_static_choreo_AccelWithCovarianceStamped_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_choreo_AccelWithCovarianceStamped_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_AccelWithCovarianceStamped_descriptor,
        new java.lang.String[] { "Header", "Accel", });
    internal_static_choreo_AccelWithCovariance_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_choreo_AccelWithCovariance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_AccelWithCovariance_descriptor,
        new java.lang.String[] { "Accel", "Covariance", });
    internal_static_choreo_Accel_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_choreo_Accel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_choreo_Accel_descriptor,
        new java.lang.String[] { "Linear", "Angular", });
    choreo.HeaderOuterClass.getDescriptor();
    choreo.FloatOuterClass.getDescriptor();
    choreo.Vector.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
