// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geometric/pose.proto

/*
Package choreo is a generated protocol buffer package.

It is generated from these files:
	geometric/pose.proto

It has these top-level messages:
	PoseStamped
	PoseWithCovarianceStamped
	Pose2DStamped
	Pose
	PoseArray
	Pose2D
	PoseWithCovariance
*/
package choreo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import choreo1 "primitive"
import choreo2 "primitive"
import choreo3 "geometric"
import choreo4 "geometric"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PoseStamped struct {
	Header *choreo1.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pose   *Pose           `protobuf:"bytes,2,opt,name=pose" json:"pose,omitempty"`
}

func (m *PoseStamped) Reset()                    { *m = PoseStamped{} }
func (m *PoseStamped) String() string            { return proto.CompactTextString(m) }
func (*PoseStamped) ProtoMessage()               {}
func (*PoseStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PoseStamped) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PoseStamped) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

type PoseWithCovarianceStamped struct {
	Header *choreo1.Header     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pose   *PoseWithCovariance `protobuf:"bytes,2,opt,name=pose" json:"pose,omitempty"`
}

func (m *PoseWithCovarianceStamped) Reset()                    { *m = PoseWithCovarianceStamped{} }
func (m *PoseWithCovarianceStamped) String() string            { return proto.CompactTextString(m) }
func (*PoseWithCovarianceStamped) ProtoMessage()               {}
func (*PoseWithCovarianceStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PoseWithCovarianceStamped) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PoseWithCovarianceStamped) GetPose() *PoseWithCovariance {
	if m != nil {
		return m.Pose
	}
	return nil
}

type Pose2DStamped struct {
	Header *choreo1.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pose   *Pose2D         `protobuf:"bytes,2,opt,name=pose" json:"pose,omitempty"`
}

func (m *Pose2DStamped) Reset()                    { *m = Pose2DStamped{} }
func (m *Pose2DStamped) String() string            { return proto.CompactTextString(m) }
func (*Pose2DStamped) ProtoMessage()               {}
func (*Pose2DStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Pose2DStamped) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Pose2DStamped) GetPose() *Pose2D {
	if m != nil {
		return m.Pose
	}
	return nil
}

type Pose struct {
	Position    *choreo3.Point      `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Orientation *choreo4.Quaternion `protobuf:"bytes,2,opt,name=orientation" json:"orientation,omitempty"`
}

func (m *Pose) Reset()                    { *m = Pose{} }
func (m *Pose) String() string            { return proto.CompactTextString(m) }
func (*Pose) ProtoMessage()               {}
func (*Pose) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Pose) GetPosition() *choreo3.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Pose) GetOrientation() *choreo4.Quaternion {
	if m != nil {
		return m.Orientation
	}
	return nil
}

type PoseArray struct {
	Header *choreo1.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Poses  []*Pose         `protobuf:"bytes,2,rep,name=poses" json:"poses,omitempty"`
}

func (m *PoseArray) Reset()                    { *m = PoseArray{} }
func (m *PoseArray) String() string            { return proto.CompactTextString(m) }
func (*PoseArray) ProtoMessage()               {}
func (*PoseArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PoseArray) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PoseArray) GetPoses() []*Pose {
	if m != nil {
		return m.Poses
	}
	return nil
}

type Pose2D struct {
	X     *choreo2.Float64 `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Y     *choreo2.Float64 `protobuf:"bytes,2,opt,name=y" json:"y,omitempty"`
	Theta *choreo2.Float64 `protobuf:"bytes,3,opt,name=theta" json:"theta,omitempty"`
}

func (m *Pose2D) Reset()                    { *m = Pose2D{} }
func (m *Pose2D) String() string            { return proto.CompactTextString(m) }
func (*Pose2D) ProtoMessage()               {}
func (*Pose2D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Pose2D) GetX() *choreo2.Float64 {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Pose2D) GetY() *choreo2.Float64 {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Pose2D) GetTheta() *choreo2.Float64 {
	if m != nil {
		return m.Theta
	}
	return nil
}

type PoseWithCovariance struct {
	Pose       *Pose              `protobuf:"bytes,1,opt,name=pose" json:"pose,omitempty"`
	Covariance []*choreo2.Float64 `protobuf:"bytes,2,rep,name=covariance" json:"covariance,omitempty"`
}

func (m *PoseWithCovariance) Reset()                    { *m = PoseWithCovariance{} }
func (m *PoseWithCovariance) String() string            { return proto.CompactTextString(m) }
func (*PoseWithCovariance) ProtoMessage()               {}
func (*PoseWithCovariance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PoseWithCovariance) GetPose() *Pose {
	if m != nil {
		return m.Pose
	}
	return nil
}

func (m *PoseWithCovariance) GetCovariance() []*choreo2.Float64 {
	if m != nil {
		return m.Covariance
	}
	return nil
}

func init() {
	proto.RegisterType((*PoseStamped)(nil), "choreo.PoseStamped")
	proto.RegisterType((*PoseWithCovarianceStamped)(nil), "choreo.PoseWithCovarianceStamped")
	proto.RegisterType((*Pose2DStamped)(nil), "choreo.Pose2DStamped")
	proto.RegisterType((*Pose)(nil), "choreo.Pose")
	proto.RegisterType((*PoseArray)(nil), "choreo.PoseArray")
	proto.RegisterType((*Pose2D)(nil), "choreo.Pose2D")
	proto.RegisterType((*PoseWithCovariance)(nil), "choreo.PoseWithCovariance")
}

func init() { proto.RegisterFile("geometric/pose.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xdf, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xe9, 0x7e, 0x94, 0xef, 0xf7, 0xce, 0x4d, 0x08, 0x2a, 0xb5, 0x20, 0x8c, 0x80, 0xa2,
	0x2f, 0x1d, 0xcc, 0xe1, 0xbb, 0x38, 0xc4, 0x47, 0xad, 0x0f, 0x7b, 0xf0, 0x29, 0x76, 0x71, 0x0d,
	0xd8, 0xdc, 0x9a, 0xc6, 0xb1, 0xfd, 0xf7, 0x92, 0x26, 0xed, 0x3a, 0xaa, 0x0f, 0x7b, 0xcc, 0x39,
	0x87, 0xf3, 0xb9, 0xe1, 0x5e, 0x38, 0x59, 0x71, 0xcc, 0xb8, 0x56, 0x22, 0x99, 0xe4, 0x58, 0xf0,
	0x28, 0x57, 0xa8, 0x91, 0xf8, 0x49, 0x8a, 0x8a, 0x63, 0x78, 0x96, 0x2b, 0x91, 0x09, 0x2d, 0xd6,
	0x7c, 0x92, 0x72, 0xb6, 0xe4, 0xca, 0xfa, 0xe1, 0xe9, 0x4e, 0xff, 0xf8, 0x44, 0xa6, 0x2b, 0xb9,
	0x59, 0x26, 0x64, 0x25, 0x87, 0x3b, 0xf9, 0xeb, 0x9b, 0x69, 0xae, 0xa4, 0x40, 0x69, 0x3d, 0xba,
	0x80, 0xc1, 0x33, 0x16, 0xfc, 0x55, 0xb3, 0x2c, 0xe7, 0x4b, 0x72, 0x05, 0xbe, 0x05, 0x05, 0xde,
	0xd8, 0xbb, 0x1e, 0x4c, 0x47, 0x91, 0x9d, 0x24, 0x7a, 0x2a, 0xd5, 0xd8, 0xb9, 0x64, 0x0c, 0x3d,
	0x33, 0x6e, 0xd0, 0x29, 0x53, 0x47, 0x55, 0xca, 0x54, 0xc5, 0xa5, 0x43, 0x0b, 0x38, 0x37, 0xaf,
	0x85, 0xd0, 0xe9, 0x03, 0xae, 0x99, 0x12, 0x4c, 0x26, 0x07, 0x63, 0xa2, 0x3d, 0x4c, 0xd8, 0xc4,
	0xec, 0x17, 0x3b, 0xe8, 0x1b, 0x0c, 0x8d, 0x37, 0x9d, 0x1f, 0x0a, 0xa2, 0x7b, 0xa0, 0x51, 0x13,
	0x34, 0x9d, 0xbb, 0xf2, 0x15, 0xf4, 0xcc, 0x9b, 0xdc, 0xc0, 0xbf, 0x1c, 0x0b, 0xa1, 0x05, 0x4a,
	0xd7, 0x3a, 0xdc, 0xe5, 0x85, 0xd4, 0x71, 0x6d, 0x93, 0x19, 0x0c, 0x50, 0x09, 0x2e, 0x35, 0x2b,
	0xd3, 0xb6, 0x9d, 0x54, 0xe9, 0x97, 0x7a, 0x19, 0x71, 0x33, 0x46, 0x17, 0xf0, 0xdf, 0x80, 0xee,
	0x95, 0x62, 0xdb, 0x03, 0x7e, 0xd0, 0x37, 0x53, 0x16, 0x41, 0x67, 0xdc, 0x6d, 0xad, 0xc4, 0x5a,
	0x34, 0x03, 0xdf, 0xfe, 0x88, 0x5c, 0x80, 0xb7, 0x71, 0x85, 0xc7, 0x55, 0xf2, 0xd1, 0x5c, 0xd2,
	0xdd, 0x2c, 0xf6, 0x36, 0xc6, 0xde, 0xba, 0x69, 0xdb, 0xf6, 0x96, 0x5c, 0x42, 0x5f, 0xa7, 0x5c,
	0xb3, 0xa0, 0xfb, 0x7b, 0xc4, 0xba, 0x74, 0x05, 0xa4, 0xbd, 0xa9, 0xfa, 0x74, 0xbc, 0xbf, 0x4e,
	0x87, 0x4c, 0x00, 0x92, 0x3a, 0xef, 0xfe, 0xd3, 0x62, 0x34, 0x22, 0xef, 0x7e, 0x79, 0xcb, 0xb7,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x40, 0x71, 0x73, 0x0a, 0x4d, 0x03, 0x00, 0x00,
}
