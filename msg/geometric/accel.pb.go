// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geometric/accel.proto

/*
Package choreo is a generated protocol buffer package.

It is generated from these files:
	geometric/accel.proto

It has these top-level messages:
	AccelStamped
	AccelWithCovarianceStamped
	AccelWithCovariance
	Accel
*/
package choreo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import choreo1 "primitive"
import choreo2 "primitive"
import choreo3 "geometric"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccelStamped struct {
	Header *choreo1.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Accel  *Accel          `protobuf:"bytes,2,opt,name=accel" json:"accel,omitempty"`
}

func (m *AccelStamped) Reset()                    { *m = AccelStamped{} }
func (m *AccelStamped) String() string            { return proto.CompactTextString(m) }
func (*AccelStamped) ProtoMessage()               {}
func (*AccelStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccelStamped) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AccelStamped) GetAccel() *Accel {
	if m != nil {
		return m.Accel
	}
	return nil
}

type AccelWithCovarianceStamped struct {
	Header *choreo1.Header      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Accel  *AccelWithCovariance `protobuf:"bytes,2,opt,name=accel" json:"accel,omitempty"`
}

func (m *AccelWithCovarianceStamped) Reset()                    { *m = AccelWithCovarianceStamped{} }
func (m *AccelWithCovarianceStamped) String() string            { return proto.CompactTextString(m) }
func (*AccelWithCovarianceStamped) ProtoMessage()               {}
func (*AccelWithCovarianceStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccelWithCovarianceStamped) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AccelWithCovarianceStamped) GetAccel() *AccelWithCovariance {
	if m != nil {
		return m.Accel
	}
	return nil
}

type AccelWithCovariance struct {
	Accel      *Accel             `protobuf:"bytes,1,opt,name=accel" json:"accel,omitempty"`
	Covariance []*choreo2.Float64 `protobuf:"bytes,2,rep,name=covariance" json:"covariance,omitempty"`
}

func (m *AccelWithCovariance) Reset()                    { *m = AccelWithCovariance{} }
func (m *AccelWithCovariance) String() string            { return proto.CompactTextString(m) }
func (*AccelWithCovariance) ProtoMessage()               {}
func (*AccelWithCovariance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccelWithCovariance) GetAccel() *Accel {
	if m != nil {
		return m.Accel
	}
	return nil
}

func (m *AccelWithCovariance) GetCovariance() []*choreo2.Float64 {
	if m != nil {
		return m.Covariance
	}
	return nil
}

type Accel struct {
	Linear  *choreo3.Vector3 `protobuf:"bytes,1,opt,name=linear" json:"linear,omitempty"`
	Angular *choreo3.Vector3 `protobuf:"bytes,2,opt,name=angular" json:"angular,omitempty"`
}

func (m *Accel) Reset()                    { *m = Accel{} }
func (m *Accel) String() string            { return proto.CompactTextString(m) }
func (*Accel) ProtoMessage()               {}
func (*Accel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Accel) GetLinear() *choreo3.Vector3 {
	if m != nil {
		return m.Linear
	}
	return nil
}

func (m *Accel) GetAngular() *choreo3.Vector3 {
	if m != nil {
		return m.Angular
	}
	return nil
}

func init() {
	proto.RegisterType((*AccelStamped)(nil), "choreo.AccelStamped")
	proto.RegisterType((*AccelWithCovarianceStamped)(nil), "choreo.AccelWithCovarianceStamped")
	proto.RegisterType((*AccelWithCovariance)(nil), "choreo.AccelWithCovariance")
	proto.RegisterType((*Accel)(nil), "choreo.Accel")
}

func init() { proto.RegisterFile("geometric/accel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcd, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0xa5, 0x11, 0xa6, 0x7e, 0xc0, 0x4a, 0x4b, 0x88, 0x97, 0x12, 0x41, 0xeb, 0x25,
	0xc1, 0x56, 0xbc, 0x8b, 0x20, 0x9e, 0x23, 0xe8, 0xa1, 0xa7, 0x71, 0x3b, 0x36, 0x8b, 0x49, 0x36,
	0x2c, 0x6b, 0xfc, 0xf7, 0xa5, 0xfb, 0x91, 0x18, 0xd4, 0x43, 0x8f, 0x3b, 0xef, 0xcd, 0xef, 0xcd,
	0xcc, 0xc2, 0x74, 0x4b, 0xb2, 0x22, 0xad, 0x04, 0xcf, 0x90, 0x73, 0x2a, 0xd3, 0x46, 0x49, 0x2d,
	0x59, 0xc8, 0x0b, 0xa9, 0x48, 0xc6, 0xb3, 0x46, 0x89, 0x4a, 0x68, 0xd1, 0x52, 0x56, 0x10, 0x6e,
	0x48, 0x59, 0x3d, 0x9e, 0xf6, 0xf5, 0xf7, 0x52, 0xa2, 0x76, 0xe5, 0x59, 0x4f, 0x6b, 0x89, 0x6b,
	0xe9, 0xec, 0xc9, 0x1a, 0x8e, 0xee, 0x77, 0xf4, 0x67, 0x8d, 0x55, 0x43, 0x1b, 0x76, 0x09, 0xa1,
	0xc5, 0x45, 0xc1, 0x3c, 0x58, 0x4c, 0x96, 0x27, 0xa9, 0xcd, 0x4b, 0x9f, 0x4c, 0x35, 0x77, 0x2a,
	0xbb, 0x80, 0xb1, 0x99, 0x2a, 0x1a, 0x19, 0xdb, 0xb1, 0xb7, 0x19, 0x58, 0x6e, 0xb5, 0xe4, 0x0b,
	0x62, 0xf3, 0x7e, 0x15, 0xba, 0x78, 0x90, 0x2d, 0x2a, 0x81, 0x35, 0xa7, 0x7d, 0xa3, 0x6e, 0x86,
	0x51, 0xe7, 0x83, 0xa8, 0x21, 0xda, 0x07, 0x7f, 0xc0, 0xd9, 0x1f, 0x6a, 0x3f, 0x74, 0xf0, 0xff,
	0xd0, 0x2c, 0x03, 0xe0, 0x5d, 0x4b, 0x34, 0x9a, 0x1f, 0x2c, 0x26, 0xcb, 0x53, 0xef, 0x7c, 0xdc,
	0x9d, 0xf4, 0xee, 0x36, 0xff, 0x61, 0x49, 0xd6, 0x30, 0x36, 0x00, 0x76, 0x05, 0x61, 0x29, 0x6a,
	0x42, 0xbf, 0x50, 0xd7, 0xf5, 0x62, 0x2e, 0xbe, 0xca, 0x9d, 0xcc, 0xae, 0xe1, 0x10, 0xeb, 0xed,
	0x67, 0x89, 0xca, 0xed, 0xf4, 0xcb, 0xe9, 0xf5, 0xb7, 0xd0, 0x7c, 0xd3, 0xea, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x02, 0xa4, 0x70, 0x0a, 0x0e, 0x02, 0x00, 0x00,
}
